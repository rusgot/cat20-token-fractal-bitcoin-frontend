{"mappings":"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K,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IA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IAAW;IAAO;IAAS;IAAW;IAAU;IAAS;IAAW;IAAS;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAO;IAAS;IAAS;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAS;IAAO;IAAY;IAAU;IAAW;IAAO;IAAU;IAAW;IAAS;IAAU;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAU;IAAY;IAAW;IAAW;IAAS;IAAU;IAAQ;IAAU;IAAQ;IAAU;IAAW;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAS;IAAW;IAAQ;IAAQ;IAAY;IAAS;IAAS;IAAO;IAAW;IAAW;IAAQ;IAAU;IAAU;IAAU;IAAO;IAAU;IAAW;IAAU;IAAQ;IAAS;IAAU;IAAU;IAAS;IAAQ;IAAU;IAAW;IAAU;IAAQ;IAAU;IAAS;IAAU;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAW;IAAQ;IAAU;IAAU;IAAW;IAAU;IAAW;IAAO;IAAQ;IAAQ;IAAW;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAS;IAAS;IAAS;IAAW;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAU;IAAQ;IAAU;IAAU;IAAO;IAAO;IAAW;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAS;IAAU;IAAS;IAAU;IAAS;IAAS;IAAY;IAAU;IAAU;IAAS;IAAW;IAAS;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAQ;IAAQ;IAAU;IAAU;IAAU;IAAU;IAAU;IAAS;IAAO;IAAY;IAAQ;IAAU;IAAS;IAAQ;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAO;IAAS;IAAU;IAAS;IAAU;IAAS;IAAU;IAAU;IAAW;IAAW;IAAW;IAAO;IAAU;IAAQ;IAAS;IAAU;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAU;IAAU;IAAO;IAAW;IAAS;IAAY;IAAU;IAAU;IAAS;IAAW;IAAQ;IAAW;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAS;IAAS;IAAY;IAAU;IAAS;IAAW;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAW;IAAS;IAAS;IAAW;IAAU;IAAU;IAAW;IAAW;IAAS;IAAS;IAAS;IAAY;IAAU;IAAW;IAAQ;IAAS;IAAS;IAAQ;IAAW;IAAQ;IAAQ;IAAS;IAAS;IAAU;IAAS;IAAU;IAAS;IAAS;IAAU;IAAQ;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAW;IAAU;IAAS;IAAS;IAAW;IAAQ;IAAU;IAAQ;IAAQ;IAAW;IAAS;IAAU;IAAW;IAAQ;IAAW;IAAS;IAAU;IAAW;IAAW;IAAW;IAAW;IAAY;IAAW;IAAY;IAAW;IAAY;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAQ;IAAQ;IAAW;IAAQ;IAAU;IAAS;IAAW;IAAU;IAAU;IAAU;IAAS;IAAU;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAQ;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAS;IAAU;IAAS;IAAW;IAAS;IAAU;IAAW;IAAU;IAAS;IAAO;IAAW;IAAQ;IAAW;IAAO;IAAY;IAAW;IAAW;IAAW;IAAS;IAAW;IAAU;IAAQ;IAAS;IAAO;IAAU;IAAQ;IAAS;IAAU;IAAU;IAAQ;IAAY;IAAQ;IAAO;IAAQ;IAAU;IAAU;IAAU;IAAY;IAAU;IAAW;IAAY;IAAY;IAAQ;IAAW;IAAU;IAAQ;IAAU;IAAS;IAAW;IAAU;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAU;IAAW;IAAS;IAAU;IAAU;IAAY;IAAU;IAAU;IAAQ;IAAW;IAAW;IAAU;IAAU;IAAW;IAAU;IAAU;IAAW;IAAQ;IAAW;IAAS;IAAQ;IAAU;IAAQ;IAAU;IAAW;IAAW;IAAW;IAAU;IAAY;IAAU;IAAQ;IAAY;IAAY;IAAW;IAAQ;IAAW;IAAY;IAAW;IAAY;IAAU;IAAU;IAAW;IAAS;IAAU;IAAY;IAAO;IAAQ;IAAW;IAAU;IAAU;IAAU;IAAS;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAU;IAAS;IAAW;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAW;IAAW;IAAQ;IAAQ;IAAW;IAAU;IAAO;IAAS;IAAU;IAAS;IAAS;IAAY;IAAW;IAAW;IAAY;IAAY;IAAS;IAAQ;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAS;IAAU;IAAS;IAAO;IAAW;IAAW;IAAS;IAAU;IAAW;IAAU;IAAU;IAAW;IAAS;IAAU;IAAU;IAAU;IAAU;IAAU;IAAS;IAAU;IAAS;IAAY;IAAW;IAAS;IAAS;IAAO;IAAS;IAAS;IAAW;IAAS;IAAS;IAAU;IAAS;IAAW;IAAU;IAAW;IAAU;IAAY;IAAQ;IAAS;IAAU;IAAS;IAAW;IAAU;IAAY;IAAU;IAAW;IAAU;IAAW;IAAY;IAAW;IAAW;IAAS;IAAS;IAAQ;IAAU;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAS;IAAO;IAAW;IAAU;IAAQ;IAAW;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAU;IAAU;IAAO;IAAS;IAAW;IAAQ;IAAW;IAAO;IAAS;IAAU;IAAW;IAAS;IAAY;IAAW;IAAY;IAAW;IAAO;IAAQ;IAAQ;IAAU;IAAS;IAAY;IAAS;IAAS;IAAO;IAAS;IAAW;IAAS;IAAU;IAAQ;IAAQ;IAAU;IAAS;IAAQ;IAAQ;IAAU;IAAU;IAAQ;IAAQ;IAAS;IAAU;IAAQ;IAAO;IAAW;IAAO;IAAQ;IAAS;IAAS;IAAQ;IAAU;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAO;IAAQ;IAAS;IAAO;IAAQ;IAAQ;IAAU;IAAQ;IAAQ;IAAS;IAAU;IAAU;IAAQ;IAAW;IAAS;IAAW;IAAU;IAAU;IAAS;IAAO;IAAW;IAAS;IAAY;IAAS;IAAU;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAS;IAAQ;IAAO;IAAS;IAAW;IAAQ;IAAU;IAAU;IAAQ;IAAU;IAAW;IAAQ;IAAO;IAAU;IAAW;IAAU;IAAU;IAAW;IAAO;IAAQ;IAAQ;IAAU;IAAS;IAAQ;IAAW;IAAU;IAAS;IAAU;IAAW;IAAW;IAAS;IAAS;IAAQ;IAAU;IAAU;IAAW;IAAQ;IAAQ;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAQ;IAAW;IAAQ;IAAQ;IAAS;IAAW;IAAU;IAAU;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAW;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAO;IAAO;IAAS;IAAQ;IAAQ;IAAU;IAAW;IAAQ;IAAS;IAAU;IAAQ;IAAS;IAAW;IAAO;IAAQ;IAAQ;IAAU;IAAQ;IAAU;IAAS;IAAS;IAAY;IAAU;IAAS;IAAU;IAAQ;IAAO;IAAQ;IAAU;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAW;IAAS;IAAU;IAAQ;IAAQ;IAAW;IAAU;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAS;IAAY;IAAQ;IAAS;IAAQ;IAAS;IAAO;IAAQ;IAAS;IAAU;IAAS;IAAW;IAAU;IAAQ;IAAU;IAAS;IAAQ;IAAW;IAAU;IAAO;IAAQ;IAAQ;IAAY;IAAQ;IAAU;IAAO;IAAW;IAAW;IAAS;IAAW;IAAW;IAAU;IAAU;IAAU;IAAW;IAAW;IAAQ;IAAW;IAAU;IAAY;IAAS;IAAY;IAAU;IAAY;IAAU;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAU;IAAU;IAAS;IAAY;IAAS;IAAW;IAAU;IAAU;IAAU;IAAW;IAAW;IAAU;IAAY;IAAQ;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAO;IAAQ;IAAW;IAAS;IAAS;IAAS;IAAO;IAAQ;IAAQ;IAAW;IAAO;IAAS;IAAS;IAAQ;IAAU;IAAU;IAAQ;IAAQ;IAAY;IAAQ;IAAQ;IAAW;IAAO;IAAQ;IAAO;IAAU;IAAQ;IAAW;IAAQ;IAAO;IAAW;IAAQ;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAO;IAAS;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAY;IAAU;IAAS;IAAS;IAAS;IAAS;IAAW;IAAQ;IAAO;IAAQ;IAAW;IAAS;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAW;IAAQ;IAAO;IAAS;IAAU;IAAW;IAAS;IAAQ;IAAU;IAAQ;IAAW;IAAU;IAAU;IAAS;IAAQ;IAAW;IAAW;IAAW;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAU;IAAQ;IAAU;IAAQ;IAAU;IAAQ;IAAQ;IAAW;IAAS;IAAQ;IAAS;IAAU;IAAQ;IAAQ;IAAW;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAW;IAAU;IAAS;IAAS;IAAU;IAAU;IAAW;IAAO;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAU;IAAO;IAAU;IAAW;IAAS;IAAW;IAAU;IAAS;IAAU;IAAS;IAAU;IAAU;IAAU;IAAY;IAAQ;IAAQ;IAAU;IAAS;IAAY;IAAQ;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAQ;IAAW;IAAQ;IAAY;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAU;IAAW;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAU;IAAY;IAAQ;IAAW;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAW;IAAU;IAAU;IAAQ;IAAW;IAAO;IAAS;IAAW;IAAU;IAAS;IAAU;IAAO;IAAU;IAAW;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAQ;IAAW;IAAY;IAAU;IAAU;IAAS;IAAY;IAAS;IAAQ;IAAS;IAAQ;IAAU;IAAQ;IAAY;IAAU;IAAU;IAAY;IAAS;IAAQ;IAAU;IAAU;IAAW;IAAQ;IAAS;IAAQ;IAAU;IAAU;IAAS;IAAU;IAAU;IAAQ;IAAQ;IAAQ;IAAY;IAAW;IAAW;IAAU;IAAS;IAAQ;IAAO;IAAW;IAAW;IAAS;IAAQ;IAAQ;IAAQ;IAAS;IAAS;IAAS;IAAW;IAAU;IAAU;IAAS;IAAQ;IAAW;IAAQ;IAAW;IAAU;IAAS;IAAO;IAAW;IAAU;IAAS;IAAO;IAAO;IAAQ;IAAU;IAAU;IAAW;IAAW;IAAU;IAAW;IAAS;IAAS;IAAW;IAAQ;IAAO;IAAS;IAAU;IAAS;IAAO;IAAQ;IAAO;IAAS;IAAW;IAAQ;IAAQ;IAAO;IAAS;IAAU;IAAQ;IAAQ;IAAS;IAAW;IAAU;IAAU;IAAU;IAAS;IAAW;IAAS;IAAY;IAAS;IAAU;IAAY;IAAU;IAAW;IAAS;IAAW;IAAS;IAAU;IAAW;IAAQ;IAAQ;IAAQ;IAAO;IAAS;IAAU;IAAU;IAAS;IAAQ;IAAU;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAW;IAAS;IAAU;IAAU;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAQ;IAAW;IAAU;IAAW;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAQ;IAAW;IAAW;IAAO;IAAW;IAAU;IAAU;IAAU;IAAW;IAAU;IAAU;IAAO;IAAS;IAAS;IAAU;IAAY;IAAS;IAAU;IAAW;IAAS;IAAO;IAAU;IAAQ;IAAS;IAAQ;IAAW;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAU;IAAW;IAAS;IAAQ;IAAU;IAAU;IAAS;IAAQ;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAU;IAAQ;IAAQ;IAAQ;IAAW;IAAW;IAAY;IAAY;IAAQ;IAAU;IAAW;IAAW;IAAU;IAAS;IAAY;IAAU;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAS;IAAS;IAAW;IAAS;IAAY;IAAU;IAAW;IAAS;IAAW;IAAW;IAAW;IAAU;IAAW;IAAW;IAAW;IAAS;IAAY;IAAW;IAAW;IAAS;IAAW;IAAU;IAAW;IAAQ;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAS;IAAY;IAAU;IAAW;IAAS;IAAQ;IAAO;IAAU;IAAW;IAAW;IAAW;IAAW;IAAY;IAAS;IAAQ;IAAQ;IAAS;IAAU;IAAW;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAQ;IAAQ;IAAU;IAAS;IAAO;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAW;IAAU;IAAW;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAW;IAAU;IAAS;IAAW;IAAU;IAAQ;IAAU;IAAY;IAAU;IAAU;IAAU;IAAS;IAAQ;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAY;IAAU;IAAY;IAAY;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAO;IAAU;IAAQ;IAAQ;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAU;IAAQ;IAAU;IAAS;IAAS;IAAQ;IAAS;IAAS;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAQ;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAS;IAAU;IAAQ;IAAO;IAAQ;IAAO;IAAU;IAAS;IAAO;IAAU;IAAW;IAAQ;IAAQ;IAAS;IAAU;IAAS;IAAQ;IAAU;IAAQ;IAAU;IAAQ;IAAW;IAAW;IAAS;IAAW;IAAQ;IAAO;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAU;IAAU;IAAW;IAAY;IAAY;IAAS;IAAS;IAAU;IAAU;IAAS;IAAO;IAAU;IAAU;IAAQ;IAAU;IAAU;IAAW;IAAY;IAAQ;IAAQ;IAAW;IAAU;IAAQ;IAAW;IAAU;IAAS;IAAY;IAAU;IAAW;IAAW;IAAU;IAAS;IAAS;IAAU;IAAS;IAAW;IAAS;IAAQ;IAAS;IAAW;IAAU;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAQ;IAAS;IAAY;IAAS;IAAU;IAAS;IAAW;IAAO;IAAW;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAU;IAAQ;IAAS;IAAU;IAAW;IAAU;IAAS;IAAQ;IAAS;IAAU;IAAW;IAAO;IAAQ;IAAS;IAAU;IAAO;IAAS;IAAQ;IAAS;IAAS;IAAQ;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAQ;IAAU;IAAU;IAAQ;IAAQ;IAAQ;IAAS;IAAW;IAAS;IAAY;IAAS;IAAW;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAW;IAAS;IAAS;IAAS;IAAU;IAAS;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAO;IAAU;IAAW;IAAY;IAAU;IAAW;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAS;IAAQ;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAS;IAAS;IAAY;IAAU;IAAU;IAAU;IAAY;IAAW;IAAS;IAAW;IAAS;IAAW;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAU;IAAS;IAAW;IAAQ;IAAU;IAAO;IAAS;IAAU;IAAS;IAAU;IAAW;IAAQ;IAAW;IAAS;IAAY;IAAY;IAAU;IAAW;IAAW;IAAW;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAU;IAAS;IAAU;IAAO;IAAQ;IAAU;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAU;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAU;IAAU;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAS;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAS;IAAS;IAAW;IAAU;IAAQ;IAAS;IAAQ;IAAU;IAAQ;IAAQ;IAAO;IAAS;IAAU;IAAS;IAAS;IAAW;IAAS;IAAW;IAAO;IAAY;IAAU;IAAS;IAAU;IAAY;IAAQ;IAAU;IAAW;IAAQ;IAAS;IAAO;IAAS;IAAU;IAAS;IAAW;IAAY;IAAQ;IAAS;IAAW;IAAU;IAAS;IAAQ;IAAO;IAAS;IAAS;IAAW;IAAU;IAAS;IAAY;IAAQ;IAAS;IAAU;IAAQ;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAW;IAAQ;IAAQ;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAO;IAAQ;IAAW;IAAU;IAAQ;IAAU;IAAU;IAAQ;IAAU;IAAU;IAAU;IAAS;IAAQ;IAAS;IAAO;IAAQ;IAAW;IAAQ;IAAY;IAAU;IAAW;IAAS;IAAW;IAAS;IAAQ;IAAU;IAAU;IAAW;IAAW;IAAU;IAAQ;IAAY;IAAW;IAAU;IAAS;IAAW;IAAU;IAAU;IAAW;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAO;IAAQ;IAAU;IAAW;IAAS;IAAW;IAAU;IAAU;IAAS;IAAS;IAAU;IAAS;IAAO;IAAU;IAAS;IAAW;IAAQ;IAAS;IAAW;IAAU;IAAU;IAAW;IAAS;IAAQ;IAAU;IAAW;IAAQ;IAAU;IAAW;IAAU;IAAW;IAAW;IAAW;IAAS;IAAQ;IAAW;IAAW;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAU;IAAQ;IAAU;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAW;IAAQ;IAAW;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAO;IAAU;IAAU;IAAQ;IAAU;IAAW;IAAO;IAAW;IAAW;IAAS;IAAW;IAAQ;IAAO;IAAS;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAW;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAO;IAAU;IAAQ;IAAQ;IAAQ;IAAU;IAAU;IAAQ;IAAU;IAAQ;IAAQ;IAAW;IAAQ;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAU;IAAO;IAAS;IAAS;IAAS;IAAQ;IAAQ;CAAM;AAE10lB,iBAAiB;;;;;ACJjB;AAEA,IAAI,+BAAS;IAAC;IAAY;IAAW;IAAY;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAY;IAAW;IAAW;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAa;IAAU;IAAW;IAAY;IAAY;IAAY;IAAY;IAAY;IAAW;IAAU;IAAS;IAAW;IAAY;IAAS;IAAW;IAAa;IAAY;IAAU;IAAS;IAAU;IAAU;IAAY;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAU;IAAW;IAAW;IAAU;IAAU;IAAW;IAAU;IAAY;IAAW;IAAY;IAAW;IAAW;IAAY;IAAU;IAAW;IAAS;IAAU;IAAW;IAAa;IAAU;IAAS;IAAY;IAAU;IAAW;IAAW;IAAW;IAAW;IAAW;IAAY;IAAU;IAAY;IAAS;IAAY;IAAW;IAAY;IAAW;IAAW;IAAW;IAAY;IAAU;IAAW;IAAY;IAAW;IAAU;IAAS;IAAa;IAAY;IAAU;IAAU;IAAW;IAAS;IAAY;IAAY;IAAW;IAAW;IAAW;IAAY;IAAY;IAAY;IAAU;IAAa;IAAS;IAAY;IAAY;IAAU;IAAW;IAAW;IAAU;IAAU;IAAY;IAAW;IAAW;IAAW;IAAY;IAAW;IAAW;IAAa;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAW;IAAU;IAAW;IAAU;IAAY;IAAY;IAAY;IAAW;IAAU;IAAY;IAAY;IAAW;IAAW;IAAW;IAAa;IAAW;IAAU;IAAY;IAAW;IAAU;IAAY;IAAY;IAAY;IAAW;IAAW;IAAS;IAAU;IAAW;IAAS;IAAU;IAAU;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAY;IAAU;IAAW;IAAW;IAAU;IAAU;IAAW;IAAY;IAAS;IAAS;IAAU;IAAU;IAAU;IAAS;IAAS;IAAU;IAAS;IAAW;IAAU;IAAY;IAAY;IAAY;IAAU;IAAW;IAAY;IAAU;IAAY;IAAW;IAAY;IAAa;IAAY;IAAW;IAAS;IAAS;IAAU;IAAW;IAAU;IAAW;IAAY;IAAU;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAcc;IAAU;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAW;IAAU;IAAY;IAAW;IAAY;IAAU;IAAY;IAAY;IAAW;IAAY;IAAa;IAAY;IAAU;IAAS;IAAW;IAAW;IAAY;IAAS;IAAY;IAAY;IAAW;IAAS;IAAY;IAAU;IAAS;IAAU;IAAW;IAAY;IAAW;IAAW;IAAY;IAAS;IAAU;IAAW;IAAW;IAAU;IAAS;IAAW;IAAW;IAAW;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAY;IAAU;IAAS;IAAW;IAAY;IAAS;IAAY;IAAU;IAAU;IAAa;IAAW;IAAW;IAAW;IAAW;IAAW;IAAY;IAAW;IAAU;IAAY;IAAY;IAAW;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAS;IAAU;IAAW;IAAW;IAAY;IAAU;IAAW;IAAY;IAAY;IAAW;IAAS;IAAS;IAAW;IAAW;IAAW;IAAW;IAAU;IAAS;IAAW;IAAW;IAAU;IAAa;IAAa;IAAY;IAAW;IAAY;IAAW;IAAS;IAAW;IAAY;IAAU;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAY;IAAa;IAAW;IAAU;IAAY;IAAY;IAAW;IAAU;IAAW;IAAW;IAAW;IAAS;IAAY;IAAW;IAAW;IAAU;IAAU;IAAW;IAAW;IAAa;IAAY;IAAa;IAAa;IAAa;IAAY;IAAa;IAAa;IAAY;IAAa;IAAY;IAAY;IAAa;IAAW;IAAa;IAAW;IAAa;IAAY;IAAa;IAAY;IAAa;IAAa;IAAa;IAAa;IAAW;IAAY;IAAY;IAAY;IAAY;IAAa;IAAY;IAAY;IAAY;IAAW;IAAa;IAAa;IAAa;IAAY;IAAa;IAAY;IAAa;IAAY;IAAW;IAAa;IAAc;IAAY;IAAY;IAAa;IAAa;IAAa;IAAa;IAAY;IAAW;IAAW;IAAU;IAAU;IAAY;IAAW;IAAU;IAAa;IAAY;IAAW;IAAS;IAAU;IAAY;IAAY;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAY;IAAY;IAAW;IAAU;IAAW;IAAS;IAAS;IAAW;IAAY;IAAW;IAAY;IAAU;IAAU;IAAY;IAAW;IAAU;IAAU;IAAU;IAAW;IAAY;IAAY;IAAU;IAAW;IAAU;IAAS;IAAU;IAAU;IAAW;IAAY;IAAY;IAAW;IAAW;IAAW;IAAU;IAAY;IAAY;IAAY;IAAY;IAAY;IAAa;IAAY;IAAW;IAAW;IAAU;IAAa;IAAW;IAAY;IAAY;IAAa;IAAa;IAAU;IAAU;IAAa;IAAY;IAAY;IAAW;IAAY;IAAW;IAAU;IAAY;IAAY;IAAa;IAAW;IAAY;IAAa;IAAY;IAAa;IAAa;IAAc;IAAW;IAAa;IAAa;IAAU;IAAa;IAAW;IAAY;IAAY;IAAW;IAAa;IAAa;IAAW;IAAY;IAAa;IAAY;IAAY;IAAY;IAAW;IAAa;IAAY;IAAY;IAAW;IAAW;IAAY;IAAY;IAAW;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAS;IAAY;IAAW;IAAY;IAAS;IAAW;IAAU;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAU;IAAY;IAAY;IAAc;IAAW;IAAY;IAAW;IAAU;IAAW;IAAa;IAAY;IAAY;IAAW;IAAa;IAAc;IAAU;IAAa;IAAU;IAAY;IAAa;IAAW;IAAY;IAAa;IAAa;IAAY;IAAW;IAAW;IAAY;IAAU;IAAa;IAAY;IAAW;IAAW;IAAa;IAAU;IAAU;IAAY;IAAW;IAAW;IAAU;IAAW;IAAU;IAAW;IAAW;IAAa;IAAW;IAAY;IAAa;IAAa;IAAa;IAAY;IAAY;IAAY;IAAU;IAAW;IAAY;IAAW;IAAa;IAAa;IAAY;IAAW;IAAU;IAAY;IAAY;IAAY;IAAa;IAAa;IAAW;IAAa;IAAY;IAAS;IAAa;IAAW;IAAY;IAAY;IAAY;IAAU;IAAa;IAAW;IAAW;IAAW;IAAY;IAAY;IAAU;IAAW;IAAY;IAAa;IAAY;IAAW;IAAY;IAAU;IAAY;IAAY;IAAW;IAAS;IAAY;IAAW;IAAU;IAAW;IAAW;IAAW;IAAU;IAAW;IAAW;IAAW;IAAU;IAAY;IAAY;IAAS;IAAW;IAAU;IAAU;IAAU;IAAU;IAAY;IAAa;IAAa;IAAU;IAAS;IAAU;IAAW;IAAW;IAAU;IAAW;IAAW;IAAY;IAAW;IAAU;IAAY;IAAU;IAAW;IAAU;IAAW;IAAU;IAAY;IAAY;IAAY;IAAW;IAAU;IAAS;IAAW;IAAY;IAAS;IAAS;IAAS;IAAW;IAAS;IAAW;IAAU;IAAW;IAAY;IAAU;IAAW;IAAS;IAAW;IAAU;IAAS;IAAY;IAAU;IAAW;IAAS;IAAY;IAAY;IAAY;IAAU;IAAY;IAAY;IAAW;IAAW;IAAU;IAAY;IAAY;IAAW;IAAU;IAAW;IAAU;IAAY;IAAW;IAAW;IAAY;IAAW;IAAU;IAAW;IAAc;IAAU;IAAW;IAAY;IAAW;IAAW;IAAS;IAAW;IAAW;IAAW;IAAS;IAAW;IAAS;IAAU;IAAW;IAAU;IAAU;IAAS;IAAU;IAAW;IAAW;IAAY;IAAY;IAAW;IAAU;IAAY;IAAW;IAAS;IAAU;IAAa;IAAW;IAAY;IAAa;IAAU;IAAS;IAAU;IAAa;IAAc;IAAa;IAAS;IAAW;IAAU;IAAU;IAAU;IAAU;IAAS;IAAS;IAAU;IAAW;IAAS;IAAU;IAAY;IAAW;IAAS;IAAW;IAAS;IAAW;IAAW;IAAW;IAAU;IAAY;IAAY;IAAU;IAAW;IAAY;IAAU;IAAS;IAAW;IAAW;IAAU;IAAU;IAAY;IAAW;IAAW;IAAW;IAAW;IAAU;IAAU;IAAU;IAAW;IAAY;IAAY;IAAY;IAAS;IAAY;IAAW;IAAY;IAAY;IAAY;IAAY;IAAW;IAAS;IAAU;IAAU;IAAY;IAAW;IAAY;IAAU;IAAU;IAAW;IAAa;IAAS;IAAa;IAAW;IAAU;IAAY;IAAW;IAAY;IAAS;IAAY;IAAY;IAAS;IAAU;IAAW;IAAa;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAW;IAAY;IAAW;IAAU;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAU;IAAY;IAAY;IAAS;IAAW;IAAU;IAAW;IAAU;IAAY;IAAY;IAAS;IAAW;IAAU;IAAW;IAAY;IAAY;IAAU;IAAa;IAAY;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAY;IAAY;IAAW;IAAU;IAAY;IAAW;IAAW;IAAW;IAAU;IAAY;IAAY;IAAY;IAAY;IAAW;IAAW;IAAY;IAAU;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAY;IAAY;IAAY;IAAY;IAAU;IAAW;IAAU;IAAY;IAAY;IAAW;IAAY;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAU;IAAW;IAAU;IAAW;IAAS;IAAW;IAAU;IAAU;IAAS;IAAW;IAAW;IAAS;IAAS;IAAY;IAAW;IAAW;IAAW;IAAU;IAAY;IAAW;IAAU;IAAS;IAAU;IAAW;IAAY;IAAU;IAAS;IAAW;IAAW;IAAU;IAAa;IAAS;IAAU;IAAW;IAAS;IAAU;IAAY;IAAY;IAAW;IAAU;IAAS;IAAW;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAY;IAAS;IAAW;IAAS;IAAW;IAAU;IAAU;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAY;IAAS;IAAW;IAAW;IAAU;IAAW;IAAY;IAAW;IAAS;IAAS;IAAU;IAAY;IAAW;IAAa;IAAU;IAAY;IAAW;IAAY;IAAU;IAAW;IAAU;IAAY;IAAW;IAAW;IAAY;IAAU;IAAW;IAAW;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAU;IAAY;IAAS;IAAW;IAAW;IAAY;IAAW;IAAS;IAAS;IAAU;IAAW;IAAW;IAAW;IAAW;IAAW;IAAU;IAAW;IAAY;IAAU;IAAU;IAAW;IAAW;IAAa;IAAW;IAAU;IAAY;IAAY;IAAY;IAAY;IAAY;IAAW;IAAU;IAAY;IAAU;IAAY;IAAS;IAAY;IAAY;IAAU;IAAY;IAAY;IAAU;IAAa;IAAY;IAAY;IAAW;IAAY;IAAS;IAAW;IAAY;IAAY;IAAa;IAAY;IAAY;IAAW;IAAY;IAAY;IAAY;IAAU;IAAY;IAAW;IAAS;IAAU;IAAY;IAAU;IAAY;IAAW;IAAS;IAAY;IAAU;IAAU;IAAa;IAAY;IAAW;IAAU;IAAW;IAAW;IAAU;IAAU;IAAU;IAAU;IAAW;IAAW;IAAS;IAAY;IAAW;IAAW;IAAU;IAAW;IAAY;IAAW;IAAS;IAAU;IAAW;IAAY;IAAW;IAAY;IAAW;IAAY;IAAW;IAAY;IAAY;IAAW;IAAW;IAAW;IAAW;IAAU;IAAS;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAW;IAAY;IAAY;IAAS;IAAU;IAAW;IAAY;IAAY;IAAY;IAAU;IAAS;IAAY;IAAU;IAAY;IAAU;IAAU;IAAY;IAAY;IAAU;IAAa;IAAU;IAAY;IAAa;IAAa;IAAaa;IAAY;IAAU;IAAW;IAAS;IAAY;IAAY;IAAW;IAAY;IAAY;IAAU;IAAU;IAAW;IAAW;IAAY;IAAY;IAAW;IAAY;IAAU;IAAU;IAAW;IAAY;IAAY;IAAU;IAAY;IAAW;IAAa;IAAY;IAAY;IAAU;IAAY;IAAY;IAAS;IAAW;IAAU;IAAW;IAAU;IAAY;IAAS;IAAW;IAAW;IAAW;IAAc;IAAY;IAAU;IAAY;IAAW;IAAW;IAAW;IAAY;IAAY;IAAY;IAAY;IAAU;IAAS;IAAS;IAAW;IAAS;IAAW;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAY;IAAS;IAAY;IAAU;IAAU;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAS;IAAS;IAAW;IAAW;IAAW;IAAU;IAAU;IAAY;IAAW;IAAW;IAAU;IAAU;IAAS;IAAW;IAAS;IAAW;IAAY;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAW;IAAY;IAAU;IAAY;IAAW;IAAW;IAAY;IAAa;IAAS;IAAY;IAAY;IAAa;IAAW;IAAW;IAAU;IAAU;IAAS;IAAW;IAAU;IAAW;IAAW;IAAW;IAAW;IAAY;IAAa;IAAY;IAAY;IAAY;IAAW;IAAa;IAAa;IAAY;IAAY;IAAU;IAAU;IAAU;IAAa;IAAa;IAAW;IAAW;IAAY;IAAS;IAAY;IAAY;IAAY;IAAU;IAAa;IAAa;IAAY;IAAY;IAAY;IAAW;IAAY;IAAU;IAAW;IAAU;IAAS;IAAU;IAAW;IAAW;IAAW;IAAY;IAAU;IAAY;IAAU;IAAY;IAAY;IAAa;IAAW;IAAY;IAAU;IAAY;IAAW;IAAY;IAAW;IAAU;IAAY;IAAY;IAAY;IAAU;IAAU;IAAY;IAAW;IAAS;IAAY;IAAY;IAAW;IAAa;IAAa;IAAY;IAAY;IAAa;IAAa;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAY;IAAa;IAAW;IAAU;IAAa;IAAW;IAAY;IAAa;IAAc;IAAW;IAAW;IAAW;IAAW;IAAU;IAAY;IAAW;IAAU;IAAY;IAAW;IAAU;IAAU;IAAW;IAAY;IAAY;IAAW;IAAU;IAAW;IAAY;IAAW;IAAW;IAAU;IAAY;IAAa;IAAa;IAAW;IAAU;IAAa;IAAa;IAAW;IAAa;IAAY;IAAY;IAAY;IAAY;IAAY;IAAW;IAAY;IAAa;IAAY;IAAU;IAAS;IAAU;IAAW;IAAU;IAAY;IAAW;IAAU;IAAU;IAAS;IAAY;IAAW;IAAW;IAAU;IAAS;IAAU;IAAU;IAAU;IAAW;IAAS;IAAU;IAAS;IAAW;IAAW;IAAW;IAAW;IAAS;IAAS;IAAS;IAAU;IAAW;IAAU;IAAY;IAAS;IAAY;IAAU;IAAU;IAAW;IAAS;IAAW;IAAU;IAAW;IAAU;IAAU;IAAU;IAAS;IAAU;IAAU;IAAY;IAAY;IAAY;IAAW;IAAW;IAAY;IAAU;IAAU;IAAW;IAAU;IAAY;IAAW;IAAY;IAAc;IAAa;IAAW;IAAW;IAAW;IAAW;IAAS;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAc;IAAY;IAAY;IAAY;IAAW;IAAa;IAAW;IAAW;IAAW;IAAY;IAAa;IAAY;IAAY;IAAY;IAAa;IAAU;IAAW;IAAY;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAY;IAAY;IAAW;IAAW;IAAW;IAAS;IAAU;IAAW;IAAY;IAAU;IAAY;IAAY;IAAU;IAAS;IAAY;IAAU;IAAS;IAAU;IAAS;IAAU;IAAY;IAAU;IAAU;IAAY;IAAW;IAAU;IAAW;IAAY;IAAS;IAAW;IAAY;IAAU;IAAW;IAAU;IAAS;IAAW;IAAY;IAAW;IAAW;IAAY;IAAW;IAAU;IAAY;IAAY;IAAY;IAAW;IAAY;IAAW;IAAU;IAAU;IAAW;IAAW;IAAY;IAAY;IAAU;IAAY;IAAW;IAAY;IAAW;IAAY;IAAU;IAAY;IAAW;IAAS;IAAW;IAAa;IAAW;IAAW;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAU;IAAW;IAAW;IAAW;IAAa;IAAW;IAAW;IAAY;IAAS;IAAW;IAAW;IAAW;IAAU;IAAY;IAAY;IAAW;IAAW;IAAY;IAAS;IAAY;IAAU;IAAS;IAAW;IAAS;IAAU;IAAY;IAAS;IAAW;IAAS;IAAW;IAAY;IAAY;IAAU;IAAU;IAAS;IAAW;IAAY;IAAS;IAAY;IAAW;IAAS;IAAU;IAAY;IAAa;IAAU;IAAS;IAAU;IAAU;IAAY;IAAU;IAAS;IAAU;IAAS;IAAW;IAAY;IAAa;IAAU;IAAW;IAAW;IAAY;IAAU;IAAU;IAAW;IAAY;IAAW;IAAS;IAAU;IAAS;IAAW;IAAY;IAAW;IAAU;IAAY;IAAU;IAAY;IAAU;IAAS;IAAY;IAAW;IAAW;IAAW;IAAW;IAAU;IAAU;IAAY;IAAY;IAAY;IAAY;IAAW;IAAY;IAAW;IAAY;IAAS;IAAY;IAAY;IAAS;IAAU;IAAW;IAAU;IAAW;IAAU;IAAW;IAAS;IAAU;IAAU;IAAW;IAAS;IAAY;IAAU;IAAY;IAAW;IAAW;IAAS;IAAU;IAAY;IAAW;IAAW;IAAU;IAAY;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAW;IAAU;IAAY;IAAS;IAAY;IAAW;IAAY;IAAW;IAAU;IAAU;IAAS;IAAW;IAAW;IAAU;IAAU;IAAU;IAAU;IAAS;IAAW;IAAW;IAAa;IAAa;IAAW;IAAW;IAAY;IAAa;IAAU;IAAY;IAAY;IAAW;IAAU;IAAU;IAAU;IAAU;IAAS;IAAU;IAAa;IAAY;IAAU;IAAS;IAAU;IAAU;IAAY;IAAW;IAAU;IAAY;IAAW;IAAU;IAAW;IAAY;IAAU;IAAW;IAAY;IAAY;IAAS;IAAU;IAAU;IAAU;IAAY;IAAU;IAAS;IAAW;IAAY;IAAW;IAAU;IAAY;IAAY;IAAU;IAAS;IAAU;IAAW;IAAY;IAAU;IAAY;IAAU;IAAU;IAAU;IAAS;IAAW;IAAU;IAAW;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;CAAW;AAElhsB,iBAAiB;;;;;ACJjB;AAEA,IAAI,gCAAU;IAAC;IAAS;IAAY;IAAY;IAAS;IAAU;IAAW;IAAY;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAS;IAAS;IAAQ;IAAY;IAAY;IAAS;IAAU;IAAY;IAAU;IAAY;IAAW;IAAS;IAAY;IAAW;IAAY;IAAW;IAAW;IAAY;IAAY;IAAS;IAAY;IAAS;IAAU;IAAW;IAAY;IAAS;IAAW;IAAY;IAAY;IAAY;IAAU;IAAY;IAAS;IAAW;IAAY;IAAQ;IAAU;IAAQ;IAAY;IAAY;IAAQ;IAAW;IAAW;IAAS;IAAY;IAAY;IAAW;IAAW;IAAY;IAAY;IAAU;IAAW;IAAU;IAAY;IAAY;IAAW;IAAY;IAAW;IAAU;IAAW;IAAU;IAAY;IAAW;IAAW;IAAU;IAAW;IAAS;IAAW;IAAY;IAAS;IAAW;IAAW;IAAY;IAAY;IAAS;IAAS;IAAY;IAAW;IAAY;IAAY;IAAY;IAAY;IAAU;IAAQ;IAAW;IAAU;IAAU;IAAU;IAAU;IAAU;IAAY;IAAW;IAAS;IAAY;IAAY;IAAQ;IAAY;IAAW;IAAY;IAAQ;IAAW;IAAY;IAAS;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAW;IAAY;IAAY;IAAY;IAAW;IAAW;IAAU;IAAW;IAAY;IAAU;IAAW;IAAW;IAAU;IAAU;IAAQ;IAAW;IAAU;IAAY;IAAW;IAAW;IAAY;IAAQ;IAAY;IAAW;IAAY;IAAW;IAAU;IAAY;IAAW;IAAS;IAAS;IAAY;IAAS;IAAY;IAAQ;IAAY;IAAW;IAAQ;IAAY;IAAU;IAAY;IAAW;IAAW;IAAW;IAAS;IAAU;IAAY;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAY;IAAW;IAAY;IAAS;IAAY;IAAU;IAAa;IAAU;IAAS;IAAU;IAAW;IAAU;IAAW;IAAU;IAAQ;IAAW;IAAY;IAAW;IAAS;IAAW;IAAS;IAAU;IAAW;IAAW;IAAW;IAAW;IAAY;IAAW;IAAS;IAAY;IAAW;IAAW;IAAY;IAAS;IAAW;IAAW;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAU;IAAS;IAAS;IAAY;IAAW;IAAW;IAAQ;IAAW;IAAQ;IAAU;IAAQ;IAAU;IAAU;IAAQ;IAAY;IAAS;IAAY;IAAW;IAAU;IAAY;IAAY;IAAS;IAAY;IAAW;IAAY;IAAW;IAAW;IAAY;IAAU;IAAU;IAAW;IAAY;IAAS;IAAS;IAAY;IAAW;IAAW;IAAW;IAAW;IAAS;IAAU;IAAW;IAAY;IAAY;IAAU;IAAW;IAAa;IAAY;IAAY;IAAS;IAAY;IAAU;IAAS;IAAW;IAAQ;IAAU;IAAW;IAAQ;IAAS;IAAS;IAAW;IAAY;IAAW;IAAS;IAAW;IAAU;IAAY;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAY;IAAW;IAAW;IAAU;IAAW;IAAU;IAAW;IAAQ;IAAU;IAAW;IAAW;IAAU;IAAW;IAAY;IAAY;IAAW;IAAS;IAAW;IAAY;IAAY;IAAS;IAAW;IAAY;IAAY;IAAa;IAAY;IAAW;IAAW;IAAQ;IAAW;IAAY;IAAW;IAAW;IAAU;IAAW;IAAS;IAAW;IAAY;IAAW;IAAU;IAAW;IAAa;IAAQ;IAAU;IAAa;IAAY;IAAW;IAAS;IAAU;IAAY;IAAU;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAY;IAAW;IAAS;IAAY;IAAY;IAAQ;IAAY;IAAW;IAAS;IAAY;IAAY;IAAS;IAAW;IAAW;IAAa;IAAU;IAAW;IAAU;IAAY;IAAW;IAAS;IAAS;IAAW;IAAU;IAAY;IAAW;IAAW;IAAW;IAAU;IAAW;IAAa;IAAS;IAAQ;IAAU;IAAY;IAAU;IAAY;IAAU;IAAW;IAAY;IAAY;IAAa;IAAW;IAAY;IAAa;IAAW;IAAY;IAAY;IAAW;IAAW;IAAU;IAAa;IAAW;IAAW;IAAY;IAAW;IAAW;IAAS;IAAW;IAAU;IAAW;IAAW;IAAY;IAAW;IAAU;IAAW;IAAY;IAAU;IAAW;IAAW;IAAY;IAAS;IAAW;IAAW;IAAS;IAAW;IAAS;IAAW;IAAY;IAAY;IAAU;IAAU;IAAU;IAAU;IAAW;IAAU;IAAY;IAAW;IAAS;IAAW;IAAW;IAAQ;IAAS;IAAW;IAAY;IAAW;IAAW;IAAW;IAAU;IAAW;IAAW;IAAW;IAAY;IAAU;IAAW;IAAW;IAAW;IAAY;IAAY;IAAW;IAAS;IAAY;IAAW;IAAW;IAAS;IAAW;IAAY;IAAU;IAAY;IAAY;IAAY;IAAU;IAAa;IAAW;IAAa;IAAY;IAAa;IAAU;IAAY;IAAY;IAAU;IAAU;IAAW;IAAY;IAAY;IAAW;IAAY;IAAY;IAAW;IAAW;IAAU;IAAY;IAAQ;IAAW;IAAU;IAAW;IAAY;IAAW;IAAW;IAAY;IAAY;IAAY;IAAQ;IAAU;IAAW;IAAY;IAAY;IAAW;IAAW;IAAY;IAAS;IAAS;IAAU;IAAY;IAAY;IAAW;IAAQ;IAAW;IAAQ;IAAW;IAAU;IAAW;IAAS;IAAU;IAAU;IAAY;IAAU;IAAQ;IAAS;IAAW;IAAY;IAAS;IAAW;IAAQ;IAAW;IAAY;IAAS;IAAW;IAAS;IAAY;IAAW;IAAY;IAAQ;IAAW;IAAW;IAAa;IAAY;IAAY;IAAY;IAAU;IAAW;IAAU;IAAS;IAAQ;IAAQ;IAAS;IAAW;IAAW;IAAU;IAAS;IAAW;IAAY;IAAY;IAAS;IAAY;IAAU;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAW;IAAY;IAAW;IAAU;IAAY;IAAU;IAAQ;IAAU;IAAS;IAAW;IAAW;IAAY;IAAQ;IAAW;IAAW;IAAW;IAAS;IAAW;IAAY;IAAQ;IAAW;IAAY;IAAW;IAAY;IAAY;IAAS;IAAW;IAAY;IAAS;IAAW;IAAY;IAAW;IAAQ;IAAU;IAAY;IAAW;IAAW;IAAY;IAAW;IAAU;IAAW;IAAQ;IAAY;IAAU;IAAS;IAAY;IAAW;IAAW;IAAU;IAAY;IAAY;IAAW;IAAS;IAAY;IAAU;IAAW;IAAS;IAAY;IAAQ;IAAY;IAAY;IAAW;IAAU;IAAW;IAAW;IAAY;IAAQ;IAAY;IAAU;IAAU;IAAQ;IAAU;IAAS;IAAU;IAAW;IAAW;IAAY;IAAY;IAAS;IAAW;IAAW;IAAW;IAAS;IAAS;IAAS;IAAW;IAAQ;IAAY;IAAQ;IAAW;IAAY;IAAU;IAAS;IAAW;IAAU;IAAS;IAAW;IAAY;IAAS;IAAU;IAAW;IAAW;IAAU;IAAU;IAAY;IAAU;IAAY;IAAU;IAAU;IAAY;IAAW;IAAY;IAAY;IAAS;IAAW;IAAW;IAAa;IAAW;IAAW;IAAW;IAAQ;IAAY;IAAW;IAAW;IAAS;IAAY;IAAS;IAAY;IAAY;IAAa;IAAW;IAAU;IAAS;IAAY;IAAU;IAAW;IAAU;IAAY;IAAU;IAAY;IAAW;IAAS;IAAW;IAAW;IAAU;IAAQ;IAAY;IAAS;IAAS;IAAW;IAAU;IAAQ;IAAU;IAAY;IAAS;IAAW;IAAW;IAAW;IAAW;IAAS;IAAY;IAAS;IAAY;IAAW;IAAY;IAAW;IAAY;IAAS;IAAU;IAAU;IAAY;IAAQ;IAAY;IAAS;IAAW;IAAW;IAAQ;IAAY;IAAW;IAAY;IAAS;IAAY;IAAY;IAAS;IAAU;IAAS;IAAW;IAAW;IAAY;IAAU;IAAS;IAAU;IAAU;IAAW;IAAY;IAAW;IAAU;IAAW;IAAW;IAAS;IAAS;IAAQ;IAAU;IAAW;IAAU;IAAS;IAAW;IAAW;IAAS;IAAW;IAAU;IAAU;IAAY;IAAW;IAAU;IAAS;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAY;IAAS;IAAU;IAAY;IAAQ;IAAW;IAAY;IAAS;IAAY;IAAW;IAAS;IAAQ;IAAU;IAAY;IAAU;IAAU;IAAY;IAAS;IAAU;IAAY;IAAY;IAAW;IAAY;IAAW;IAAU;IAAU;IAAW;IAAY;IAAW;IAAU;IAAW;IAAW;IAAY;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAY;IAAW;IAAY;IAAY;IAAU;IAAY;IAAS;IAAU;IAAW;IAAW;IAAY;IAAY;IAAY;IAAW;IAAW;IAAW;IAAY;IAAW;IAAW;IAAa;IAAY;IAAU;IAAW;IAAW;IAAY;IAAY;IAAY;IAAU;IAAY;IAAW;IAAa;IAAY;IAAU;IAAU;IAAY;IAAY;IAAW;IAAU;IAAS;IAAW;IAAW;IAAY;IAAY;IAAW;IAAW;IAAY;IAAY;IAAW;IAAU;IAAW;IAAU;IAAa;IAAS;IAAY;IAAW;IAAU;IAAW;IAAQ;IAAS;IAAY;IAAY;IAAW;IAAS;IAAW;IAAU;IAAW;IAAU;IAAW;IAAW;IAAU;IAAU;IAAW;IAAS;IAAY;IAAS;IAAS;IAAS;IAAU;IAAW;IAAS;IAAa;IAAQ;IAAY;IAAU;IAAQ;IAAW;IAAS;IAAY;IAAY;IAAW;IAAW;IAAU;IAAW;IAAQ;IAAU;IAAS;IAAQ;IAAW;IAAU;IAAW;IAAQ;IAAU;IAAW;IAAU;IAAW;IAAW;IAAW;IAAQ;IAAY;IAAQ;IAAY;IAAU;IAAY;IAAS;IAAQ;IAAW;IAAW;IAAS;IAAS;IAAW;IAAY;IAAU;IAAY;IAAU;IAAU;IAAU;IAAW;IAAS;IAAY;IAAY;IAAY;IAAa;IAAW;IAAS;IAAY;IAAQ;IAAU;IAAY;IAAY;IAAa;IAAW;IAAW;IAAY;IAAW;IAAY;IAAS;IAAY;IAAW;IAAW;IAAS;IAAY;IAAY;IAAW;IAAW;IAAa;IAAa;IAAW;IAAU;IAAW;IAAW;IAAa;IAAY;IAAY;IAAY;IAAQ;IAAW;IAAS;IAAW;IAAW;IAAQ;IAAW;IAAY;IAAW;IAAS;IAAY;IAAQ;IAAW;IAAW;IAAW;IAAU;IAAW;IAAa;IAAQ;IAAW;IAAW;IAAW;IAAW;IAAS;IAAY;IAAU;IAAU;IAAU;IAAY;IAAQ;IAAU;IAAU;IAAY;IAAW;IAAW;IAAS;IAAY;IAAW;IAAY;IAAS;IAAY;IAAa;IAAW;IAAY;IAAU;IAAU;IAAS;IAAQ;IAAW;IAAa;IAAS;IAAW;IAAa;IAAU;IAAY;IAAW;IAAW;IAAW;IAAQ;IAAW;IAAa;IAAU;IAAY;IAAY;IAAS;IAAW;IAAa;IAAS;IAAS;IAAU;IAAS;IAAY;IAAW;IAAW;IAAa;IAAY;IAAU;IAAS;IAAW;IAAU;IAAQ;IAAW;IAAU;IAAY;IAAQ;IAAW;IAAS;IAAa;IAAW;IAAU;IAAW;IAAW;IAAY;IAAY;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAY;IAAQ;IAAa;IAAW;IAAS;IAAU;IAAU;IAAU;IAAQ;IAAQ;IAAU;IAAW;IAAW;IAAa;IAAY;IAAU;IAAW;IAAY;IAAW;IAAU;IAAS;IAAU;IAAS;IAAW;IAAU;IAAW;IAAQ;IAAY;IAAW;IAAY;IAAS;IAAS;IAAY;IAAa;IAAU;IAAa;IAAa;IAAa;IAAQ;IAAW;IAAW;IAAW;IAAW;IAAW;IAAa;IAAW;IAAQ;IAAU;IAAY;IAAW;IAAU;IAAS;IAAa;IAAS;IAAW;IAAY;IAAS;IAAS;IAAa;IAAU;IAAS;IAAS;IAAY;IAAa;IAAQ;IAAW;IAAY;IAAW;IAAW;IAAS;IAAU;IAAa;IAAW;IAAU;IAAY;IAAW;IAAa;IAAQ;IAAY;IAAY;IAAY;IAAW;IAAY;IAAY;IAAU;IAAU;IAAQ;IAAS;IAAY;IAAU;IAAY;IAAU;IAAQ;IAAY;IAAY;IAAQ;IAAS;IAAQ;IAAY;IAAU;IAAW;IAAS;IAAS;IAAS;IAAW;IAAW;IAAW;IAAW;IAAQ;IAAa;IAAQ;IAAY;IAAW;IAAW;IAAS;IAAQ;IAAU;IAAa;IAAY;IAAW;IAAQ;IAAU;IAAW;IAAY;IAAS;IAAY;IAAW;IAAY;IAAY;IAAU;IAAW;IAAQ;IAAW;IAAU;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAa;IAAW;IAAU;IAAW;IAAY;IAAY;IAAU;IAAU;IAAU;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAQ;IAAU;IAAW;IAAY;IAAa;IAAa;IAAa;IAAW;IAAY;IAAS;IAAa;IAAY;IAAY;IAAW;IAAY;IAAW;IAAQ;IAAa;IAAU;IAAW;IAAa;IAAS;IAAW;IAAU;IAAY;IAAW;IAAW;IAAS;IAAU;IAAW;IAAW;IAAW;IAAS;IAAQ;IAAY;IAAW;IAAU;IAAY;IAAU;IAAS;IAAU;IAAW;IAAU;IAAY;IAAY;IAAU;IAAY;IAAU;IAAW;IAAW;IAAW;IAAU;IAAW;IAAY;IAAY;IAAY;IAAW;IAAU;IAAY;IAAW;IAAY;IAAW;IAAa;IAAY;IAAS;IAAY;IAAW;IAAU;IAAY;IAAS;IAAY;IAAW;IAAU;IAAW;IAAS;IAAW;IAAQ;IAAY;IAAY;IAAa;IAAY;IAAU;IAAU;IAAU;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAa;IAAa;IAAY;IAAY;IAAY;IAAS;IAAY;IAAW;IAAY;IAAW;IAAY;IAAW;IAAY;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAS;IAAY;IAAU;IAAW;IAAU;IAAY;IAAU;IAAY;IAAS;IAAS;IAAU;IAAY;IAAW;IAAW;IAAW;IAAQ;IAAU;IAAY;IAAS;IAAW;IAAS;IAAY;IAAa;IAAY;IAAY;IAAW;IAAW;IAAW;IAAS;IAAW;IAAW;IAAQ;IAAY;IAAa;IAAU;IAAU;IAAY;IAAY;IAAa;IAAW;IAAY;IAAa;IAAQ;IAAa;IAAS;IAAY;IAAW;IAAW;IAAa;IAAY;IAAW;IAAY;IAAY;IAAY;IAAU;IAAY;IAAa;IAAU;IAAU;IAAS;IAAW;IAAa;IAAY;IAAQ;IAAa;IAAY;IAAY;IAAQ;IAAU;IAAY;IAAa;IAAY;IAAa;IAAY;IAAW;IAAY;IAAY;IAAS;IAAY;IAAa;IAAW;IAAa;IAAY;IAAW;IAAY;IAAY;IAAW;IAAW;IAAU;IAAa;IAAY;IAAa;IAAY;IAAY;IAAY;IAAW;IAAa;IAAa;IAAW;IAAY;IAAW;IAAY;IAAa;IAAY;IAAY;IAAa;IAAY;IAAY;IAAW;IAAa;IAAW;IAAY;IAAU;IAAW;IAAW;IAAY;IAAQ;IAAY;IAAW;IAAa;IAAY;IAAW;IAAW;IAAW;IAAW;IAAY;IAAQ;IAAW;IAAa;IAAW;IAAU;IAAQ;IAAY;IAAW;IAAU;IAAQ;IAAY;IAAU;IAAY;IAAU;IAAU;IAAa;IAAW;IAAU;IAAY;IAAS;IAAW;IAAW;IAAU;IAAY;IAAW;IAAW;IAAQ;IAAW;IAAU;IAAY;IAAS;IAAQ;IAAW;IAAW;IAAU;IAAY;IAAY;IAAU;IAAW;IAAa;IAAY;IAAY;IAAW;IAAU;IAAW;IAAU;IAAS;IAAU;IAAU;IAAY;IAAY;IAAY;IAAS;IAAW;IAAa;IAAU;IAAW;IAAW;IAAU;IAAS;IAAW;IAAa;IAAU;IAAY;IAAU;IAAY;IAAW;IAAY;IAAa;IAAa;IAAa;IAAY;IAAa;IAAY;IAAY;IAAY;IAAS;IAAa;IAAY;IAAW;IAAU;IAAa;IAAW;IAAU;IAAW;IAAW;IAAU;IAAW;IAAW;IAAW;IAAY;IAAU;IAAY;IAAW;IAAY;IAAY;IAAY;IAAa;IAAa;IAAY;IAAU;IAAY;IAAY;IAAU;IAAa;IAAa;IAAY;IAAY;IAAU;IAAS;IAAW;IAAa;IAAa;IAAa;IAAW;IAAU;IAAY;IAAa;IAAa;IAAW;IAAY;IAAa;IAAS;IAAa;IAAY;IAAY;IAAQ;IAAY;IAAU;IAAS;IAAW;IAAW;IAAY;IAAU;IAAW;IAAU;IAAS;IAAY;IAAa;IAAW;IAAW;IAAU;IAAa;IAAW;IAAY;IAAW;IAAY;IAAa;IAAS;IAAS;IAAW;IAAU;IAAW;IAAa;IAAS;IAAY;IAAY;IAAW;IAAa;IAAY;IAAW;IAAS;IAAY;IAAY;IAAa;IAAW;IAAa;IAAW;IAAU;IAAW;IAAU;IAAS;IAAW;IAAY;IAAW;IAAW;IAAa;IAAY;IAAY;IAAW;IAAY;IAAQ;IAAW;IAAa;IAAW;IAAS;IAAW;IAAW;IAAU;IAAa;IAAW;IAAY;IAAa;IAAY;IAAY;IAAU;IAAY;IAAY;IAAY;IAAY;IAAY;IAAS;IAAY;IAAU;IAAY;IAAW;IAAU;IAAY;IAAS;IAAW;IAAW;IAAU;IAAY;IAAQ;IAAY;IAAY;IAAY;IAAS;IAAS;IAAW;IAAa;IAAU;IAAW;IAAS;IAAW;IAAY;IAAW;IAAS;IAAa;IAAa;IAAW;IAAS;IAAW;IAAS;IAAU;IAAY;IAAW;IAAY;IAAY;IAAU;IAAW;IAAY;IAAa;IAAY;IAAY;IAAa;IAAY;IAAQ;IAAa;IAAY;IAAW;IAAW;IAAa;IAAY;IAAS;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAa;IAAa;IAAW;IAAU;IAAU;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAS;IAAU;IAAU;IAAY;IAAS;IAAU;IAAW;IAAY;IAAW;IAAW;IAAW;IAAY;IAAY;IAAa;IAAW;IAAY;IAAS;IAAY;IAAY;IAAW;IAAU;IAAa;IAAQ;IAAW;IAAW;IAAW;IAAY;IAAa;IAAa;IAAY;IAAU;IAAW;IAAW;IAAW;IAAW;IAAW;IAAU;IAAY;IAAU;IAAY;IAAU;IAAY;IAAW;IAAY;IAAY;IAAa;IAAQ;IAAa;IAAW;IAAW;IAAQ;IAAW;IAAW;IAAW;IAAW;IAAa;IAAS;IAAW;IAAW;IAAY;IAAS;IAAQ;IAAW;IAAY;IAAa;IAAS;IAAU;IAAW;IAAU;IAAY;IAAa;IAAW;IAAS;IAAY;IAAY;IAAQ;IAAa;IAAW;IAAS;IAAW;IAAU;IAAW;IAAU;IAAS;IAAU;IAAa;IAAY;IAAQ;IAAW;IAAU;IAAa;IAAS;IAAW;IAAW;IAAa;IAAS;IAAW;IAAQ;IAAS;IAAY;IAAW;IAAa;IAAS;IAAS;IAAW;IAAW;IAAW;IAAW;IAAW;IAAa;IAAU;IAAY;IAAW;IAAW;IAAY;IAAW;IAAY;IAAY;IAAW;IAAU;IAAY;IAAY;IAAS;IAAW;IAAY;IAAY;IAAW;IAAY;IAAa;IAAU;IAAW;IAAQ;IAAa;IAAa;IAAY;IAAU;IAAS;IAAU;IAAY;IAAW;IAAY;IAAY;IAAW;IAAY;IAAW;IAAW;IAAW;IAAY;IAAQ;IAAU;IAAW;IAAW;IAAY;IAAS;IAAW;IAAQ;IAAW;IAAU;IAAU;IAAY;IAAS;IAAS;IAAY;IAAa;IAAU;IAAa;IAAY;IAAa;IAAW;IAAY;IAAQ;IAAQ;IAAS;IAAW;IAAW;IAAQ;IAAU;IAAS;IAAU;IAAY;IAAW;IAAY;IAAY;IAAU;IAAW;IAAa;IAAa;IAAY;IAAW;IAAS;IAAU;IAAY;IAAY;IAAY;IAAW;IAAW;IAAW;IAAY;IAAQ;IAAa;IAAW;IAAU;IAAU;IAAW;IAAY;IAAS;IAAW;IAAU;IAAU;IAAY;IAAW;IAAU;IAAU;IAAW;IAAU;IAAU;IAAa;IAAS;IAAU;IAAW;IAAY;IAAY;IAAQ;IAAW;IAAa;IAAW;IAAY;IAAW;IAAY;IAAW;IAAW;IAAa;IAAY;IAAW;IAAY;IAAa;IAAY;IAAW;IAAW;IAAU;IAAQ;IAAW;IAAU;IAAa;IAAS;IAAU;IAAW;IAAY;IAAa;IAAW;IAAW;IAAS;IAAW;IAAU;IAAQ;IAAW;IAAW;IAAW;IAAU;IAAW;IAAQ;IAAQ;IAAY;IAAU;IAAS;IAAY;IAAW;IAAY;IAAS;IAAW;IAAW;IAAW;IAAU;IAAW;IAAQ;IAAW;IAAW;IAAW;IAAS;IAAW;IAAS;IAAS;IAAU;IAAY;IAAU;IAAQ;CAAQ;AAE/qrB,iBAAiB;;;;;ACJjB;AAEA,IAAI,ia;IAAS;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAW;IAAQ;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAQ;IAAO;IAAW;IAAU;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAS;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAQ;IAAO;IAAS;IAAO;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAY;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAS;IAAS;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAY;IAAS;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAS;IAAU;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAS;IAAS;IAAW;IAAQ;IAAS;IAAQ;IAAU;IAAO;IAAO;IAAS;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAU;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAS;IAAO;IAAS;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAS;IAAO;IAAQ;IAAQ;IAAQ;IAAU;IAAU;IAAQ;IAAO;IAAO;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAO;IAAS;IAAO;IAAS;IAAQ;IAAO;IAAS;IAAQ;IAAS;IAAO;IAAO;IAAU;IAAS;IAAS;IAAO;IAAQ;IAAO;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAS;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAY;IAAQ;IAAU;IAAU;IAAQ;IAAQ;IAAO;IAAS;IAAS;IAAS;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAS;IAAO;IAAS;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAS;IAAO;IAAO;IAAQ;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAO;IAAQ;IAAO;IAAQ;IAAQ;IAAW;IAAO;IAAO;IAAO;IAAS;IAAO;IAAU;IAAQ;IAAQ;IAAU;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAQ;IAAS;IAAO;IAAU;IAAQ;IAAS;IAAQ;IAAS;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAS;IAAS;IAAO;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAW;IAAO;IAAQ;IAAU;IAAU;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAS;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAS;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAS;IAAO;IAAU;IAAQ;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAQ;IAAS;IAAS;IAAQ;IAAO;IAAQ;IAAS;IAAW;IAAS;IAAQ;IAAQ;IAAU;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAS;IAAO;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAS;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAU;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAS;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAU;IAAS;IAAO;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAS;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAS;IAAU;IAAO;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAU;IAAO;IAAY;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAW;IAAO;IAAS;IAAS;IAAS;IAAQ;IAAO;IAAS;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAS;IAAO;IAAO;IAAO;IAAS;IAAS;IAAO;IAAO;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAU;IAAO;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAS;IAAU;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAS;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAQ;IAAU;IAAQ;IAAQ;IAAS;IAAO;IAAS;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAS;IAAY;IAAO;IAAQ;IAAU;IAAU;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAU;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAW;IAAS;IAAO;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAS;IAAO;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAU;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAS;IAAO;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAQ;IAAO;IAAQ;IAAS;IAAQ;IAAQ;IAAU;IAAQ;IAAO;IAAU;IAAQ;IAAO;IAAO;IAAQ;IAAQ;IAAS;IAAW;IAAW;IAAO;IAAO;IAAQ;IAAU;IAAQ;IAAQ;IAAO;IAAO;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAO;IAAS;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAS;IAAQ;IAAO;IAAS;IAAO;IAAS;IAAO;IAAY;IAAQ;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAS;IAAQ;IAAO;IAAS;IAAQ;IAAO;IAAO;IAAQ;IAAS;IAAO;IAAS;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAW;IAAO;IAAO;IAAO;IAAS;IAAQ;IAAO;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAO;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;IAAU;IAAO;IAAQ;IAAQ;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAU;IAAQ;IAAQ;IAAQ;IAAU;IAAQ;IAAS;IAAO;IAAS;IAAQ;IAAQ;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAO;IAAQ;IAAS;IAAQ;IAAQ;IAAO;IAAS;IAAQ;IAAO;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAS;IAAO;IAAO;IAAO;IAAQ;IAAQ;IAAO;IAAS;IAAS;IAAO;CAAM;AAE58f,iBAAiB;;;;;ACJjB;AAEA,IAAI,gCAAU;IAAC;IAAU;IAAW;IAAS;IAAW;IAAW;IAAS;IAAU;IAAU;IAAS;IAAU;IAAS;IAAU;IAAY;IAAU;IAAW;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAS;IAAU;IAAS;IAAU;IAAQ;IAAU;IAAU;IAAU;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAU;IAAU;IAAU;IAAW;IAAY;IAAU;IAAW;IAAS;IAAU;IAAW;IAAU;IAAU;IAAW;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAW;IAAS;IAAU;IAAY;IAAW;IAAU;IAAQ;IAAU;IAAW;IAAS;IAAU;IAAU;IAAU;IAAS;IAAW;IAAQ;IAAY;IAAU;IAAW;IAAU;IAAQ;IAAU;IAAY;IAAS;IAAU;IAAU;IAAQ;IAAU;IAAU;IAAS;IAAU;IAAU;IAAW;IAAU;IAAU;IAAU;IAAW;IAAS;IAAS;IAAW;IAAQ;IAAU;IAAU;IAAS;IAAW;IAAS;IAAS;IAAU;IAAU;IAAW;IAAU;IAAU;IAAS;IAAU;IAAU;IAAW;IAAU;IAAS;IAAU;IAAW;IAAW;IAAU;IAAQ;IAAU;IAAW;IAAW;IAAQ;IAAW;IAAS;IAAU;IAAS;IAAY;IAAW;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAY;IAAU;IAAW;IAAW;IAAQ;IAAS;IAAW;IAAS;IAAS;IAAU;IAAS;IAAY;IAAU;IAAS;IAAQ;IAAU;IAAW;IAAS;IAAU;IAAQ;IAAW;IAAO;IAAS;IAAU;IAAW;IAAY;IAAQ;IAAU;IAAW;IAAS;IAAW;IAAQ;IAAW;IAAW;IAAW;IAAS;IAAU;IAAU;IAAU;IAAS;IAAU;IAAQ;IAAU;IAAQ;IAAU;IAAU;IAAU;IAAU;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAW;IAAW;IAAS;IAAQ;IAAU;IAAS;IAAO;IAAY;IAAS;IAAY;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAY;IAAQ;IAAS;IAAW;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAU;IAAS;IAAS;IAAW;IAAW;IAAS;IAAU;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAS;IAAY;IAAW;IAAU;IAAW;IAAY;IAAS;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAS;IAAO;IAAU;IAAQ;IAAQ;IAAU;IAAQ;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAW;IAAS;IAAU;IAAU;IAAQ;IAAU;IAAW;IAAS;IAAS;IAAS;IAAU;IAAS;IAAU;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAU;IAAS;IAAU;IAAS;IAAW;IAAS;IAAS;IAAU;IAAU;IAAU;IAAW;IAAU;IAAU;IAAS;IAAS;IAAY;IAAU;IAAQ;IAAS;IAAU;IAAW;IAAQ;IAAU;IAAO;IAAW;IAAU;IAAS;IAAW;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAU;IAAW;IAAU;IAAS;IAAW;IAAU;IAAU;IAAW;IAAU;IAAS;IAAS;IAAW;IAAS;IAAQ;IAAS;IAAY;IAAU;IAAU;IAAW;IAAQ;IAAW;IAAW;IAAU;IAAS;IAAW;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAU;IAAS;IAAQ;IAAW;IAAS;IAAS;IAAS;IAAY;IAAU;IAAW;IAAW;IAAU;IAAU;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAW;IAAW;IAAS;IAAU;IAAW;IAAW;IAAW;IAAS;IAAU;IAAS;IAAU;IAAS;IAAU;IAAS;IAAW;IAAU;IAAW;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAW;IAAQ;IAAS;IAAQ;IAAS;IAAW;IAAS;IAAW;IAAS;IAAQ;IAAU;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAW;IAAS;IAAY;IAAS;IAAY;IAAW;IAAU;IAAQ;IAAW;IAAQ;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAU;IAAS;IAAW;IAAW;IAAS;IAAU;IAAW;IAAU;IAAS;IAAU;IAAS;IAAW;IAAW;IAAU;IAAQ;IAAS;IAAY;IAAW;IAAU;IAAW;IAAU;IAAU;IAAS;IAAU;IAAS;IAAW;IAAW;IAAS;IAAU;IAAW;IAAS;IAAS;IAAU;IAAU;IAAU;IAAS;IAAY;IAAY;IAAS;IAAQ;IAAU;IAAU;IAAU;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAS;IAAU;IAAW;IAAS;IAAS;IAAU;IAAW;IAAQ;IAAU;IAAS;IAAU;IAAW;IAAS;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAO;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAQ;IAAW;IAAW;IAAS;IAAW;IAAW;IAAU;IAAU;IAAS;IAAU;IAAW;IAAW;IAAW;IAAY;IAAS;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAS;IAAQ;IAAU;IAAW;IAAY;IAAS;IAAU;IAAU;IAAU;IAAU;IAAS;IAAQ;IAAY;IAAS;IAAU;IAAU;IAAU;IAAW;IAAW;IAAS;IAAW;IAAW;IAAQ;IAAU;IAAS;IAAQ;IAAS;IAAW;IAAO;IAAS;IAAU;IAAU;IAAS;IAAO;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAS;IAAO;IAAW;IAAQ;IAAY;IAAY;IAAU;IAAU;IAAU;IAAU;IAAO;IAAW;IAAY;IAAU;IAAY;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAY;IAAU;IAAW;IAAU;IAAW;IAAS;IAAW;IAAW;IAAU;IAAW;IAAS;IAAU;IAAW;IAAW;IAAU;IAAU;IAAU;IAAU;IAAU;IAAY;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAS;IAAU;IAAU;IAAW;IAAY;IAAU;IAAW;IAAU;IAAY;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAS;IAAQ;IAAU;IAAU;IAAS;IAAU;IAAU;IAAS;IAAU;IAAW;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAW;IAAU;IAAW;IAAY;IAAW;IAAW;IAAY;IAAW;IAAW;IAAU;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAQ;IAAW;IAAU;IAAW;IAAY;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAO;IAAW;IAAS;IAAS;IAAO;IAAS;IAAS;IAAW;IAAU;IAAW;IAAU;IAAU;IAAQ;IAAS;IAAY;IAAS;IAAS;IAAU;IAAQ;IAAS;IAAU;IAAU;IAAS;IAAQ;IAAQ;IAAU;IAAU;IAAU;IAAO;IAAS;IAAU;IAAU;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAS;IAAQ;IAAU;IAAU;IAAS;IAAW;IAAS;IAAS;IAAS;IAAW;IAAU;IAAQ;IAAQ;IAAW;IAAW;IAAU;IAAS;IAAU;IAAU;IAAS;IAAS;IAAS;IAAS;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAS;IAAY;IAAS;IAAW;IAAS;IAAS;IAAW;IAAU;IAAU;IAAS;IAAS;IAAQ;IAAQ;IAAY;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAU;IAAS;IAAY;IAAU;IAAQ;IAAY;IAAU;IAAS;IAAO;IAAW;IAAS;IAAS;IAAW;IAAW;IAAU;IAAS;IAAW;IAAY;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAO;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAY;IAAS;IAAS;IAAU;IAAS;IAAU;IAAU;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAU;IAAS;IAAS;IAAU;IAAS;IAAW;IAAU;IAAS;IAAU;IAAS;IAAS;IAAY;IAAU;IAAU;IAAS;IAAU;IAAU;IAAS;IAAS;IAAQ;IAAU;IAAU;IAAU;IAAO;IAAW;IAAW;IAAS;IAAS;IAAU;IAAS;IAAU;IAAS;IAAW;IAAU;IAAU;IAAS;IAAU;IAAW;IAAW;IAAQ;IAAS;IAAY;IAAU;IAAS;IAAW;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAS;IAAU;IAAQ;IAAS;IAAU;IAAU;IAAS;IAAS;IAAS;IAAQ;IAAU;IAAW;IAAW;IAAQ;IAAU;IAAY;IAAS;IAAS;IAAS;IAAU;IAAU;IAAW;IAAS;IAAS;IAAU;IAAY;IAAU;IAAS;IAAU;IAAS;IAAW;IAAW;IAAW;IAAW;IAAW;IAAU;IAAU;IAAW;IAAW;IAAU;IAAW;IAAU;IAAU;IAAW;IAAY;IAAY;IAAW;IAAU;IAAW;IAAY;IAAO;IAAQ;IAAW;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAU;IAAW;IAAS;IAAS;IAAW;IAAQ;IAAW;IAAU;IAAW;IAAU;IAAS;IAAQ;IAAU;IAAU;IAAQ;IAAW;IAAQ;IAAW;IAAU;IAAS;IAAU;IAAS;IAAU;IAAY;IAAS;IAAS;IAAW;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAW;IAAY;IAAU;IAAS;IAAS;IAAW;IAAY;IAAQ;IAAU;IAAY;IAAS;IAAU;IAAS;IAAS;IAAY;IAAQ;IAAU;IAAS;IAAU;IAAS;IAAQ;IAAQ;IAAY;IAAS;IAAU;IAAQ;IAAW;IAAY;IAAU;IAAU;IAAS;IAAS;IAAS;IAAY;IAAW;IAAS;IAAS;IAAQ;IAAW;IAAY;IAAS;IAAS;IAAU;IAAU;IAAU;IAAQ;IAAU;IAAQ;IAAW;IAAU;IAAU;IAAS;IAAS;IAAU;IAAW;IAAQ;IAAY;IAAY;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAS;IAAS;IAAU;IAAS;IAAU;IAAU;IAAU;IAAU;IAAU;IAAU;IAAQ;IAAW;IAAQ;IAAU;IAAW;IAAS;IAAW;IAAQ;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAU;IAAQ;IAAO;IAAU;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAS;IAAW;IAAS;IAAY;IAAU;IAAQ;IAAS;IAAS;IAAW;IAAQ;IAAY;IAAO;IAAS;IAAS;IAAU;IAAU;IAAU;IAAW;IAAW;IAAU;IAAS;IAAQ;IAAY;IAAU;IAAS;IAAW;IAAS;IAAU;IAAW;IAAS;IAAW;IAAS;IAAW;IAAS;IAAW;IAAW;IAAS;IAAU;IAAU;IAAW;IAAS;IAAW;IAAS;IAAS;IAAW;IAAY;IAAW;IAAO;IAAU;IAAQ;IAAS;IAAW;IAAS;IAAU;IAAS;IAAQ;IAAW;IAAQ;IAAO;IAAW;IAAW;IAAW;IAAQ;IAAQ;IAAU;IAAW;IAAU;IAAS;IAAS;IAAQ;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAW;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAW;IAAS;IAAW;IAAU;IAAS;IAAS;IAAS;IAAU;IAAU;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAW;IAAU;IAAS;IAAU;IAAQ;IAAS;IAAS;IAAU;IAAS;IAAU;IAAW;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAW;IAAS;IAAQ;IAAY;IAAS;IAAS;IAAW;IAAS;IAAU;IAAW;IAAS;IAAS;IAAW;IAAS;IAAU;IAAS;IAAS;IAAU;IAAW;IAAW;IAAS;IAAQ;IAAW;IAAS;IAAW;IAAS;IAAW;IAAS;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAU;IAAS;IAAW;IAAS;IAAW;IAAS;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAW;IAAU;IAAU;IAAS;IAAQ;IAAQ;IAAW;IAAW;IAAQ;IAAS;IAAS;IAAQ;IAAQ;IAAW;IAAU;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAU;IAAY;IAAW;IAAS;IAAO;IAAS;IAAW;IAAW;IAAQ;IAAQ;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAW;IAAS;IAAQ;IAAU;IAAS;IAAU;IAAU;IAAU;IAAW;IAAQ;IAAS;IAAQ;IAAO;IAAO;IAAU;IAAU;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAW;IAAQ;IAAQ;IAAS;IAAW;IAAU;IAAU;IAAU;IAAS;IAAW;IAAW;IAAY;IAAU;IAAQ;IAAW;IAAQ;IAAS;IAAS;IAAW;IAAU;IAAW;IAAW;IAAU;IAAU;IAAO;IAAY;IAAS;IAAW;IAAU;IAAU;IAAO;IAAS;IAAU;IAAQ;IAAS;IAAU;IAAU;IAAY;IAAU;IAAS;IAAS;IAAS;IAAU;IAAW;IAAQ;IAAS;IAAW;IAAW;IAAS;IAAU;IAAW;IAAS;IAAU;IAAU;IAAO;IAAS;IAAW;IAAW;IAAY;IAAS;IAAS;IAAW;IAAW;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAY;IAAU;IAAY;IAAS;IAAS;IAAS;IAAW;IAAQ;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAQ;IAAU;IAAW;IAAU;IAAU;IAAS;IAAS;IAAS;IAAS;IAAS;IAAS;IAAY;IAAS;IAAW;IAAW;IAAQ;IAAU;IAAQ;IAAU;IAAW;IAAS;IAAQ;IAAU;IAAY;IAAQ;IAAU;IAAU;IAAU;IAAU;IAAU;IAAS;IAAW;IAAS;IAAW;IAAQ;IAAS;IAAW;IAAY;IAAW;IAAa;IAAO;IAAW;IAAS;IAAW;IAAO;IAAU;IAAU;IAAS;IAAU;IAAS;IAAU;IAAY;IAAQ;IAAU;IAAS;IAAS;IAAS;IAAQ;IAAU;IAAS;IAAW;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAW;IAAS;IAAS;IAAY;IAAS;IAAS;IAAU;IAAU;IAAQ;IAAS;IAAS;IAAY;IAAU;IAAU;IAAU;IAAW;IAAS;IAAY;IAAS;IAAQ;IAAS;IAAU;IAAY;IAAU;IAAU;IAAS;IAAU;IAAS;IAAa;IAAY;IAAU;IAAQ;IAAU;IAAW;IAAY;IAAU;IAAY;IAAY;IAAS;IAAW;IAAU;IAAU;IAAY;IAAU;IAAY;IAAW;IAAS;IAAU;IAAU;IAAU;IAAS;IAAS;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAU;IAAS;IAAU;IAAU;IAAS;IAAU;IAAY;IAAU;IAAU;IAAW;IAAS;IAAQ;IAAW;IAAW;IAAS;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAW;IAAS;IAAS;IAAS;IAAQ;IAAQ;IAAQ;IAAU;IAAa;IAAY;IAAW;IAAU;IAAU;IAAU;IAAW;IAAW;IAAU;IAAS;IAAW;IAAO;IAAW;IAAW;IAAW;IAAW;IAAW;IAAW;IAAU;IAAS;IAAS;IAAW;IAAU;IAAS;IAAS;IAAQ;IAAU;IAAU;IAAW;IAAW;IAAS;IAAS;IAAW;IAAQ;IAAU;IAAU;IAAS;IAAW;IAAW;IAAU;IAAU;IAAO;IAAW;IAAU;IAAW;IAAS;IAAW;IAAU;IAAW;IAAW;IAAU;IAAU;IAAW;IAAO;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAQ;IAAW;IAAS;IAAW;IAAW;IAAQ;IAAW;IAAQ;IAAS;IAAQ;IAAQ;IAAS;IAAQ;IAAU;IAAS;IAAS;IAAW;IAAQ;IAAU;IAAQ;IAAU;IAAU;IAAO;IAAS;IAAS;IAAQ;IAAU;IAAQ;IAAS;IAAU;IAAS;IAAS;IAAS;IAAQ;IAAS;IAAS;IAAS;IAAS;IAAU;IAAQ;IAAS;IAAS;IAAW;IAAQ;IAAU;IAAW;IAAS;IAAS;IAAS;IAAS;IAAS;IAAW;IAAQ;IAAS;IAAU;IAAS;IAAW;IAAU;IAAS;IAAS;IAAS;IAAU;IAAS;IAAY;IAAW;IAAU;IAAU;IAAW;IAAQ;IAAS;IAAQ;IAAS;IAAW;IAAW;IAAU;IAAU;IAAS;IAAY;IAAY;IAAQ;IAAW;IAAS;IAAO;IAAU;IAAQ;IAAS;IAAS;IAAU;IAAW;IAAS;IAAU;IAAU;IAAU;IAAW;IAAS;IAAW;IAAO;IAAS;IAAW;IAAU;IAAW;IAAW;IAAQ;IAAW;IAAU;IAAQ;IAAS;IAAS;IAAU;IAAS;IAAS;IAAS;IAAW;IAAU;IAAY;IAAS;IAAY;IAAS;IAAU;IAAW;IAAS;IAAU;IAAS;IAAS;IAAS;IAAO;IAAU;IAAW;IAAW;IAAW;IAAU;IAAa;IAAU;IAAU;IAAU;IAAU;IAAW;IAAQ;IAAU;IAAW;IAAS;IAAY;IAAU;IAAW;IAAW;IAAS;IAAS;IAAU;IAAS;IAAU;IAAS;IAAU;IAAU;IAAU;IAAU;IAAW;IAAS;IAAW;IAAU;IAAW;IAAW;IAAO;IAAS;IAAW;IAAU;IAAS;IAAS;IAAU;IAAW;IAAS;IAAS;IAAQ;IAAS;IAAQ;IAAS;IAAS;IAAW;IAAS;IAAU;IAAW;IAAU;IAAS;IAAU;IAAQ;IAAU;IAAS;IAAU;IAAY;IAAS;IAAS;IAAU;IAAW;IAAS;IAAS;IAAS;IAAW;IAAS;IAAQ;IAAU;IAAU;IAAS;IAAS;IAAY;IAAU;IAAS;IAAU;IAAQ;IAAa;IAAQ;IAAS;IAAU;IAAS;IAAU;IAAS;IAAS;IAAS;IAAW;IAAW;IAAS;IAAY;IAAW;IAAU;IAAS;IAAU;IAAW;IAAU;IAAS;IAAO;IAAS;IAAY;IAAU;IAAU;IAAU;IAAS;IAAS;IAAU;IAAS;IAAU;IAAW;IAAQ;IAAS;IAAQ;IAAW;IAAQ;IAAQ;IAAU;IAAU;IAAW;IAAW;IAAQ;IAAU;IAAW;IAAS;IAAU;IAAQ;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAS;IAAQ;IAAS;IAAU;IAAU;IAAY;IAAU;IAAQ;IAAW;IAAS;IAAS;IAAW;IAAO;IAAS;IAAS;IAAW;IAAW;IAAW;IAAS;IAAY;IAAS;IAAS;IAAS;IAAU;IAAS;IAAU;IAAU;IAAW;IAAU;IAAW;IAAQ;IAAU;IAAQ;IAAS;IAAS;IAAS;IAAU;IAAW;IAAU;IAAU;IAAU;IAAS;IAAS;IAAS;IAAS;IAAU;IAAS;IAAY;IAAQ;IAAU;IAAS;IAAS;IAAU;IAAW;IAAW;IAAW;IAAS;IAAS;IAAU;IAAW;IAAU;IAAU;IAAQ;IAAY;IAAO;IAAS;IAAQ;IAAU;IAAQ;IAAW;IAAQ;IAAQ;IAAW;IAAS;IAAW;IAAO;IAAQ;IAAU;IAAU;IAAS;IAAQ;IAAS;IAAW;IAAQ;IAAW;IAAS;IAAS;IAAY;IAAW;IAAQ;IAAU;IAAU;IAAQ;IAAU;IAAU;IAAa;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAQ;IAAU;IAAS;IAAU;IAAU;IAAS;IAAS;IAAS;IAAO;IAAU;IAAS;IAAS;IAAU;IAAS;IAAS;IAAU;IAAQ;IAAS;IAAU;IAAS;IAAY;IAAQ;IAAU;IAAU;IAAS;IAAW;IAAS;IAAO;IAAS;IAAW;IAAQ;IAAW;IAAW;IAAS;IAAS;IAAU;IAAS;IAAY;IAAS;IAAY;IAAS;IAAS;IAAU;IAAS;IAAQ;IAAW;IAAW;IAAU;IAAS;IAAS;IAAQ;IAAO;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAQ;IAAS;IAAQ;IAAQ;IAAQ;IAAS;IAAU;IAAS;IAAU;IAAS;IAAQ;IAAS;IAAQ;CAAQ;AAEz2mB,iBAAiB;;;;;;;;ACJjB;AAEA,IAAI,4BAAM,CAAC;;AAEX,qBAAqB;AACrB,0BAAI,OAAO,GAAG,MAAM;AACpB,0BAAI,YAAY,GAAG,SAAU,OAAO;IAClC,IAAI,YAAY,WAAW;QACzB,IAAI,UAAU,CAAC;;;gDAG6B,CAAC;QAC7C,QAAQ,IAAI,CAAC;IACf;AACF;AACA,0BAAI,YAAY,CAAC,eAAO,WAAW;AACnC,eAAO,WAAW,GAAG,0BAAI,OAAO;AAEhC,SAAS;AACT,0BAAI,MAAM,GAAG,CAAC;;AACd,0BAAI,MAAM,CAAC,EAAE,GAAG;;AAChB,0BAAI,MAAM,CAAC,KAAK,GAAG;;AACnB,0BAAI,MAAM,CAAC,IAAI,GAAG;;AAClB,0BAAI,MAAM,CAAC,MAAM,GAAG;;AACpB,0BAAI,MAAM,CAAC,KAAK,GAAG;;AACnB,0BAAI,MAAM,CAAC,SAAS,GAAG;AAEvB,WAAW;AACX,0BAAI,QAAQ,GAAG,CAAC;;AAChB,0BAAI,QAAQ,CAAC,MAAM,GAAG;;AACtB,0BAAI,QAAQ,CAAC,WAAW,GAAG;;AAC3B,0BAAI,QAAQ,CAAC,YAAY,GAAG;;AAC5B,0BAAI,QAAQ,CAAC,YAAY,GAAG;;AAC5B,0BAAI,QAAQ,CAAC,MAAM,GAAG;AAEtB,YAAY;AACZ,0BAAI,IAAI,GAAG,CAAC;;AACZ,0BAAI,IAAI,CAAC,EAAE,GAAG;;AACd,0BAAI,IAAI,CAAC,aAAa,GAAG;;AAEzB,+BAA+B;AAC/B,0BAAI,MAAM,GAAG;;AAEb,uBAAuB;AACvB,0BAAI,OAAO,GAAG;;AACd,0BAAI,KAAK,GAAG;;AACZ,0BAAI,WAAW,GAAG;;AAClB,0BAAI,WAAW,GAAG;;AAClB,0BAAI,YAAY,GAAG;;AACnB,0BAAI,WAAW,GAAG;;AAClB,0BAAI,QAAQ,GAAG;;AACf,0BAAI,MAAM,GAAG;;AACb,0BAAI,UAAU,GAAG;;AACjB,0BAAI,SAAS,GAAG;;AAChB,0BAAI,MAAM,GAAG;;AACb,0BAAI,WAAW,GAAG;;AAClB,0BAAI,KAAK,GAAG;;AACZ,0BAAI,SAAS,GAAG;AAEhB,kCAAkC;AAClC,0BAAI,IAAI,GAAG,CAAC;;AACZ,0BAAI,IAAI,CAAC,IAAI,GAAG;;AAChB,0BAAI,IAAI,CAAC,IAAI,GAAG;AAChB,0BAAI,IAAI,CAAC,MAAM;;AACf,0BAAI,IAAI,CAAC,QAAQ,GAAG;;AACpB,0BAAI,IAAI,CAAC,CAAC,GAAG;;AAEb,wDAAwD;AACxD,0BAAI,WAAW,CAAC,OAAO,GAAG;;AAE1B,0BAAI,OAAO,GAAG;;AACd,0BAAI,QAAQ,GAAG;IAEf,sBAAsB;AACtB,2CAAe","sources":["package.json","lib/crypto/bn.js","lib/bn.js","lib/util/preconditions.js","lib/errors/index.js","lib/util/_.js","lib/errors/spec.js","lib/crypto/ecdsa.js","lib/crypto/point.js","lib/crypto/signature.js","lib/util/js.js","lib/publickey.js","lib/crypto/hash.js","lib/crypto/hash.browser.js","lib/networks.js","lib/privatekey.js","lib/address.js","lib/encoding/base58check.js","lib/encoding/base58.js","lib/script/index.js","lib/script/script.js","lib/encoding/bufferwriter.js","lib/script/write-u8-le.js","lib/script/write-u16-le.js","lib/script/write-u32-le.js","lib/script/write-i32-le.js","lib/script/write-varint.js","lib/opcode.js","lib/encoding/decode-script-chunks.js","lib/encoding/decode-asm.js","lib/encoding/decode-hex.js","lib/encoding/is-hex.js","lib/script/write-push-data.js","lib/encoding/encode-hex.js","lib/script/interpreter.js","lib/script/stack.js","lib/transaction/index.js","lib/transaction/transaction.js","lib/encoding/bufferreader.js","lib/encoding/varint.js","lib/transaction/sighash.js","lib/transaction/output.js","lib/hash-cache.js","lib/transaction/input/index.js","lib/transaction/input/input.js","lib/transaction/signature.js","lib/transaction/input/publickey.js","lib/transaction/input/publickeyhash.js","lib/transaction/input/multisig.js","lib/transaction/input/multisigscripthash.js","lib/transaction/unspentoutput.js","lib/crypto/random.js","lib/crypto/random.browser.js","lib/block/index.js","lib/block/block.js","lib/block/blockheader.js","lib/block/merkleblock.js","lib/hdprivatekey.js","lib/hdpublickey.js","lib/ecies/index.js","lib/ecies/electrum-ecies.js","lib/ecies/bitcore-ecies.js","lib/message/message.js","lib/mnemonic/mnemonic.js","lib/mnemonic/pbkdf2.js","lib/mnemonic/pbkdf2.browser.js","lib/mnemonic/words/index.js","lib/mnemonic/words/chinese.js","lib/mnemonic/words/english.js","lib/mnemonic/words/french.js","lib/mnemonic/words/italian.js","lib/mnemonic/words/japanese.js","lib/mnemonic/words/spanish.js","index.js"],"sourcesContent":["{\n  \"name\": \"@scrypt-inc/bsv\",\n  \"version\": \"1.0.1\",\n  \"description\": \"A pure and powerful JavaScript Bitcoin SV (BSV) library.\",\n  \"author\": \"sCrypt.Inc\",\n  \"source\": \"./index.js\",\n  \"main\": \"dist/main.js\",\n  \"module\": \"dist/module.js\",\n  \"browser\": \"dist/browser.js\",\n  \"types\": \"./index.d.ts\",\n  \"scripts\": {\n    \"lint\": \"standard --fix\",\n    \"build\": \"parcel build --no-cache\",\n    \"dev\": \"mocha -g 'BIP32' \",\n    \"test\": \"standard && mocha\",\n    \"coverage\": \"nyc --reporter=text npm run test\",\n    \"prepublishOnly\": \"yarn build\",\n    \"release\": \"npm publish --access public\"\n  },\n  \"targets\": {\n    \"types\": false\n  },\n  \"keywords\": [\n    \"bitcoin\",\n    \"bsv\",\n    \"scrypt\",\n    \"transaction\",\n    \"address\",\n    \"p2p\",\n    \"ecies\",\n    \"cryptocurrency\",\n    \"blockchain\",\n    \"payment\",\n    \"bip21\",\n    \"bip32\",\n    \"bip37\",\n    \"bip69\",\n    \"bip70\",\n    \"multisig\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sCrypt-Inc/bsv\"\n  },\n  \"dependencies\": {\n    \"aes-js\": \"^3.1.2\",\n    \"assert\": \"^2.1.0\",\n    \"bn.js\": \"=4.11.9\",\n    \"bs58\": \"=4.0.1\",\n    \"buffer\": \"^6.0.3\",\n    \"clone-deep\": \"^4.0.1\",\n    \"elliptic\": \"6.5.4\",\n    \"hash.js\": \"^1.1.7\",\n    \"inherits\": \"2.0.3\",\n    \"unorm\": \"1.4.1\"\n  },\n  \"devDependencies\": {\n    \"brfs\": \"2.0.1\",\n    \"chai\": \"4.2.0\",\n    \"mocha\": \"^8.4.0\",\n    \"nyc\": \"^14.1.1\",\n    \"parcel\": \"latest\",\n    \"sinon\": \"7.2.3\",\n    \"standard\": \"12.0.1\"\n  },\n  \"license\": \"MIT\",\n  \"standard\": {\n    \"globals\": [\n      \"afterEach\",\n      \"beforeEach\",\n      \"describe\",\n      \"it\"\n    ],\n    \"ignore\": [\n      \"dist/**\"\n    ]\n  }\n}\n","'use strict'\n\nvar BN = require('../bn')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\n\nvar reversebuf = function (buf) {\n  var buf2 = Buffer.alloc(buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i]\n  }\n  return buf2\n}\n\nBN.Zero = new BN(0)\nBN.One = new BN(1)\nBN.Minus1 = new BN(-1)\n\n/**\n * Convert a number into a big number.\n *\n * @param {number} n Any positive or negative integer.\n */\nBN.fromNumber = function (n) {\n  $.checkArgument(_.isNumber(n))\n  return new BN(n)\n}\n\n/**\n * Convert a string number into a big number.\n *\n * @param {string} str Any positive or negative integer formatted as a string.\n * @param {number} base The base of the number, defaults to 10.\n */\nBN.fromString = function (str, base) {\n  $.checkArgument(_.isString(str))\n  return new BN(str, base)\n}\n\n/**\n * Convert a buffer (such as a 256 bit binary private key) into a big number.\n * Sometimes these numbers can be formatted either as 'big endian' or 'little\n * endian', and so there is an opts parameter that lets you specify which\n * endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromBuffer = function (buf, opts) {\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  var hex = buf.toString('hex')\n  var bn = new BN(hex, 16)\n  return bn\n}\n\n/**\n * Instantiate a BigNumber from a \"signed magnitude buffer\". (a buffer where the\n * most significant bit represents the sign (0 = positive, 1 = negative)\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromSM = function (buf, opts) {\n  var ret\n  if (buf.length === 0) {\n    return BN.fromBuffer(Buffer.from([0]))\n  }\n\n  var endian = 'big'\n  if (opts) {\n    endian = opts.endian\n  }\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f\n    ret = BN.fromBuffer(buf)\n    ret.neg().copy(ret)\n  } else {\n    ret = BN.fromBuffer(buf)\n  }\n  return ret\n}\n\n/**\n * Convert a big number into a number.\n */\nBN.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10)\n}\n\n/**\n * Convert a big number into a buffer. This is somewhat ambiguous, so there is\n * an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toBuffer = function (opts) {\n  var buf, hex\n  if (opts && opts.size) {\n    hex = this.toString(16, 2)\n    var natlen = hex.length / 2\n    buf = Buffer.from(hex, 'hex')\n\n    if (natlen === opts.size) {\n      // buf = buf\n    } else if (natlen > opts.size) {\n      buf = BN.trim(buf, natlen)\n    } else if (natlen < opts.size) {\n      buf = BN.pad(buf, natlen, opts.size)\n    }\n  } else {\n    hex = this.toString(16, 2)\n    buf = Buffer.from(hex, 'hex')\n  }\n\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n */\nBN.prototype.toSMBigEndian = function () {\n  var buf\n  if (this.cmp(BN.Zero) === -1) {\n    buf = this.neg().toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf])\n    } else {\n      buf[0] = buf[0] | 0x80\n    }\n  } else {\n    buf = this.toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf])\n    }\n  }\n\n  if (buf.length === 1 & buf[0] === 0) {\n    buf = Buffer.from([])\n  }\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n *\n * @param {Object} opts Defaults to { endian: 'big' }\n */\nBN.prototype.toSM = function (opts) {\n  var endian = opts ? opts.endian : 'big'\n  var buf = this.toSMBigEndian()\n\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  return buf\n}\n\n/**\n * Create a BN from a \"ScriptNum\": This is analogous to the constructor for\n * CScriptNum in bitcoind. Many ops in bitcoind's script interpreter use\n * CScriptNum, which is not really a proper bignum. Instead, an error is thrown\n * if trying to input a number bigger than 4 bytes. We copy that behavior here.\n * A third argument, `size`, is provided to extend the hard limit of 4 bytes, as\n * some usages require more than 4 bytes.\n *\n * @param {Buffer} buf A buffer of a number.\n * @param {boolean} fRequireMinimal Whether to require minimal size encoding.\n * @param {number} size The maximum size.\n */\nBN.fromScriptNumBuffer = function (buf, fRequireMinimal, size) {\n  var nMaxNumSize = size || Number.MAX_SAFE_INTEGER\n  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'))\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number')\n      }\n    }\n  }\n  return BN.fromSM(buf, {\n    endian: 'little'\n  })\n}\n\n/**\n * The corollary to the above, with the notable exception that we do not throw\n * an error if the output is larger than four bytes. (Which can happen if\n * performing a numerical operation that results in an overflow to more than 4\n * bytes).\n */\nBN.prototype.toScriptNumBuffer = function () {\n  return this.toSM({\n    endian: 'little'\n  })\n}\n\n/**\n * Trims a buffer if it starts with zeros.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n */\nBN.trim = function (buf, natlen) {\n  return buf.slice(natlen - buf.length, buf.length)\n}\n\n/**\n * Adds extra zeros to the start of a number.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n * @param {number} size How big to pad the number in bytes.\n */\nBN.pad = function (buf, natlen, size) {\n  var rbuf = Buffer.alloc(size)\n  for (var i = 0; i < buf.length; i++) {\n    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i]\n  }\n  for (i = 0; i < size - natlen; i++) {\n    rbuf[i] = 0\n  }\n  return rbuf\n}\n/**\n * Convert a big number into a hex string. This is somewhat ambiguous, so there\n * is an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toHex = function (...args) {\n  return this.toBuffer(...args).toString('hex')\n}\n\n/**\n * Convert a hex string (such as a 256 bit binary private key) into a big\n * number. Sometimes these numbers can be formatted either as 'big endian' or\n * 'little endian', and so there is an opts parameter that lets you specify\n * which endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromHex = function (hex, ...args) {\n  return BN.fromBuffer(Buffer.from(hex, 'hex'), ...args)\n}\n\nmodule.exports = BN\n","(function (module, exports) {\n  'use strict'\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed')\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () { }\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number\n    }\n\n    this.negative = 0\n    this.words = null\n    this.length = 0\n\n    // Reduction context\n    this.red = null\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base\n        base = 10\n      }\n\n      this._init(number || 0, base || 10, endian || 'be')\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN\n  } else {\n    exports.BN = BN\n  }\n\n  BN.BN = BN\n  BN.wordSize = 26\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true\n    }\n\n    return num !== null && typeof num === 'object' &&\n            num.constructor.wordSize === BN.wordSize && Array.isArray(num.words)\n  }\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left\n    return right\n  }\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left\n    return right\n  }\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian)\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian)\n    }\n\n    if (base === 'hex') {\n      base = 16\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36)\n\n    number = number.toString().replace(/\\s+/g, '')\n    var start = 0\n    if (number[0] === '-') {\n      start++\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start)\n    } else {\n      this._parseBase(number, base, start)\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1\n    }\n\n    this.strip()\n\n    if (endian !== 'le') return\n\n    this._initArray(this.toArray(), base, endian)\n  }\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1\n      number = -number\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff]\n      this.length = 1\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ]\n      this.length = 2\n    } else {\n      assert(number < 0x20000000000000) // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ]\n      this.length = 3\n    }\n\n    if (endian !== 'le') return\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian)\n  }\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number')\n    if (number.length <= 0) {\n      this.words = [0]\n      this.length = 1\n      return this\n    }\n\n    this.length = Math.ceil(number.length / 3)\n    this.words = new Array(this.length)\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0\n    }\n\n    var j, w\n    var off = 0\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)\n        this.words[j] |= (w << off) & 0x3ffffff\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff\n        off += 24\n        if (off >= 26) {\n          off -= 26\n          j++\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)\n        this.words[j] |= (w << off) & 0x3ffffff\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff\n        off += 24\n        if (off >= 26) {\n          off -= 26\n          j++\n        }\n      }\n    }\n    return this.strip()\n  }\n\n  function parseHex (str, start, end) {\n    var r = 0\n    var len = Math.min(str.length, end)\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48\n\n      r <<= 4\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa\n\n        // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa\n\n        // '0' - '9'\n      } else {\n        r |= c & 0xf\n      }\n    }\n    return r\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6)\n    this.words = new Array(this.length)\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0\n    }\n\n    var j, w\n    // Scan 24-bit chunks and add them to the number\n    var off = 0\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6)\n      this.words[j] |= (w << off) & 0x3ffffff\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff\n      off += 24\n      if (off >= 26) {\n        off -= 26\n        j++\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6)\n      this.words[j] |= (w << off) & 0x3ffffff\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff\n    }\n    this.strip()\n  }\n\n  function parseBase (str, start, end, mul) {\n    var r = 0\n    var len = Math.min(str.length, end)\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48\n\n      r *= mul\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa\n\n        // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa\n\n        // '0' - '9'\n      } else {\n        r += c\n      }\n    }\n    return r\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0]\n    this.length = 1\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++\n    }\n    limbLen--\n    limbPow = (limbPow / base) | 0\n\n    var total = number.length - start\n    var mod = total % limbLen\n    var end = Math.min(total, total - mod) + start\n\n    var word = 0\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base)\n\n      this.imuln(limbPow)\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word\n      } else {\n        this._iaddn(word)\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1\n      word = parseBase(number, i, number.length, base)\n\n      for (i = 0; i < mod; i++) {\n        pow *= base\n      }\n\n      this.imuln(pow)\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word\n      } else {\n        this._iaddn(word)\n      }\n    }\n  }\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length)\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i]\n    }\n    dest.length = this.length\n    dest.negative = this.negative\n    dest.red = this.red\n  }\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null)\n    this.copy(r)\n    return r\n  }\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0\n    }\n    return this\n  }\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--\n    }\n    return this._normSign()\n  }\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0\n    }\n    return this\n  }\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>'\n  }\n\n  /*\n\n    var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n\n    var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n\n    */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ]\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ]\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ]\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10\n    padding = padding | 0 || 1\n\n    var out\n    if (base === 16 || base === 'hex') {\n      out = ''\n      var off = 0\n      var carry = 0\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i]\n        var word = (((w << off) | carry) & 0xffffff).toString(16)\n        carry = (w >>> (24 - off)) & 0xffffff\n        off += 2\n        if (off >= 26) {\n          off -= 26\n          i--\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out\n        } else {\n          out = word + out\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out\n      }\n      if (this.negative !== 0) {\n        out = '-' + out\n      }\n      return out\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base]\n      out = ''\n      var c = this.clone()\n      c.negative = 0\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base)\n        c = c.idivn(groupBase)\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out\n        } else {\n          out = r + out\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out\n      }\n      if (this.negative !== 0) {\n        out = '-' + out\n      }\n      return out\n    }\n\n    assert(false, 'Base should be between 2 and 36')\n  }\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0]\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000)\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits')\n    }\n    return (this.negative !== 0) ? -ret : ret\n  }\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16)\n  }\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined')\n    return this.toArrayLike(Buffer, endian, length)\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length)\n  }\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength()\n    var reqLength = length || Math.max(1, byteLength)\n    assert(byteLength <= reqLength, 'byte array longer than desired length')\n    assert(reqLength > 0, 'Requested array length <= 0')\n\n    this.strip()\n    var littleEndian = endian === 'le'\n    var res = new ArrayType(reqLength)\n\n    var b, i\n    var q = this.clone()\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff)\n        q.iushrn(8)\n\n        res[reqLength - i - 1] = b\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff)\n        q.iushrn(8)\n\n        res[i] = b\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0\n      }\n    }\n\n    return res\n  }\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w)\n    }\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w\n      var r = 0\n      if (t >= 0x1000) {\n        r += 13\n        t >>>= 13\n      }\n      if (t >= 0x40) {\n        r += 7\n        t >>>= 7\n      }\n      if (t >= 0x8) {\n        r += 4\n        t >>>= 4\n      }\n      if (t >= 0x02) {\n        r += 2\n        t >>>= 2\n      }\n      return r + t\n    }\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26\n\n    var t = w\n    var r = 0\n    if ((t & 0x1fff) === 0) {\n      r += 13\n      t >>>= 13\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7\n      t >>>= 7\n    }\n    if ((t & 0xf) === 0) {\n      r += 4\n      t >>>= 4\n    }\n    if ((t & 0x3) === 0) {\n      r += 2\n      t >>>= 2\n    }\n    if ((t & 0x1) === 0) {\n      r++\n    }\n    return r\n  }\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1]\n    var hi = this._countBits(w)\n    return (this.length - 1) * 26 + hi\n  }\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength())\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0\n      var wbit = bit % 26\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit\n    }\n\n    return w\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0\n\n    var r = 0\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i])\n      r += b\n      if (b !== 26) break\n    }\n    return r\n  }\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8)\n  }\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1)\n    }\n    return this.clone()\n  }\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg()\n    }\n    return this.clone()\n  }\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0\n  }\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg()\n  }\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1\n    }\n\n    return this\n  }\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i]\n    }\n\n    return this.strip()\n  }\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0)\n    return this.iuor(num)\n  }\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num)\n    return num.clone().ior(this)\n  }\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num)\n    return num.clone().iuor(this)\n  }\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b\n    if (this.length > num.length) {\n      b = num\n    } else {\n      b = this\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i]\n    }\n\n    this.length = b.length\n\n    return this.strip()\n  }\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0)\n    return this.iuand(num)\n  }\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num)\n    return num.clone().iand(this)\n  }\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num)\n    return num.clone().iuand(this)\n  }\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a\n    var b\n    if (this.length > num.length) {\n      a = this\n      b = num\n    } else {\n      a = num\n      b = this\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i]\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i]\n      }\n    }\n\n    this.length = a.length\n\n    return this.strip()\n  }\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0)\n    return this.iuxor(num)\n  }\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num)\n    return num.clone().ixor(this)\n  }\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num)\n    return num.clone().iuxor(this)\n  }\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0)\n\n    var bytesNeeded = Math.ceil(width / 26) | 0\n    var bitsLeft = width % 26\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded)\n\n    if (bitsLeft > 0) {\n      bytesNeeded--\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft))\n    }\n\n    // And remove leading zeroes\n    return this.strip()\n  }\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width)\n  }\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0)\n\n    var off = (bit / 26) | 0\n    var wbit = bit % 26\n\n    this._expand(off + 1)\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit)\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit)\n    }\n\n    return this.strip()\n  }\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0\n      r = this.isub(num)\n      this.negative ^= 1\n      return this._normSign()\n\n      // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0\n      r = this.isub(num)\n      num.negative = 1\n      return r._normSign()\n    }\n\n    // a.length > b.length\n    var a, b\n    if (this.length > num.length) {\n      a = this\n      b = num\n    } else {\n      a = num\n      b = this\n    }\n\n    var carry = 0\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry\n      this.words[i] = r & 0x3ffffff\n      carry = r >>> 26\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry\n      this.words[i] = r & 0x3ffffff\n      carry = r >>> 26\n    }\n\n    this.length = a.length\n    if (carry !== 0) {\n      this.words[this.length] = carry\n      this.length++\n      // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i]\n      }\n    }\n\n    return this\n  }\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0\n      res = this.sub(num)\n      num.negative ^= 1\n      return res\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0\n      res = num.sub(this)\n      this.negative = 1\n      return res\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num)\n\n    return num.clone().iadd(this)\n  }\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0\n      var r = this.iadd(num)\n      num.negative = 1\n      return r._normSign()\n\n      // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0\n      this.iadd(num)\n      this.negative = 1\n      return this._normSign()\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num)\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0\n      this.length = 1\n      this.words[0] = 0\n      return this\n    }\n\n    // a > b\n    var a, b\n    if (cmp > 0) {\n      a = this\n      b = num\n    } else {\n      a = num\n      b = this\n    }\n\n    var carry = 0\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry\n      carry = r >> 26\n      this.words[i] = r & 0x3ffffff\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry\n      carry = r >> 26\n      this.words[i] = r & 0x3ffffff\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i]\n      }\n    }\n\n    this.length = Math.max(this.length, i)\n\n    if (a !== this) {\n      this.negative = 1\n    }\n\n    return this.strip()\n  }\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num)\n  }\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative\n    var len = (self.length + num.length) | 0\n    out.length = len\n    len = (len - 1) | 0\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0\n    var b = num.words[0] | 0\n    var r = a * b\n\n    var lo = r & 0x3ffffff\n    var carry = (r / 0x4000000) | 0\n    out.words[0] = lo\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26\n      var rword = carry & 0x3ffffff\n      var maxJ = Math.min(k, num.length - 1)\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0\n        a = self.words[i] | 0\n        b = num.words[j] | 0\n        r = a * b + rword\n        ncarry += (r / 0x4000000) | 0\n        rword = r & 0x3ffffff\n      }\n      out.words[k] = rword | 0\n      carry = ncarry | 0\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0\n    } else {\n      out.length--\n    }\n\n    return out.strip()\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words\n    var b = num.words\n    var o = out.words\n    var c = 0\n    var lo\n    var mid\n    var hi\n    var a0 = a[0] | 0\n    var al0 = a0 & 0x1fff\n    var ah0 = a0 >>> 13\n    var a1 = a[1] | 0\n    var al1 = a1 & 0x1fff\n    var ah1 = a1 >>> 13\n    var a2 = a[2] | 0\n    var al2 = a2 & 0x1fff\n    var ah2 = a2 >>> 13\n    var a3 = a[3] | 0\n    var al3 = a3 & 0x1fff\n    var ah3 = a3 >>> 13\n    var a4 = a[4] | 0\n    var al4 = a4 & 0x1fff\n    var ah4 = a4 >>> 13\n    var a5 = a[5] | 0\n    var al5 = a5 & 0x1fff\n    var ah5 = a5 >>> 13\n    var a6 = a[6] | 0\n    var al6 = a6 & 0x1fff\n    var ah6 = a6 >>> 13\n    var a7 = a[7] | 0\n    var al7 = a7 & 0x1fff\n    var ah7 = a7 >>> 13\n    var a8 = a[8] | 0\n    var al8 = a8 & 0x1fff\n    var ah8 = a8 >>> 13\n    var a9 = a[9] | 0\n    var al9 = a9 & 0x1fff\n    var ah9 = a9 >>> 13\n    var b0 = b[0] | 0\n    var bl0 = b0 & 0x1fff\n    var bh0 = b0 >>> 13\n    var b1 = b[1] | 0\n    var bl1 = b1 & 0x1fff\n    var bh1 = b1 >>> 13\n    var b2 = b[2] | 0\n    var bl2 = b2 & 0x1fff\n    var bh2 = b2 >>> 13\n    var b3 = b[3] | 0\n    var bl3 = b3 & 0x1fff\n    var bh3 = b3 >>> 13\n    var b4 = b[4] | 0\n    var bl4 = b4 & 0x1fff\n    var bh4 = b4 >>> 13\n    var b5 = b[5] | 0\n    var bl5 = b5 & 0x1fff\n    var bh5 = b5 >>> 13\n    var b6 = b[6] | 0\n    var bl6 = b6 & 0x1fff\n    var bh6 = b6 >>> 13\n    var b7 = b[7] | 0\n    var bl7 = b7 & 0x1fff\n    var bh7 = b7 >>> 13\n    var b8 = b[8] | 0\n    var bl8 = b8 & 0x1fff\n    var bh8 = b8 >>> 13\n    var b9 = b[9] | 0\n    var bl9 = b9 & 0x1fff\n    var bh9 = b9 >>> 13\n\n    out.negative = self.negative ^ num.negative\n    out.length = 19\n    /* k = 0 */\n    lo = Math.imul(al0, bl0)\n    mid = Math.imul(al0, bh0)\n    mid = (mid + Math.imul(ah0, bl0)) | 0\n    hi = Math.imul(ah0, bh0)\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0\n    w0 &= 0x3ffffff\n    /* k = 1 */\n    lo = Math.imul(al1, bl0)\n    mid = Math.imul(al1, bh0)\n    mid = (mid + Math.imul(ah1, bl0)) | 0\n    hi = Math.imul(ah1, bh0)\n    lo = (lo + Math.imul(al0, bl1)) | 0\n    mid = (mid + Math.imul(al0, bh1)) | 0\n    mid = (mid + Math.imul(ah0, bl1)) | 0\n    hi = (hi + Math.imul(ah0, bh1)) | 0\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0\n    w1 &= 0x3ffffff\n    /* k = 2 */\n    lo = Math.imul(al2, bl0)\n    mid = Math.imul(al2, bh0)\n    mid = (mid + Math.imul(ah2, bl0)) | 0\n    hi = Math.imul(ah2, bh0)\n    lo = (lo + Math.imul(al1, bl1)) | 0\n    mid = (mid + Math.imul(al1, bh1)) | 0\n    mid = (mid + Math.imul(ah1, bl1)) | 0\n    hi = (hi + Math.imul(ah1, bh1)) | 0\n    lo = (lo + Math.imul(al0, bl2)) | 0\n    mid = (mid + Math.imul(al0, bh2)) | 0\n    mid = (mid + Math.imul(ah0, bl2)) | 0\n    hi = (hi + Math.imul(ah0, bh2)) | 0\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0\n    w2 &= 0x3ffffff\n    /* k = 3 */\n    lo = Math.imul(al3, bl0)\n    mid = Math.imul(al3, bh0)\n    mid = (mid + Math.imul(ah3, bl0)) | 0\n    hi = Math.imul(ah3, bh0)\n    lo = (lo + Math.imul(al2, bl1)) | 0\n    mid = (mid + Math.imul(al2, bh1)) | 0\n    mid = (mid + Math.imul(ah2, bl1)) | 0\n    hi = (hi + Math.imul(ah2, bh1)) | 0\n    lo = (lo + Math.imul(al1, bl2)) | 0\n    mid = (mid + Math.imul(al1, bh2)) | 0\n    mid = (mid + Math.imul(ah1, bl2)) | 0\n    hi = (hi + Math.imul(ah1, bh2)) | 0\n    lo = (lo + Math.imul(al0, bl3)) | 0\n    mid = (mid + Math.imul(al0, bh3)) | 0\n    mid = (mid + Math.imul(ah0, bl3)) | 0\n    hi = (hi + Math.imul(ah0, bh3)) | 0\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0\n    w3 &= 0x3ffffff\n    /* k = 4 */\n    lo = Math.imul(al4, bl0)\n    mid = Math.imul(al4, bh0)\n    mid = (mid + Math.imul(ah4, bl0)) | 0\n    hi = Math.imul(ah4, bh0)\n    lo = (lo + Math.imul(al3, bl1)) | 0\n    mid = (mid + Math.imul(al3, bh1)) | 0\n    mid = (mid + Math.imul(ah3, bl1)) | 0\n    hi = (hi + Math.imul(ah3, bh1)) | 0\n    lo = (lo + Math.imul(al2, bl2)) | 0\n    mid = (mid + Math.imul(al2, bh2)) | 0\n    mid = (mid + Math.imul(ah2, bl2)) | 0\n    hi = (hi + Math.imul(ah2, bh2)) | 0\n    lo = (lo + Math.imul(al1, bl3)) | 0\n    mid = (mid + Math.imul(al1, bh3)) | 0\n    mid = (mid + Math.imul(ah1, bl3)) | 0\n    hi = (hi + Math.imul(ah1, bh3)) | 0\n    lo = (lo + Math.imul(al0, bl4)) | 0\n    mid = (mid + Math.imul(al0, bh4)) | 0\n    mid = (mid + Math.imul(ah0, bl4)) | 0\n    hi = (hi + Math.imul(ah0, bh4)) | 0\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0\n    w4 &= 0x3ffffff\n    /* k = 5 */\n    lo = Math.imul(al5, bl0)\n    mid = Math.imul(al5, bh0)\n    mid = (mid + Math.imul(ah5, bl0)) | 0\n    hi = Math.imul(ah5, bh0)\n    lo = (lo + Math.imul(al4, bl1)) | 0\n    mid = (mid + Math.imul(al4, bh1)) | 0\n    mid = (mid + Math.imul(ah4, bl1)) | 0\n    hi = (hi + Math.imul(ah4, bh1)) | 0\n    lo = (lo + Math.imul(al3, bl2)) | 0\n    mid = (mid + Math.imul(al3, bh2)) | 0\n    mid = (mid + Math.imul(ah3, bl2)) | 0\n    hi = (hi + Math.imul(ah3, bh2)) | 0\n    lo = (lo + Math.imul(al2, bl3)) | 0\n    mid = (mid + Math.imul(al2, bh3)) | 0\n    mid = (mid + Math.imul(ah2, bl3)) | 0\n    hi = (hi + Math.imul(ah2, bh3)) | 0\n    lo = (lo + Math.imul(al1, bl4)) | 0\n    mid = (mid + Math.imul(al1, bh4)) | 0\n    mid = (mid + Math.imul(ah1, bl4)) | 0\n    hi = (hi + Math.imul(ah1, bh4)) | 0\n    lo = (lo + Math.imul(al0, bl5)) | 0\n    mid = (mid + Math.imul(al0, bh5)) | 0\n    mid = (mid + Math.imul(ah0, bl5)) | 0\n    hi = (hi + Math.imul(ah0, bh5)) | 0\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0\n    w5 &= 0x3ffffff\n    /* k = 6 */\n    lo = Math.imul(al6, bl0)\n    mid = Math.imul(al6, bh0)\n    mid = (mid + Math.imul(ah6, bl0)) | 0\n    hi = Math.imul(ah6, bh0)\n    lo = (lo + Math.imul(al5, bl1)) | 0\n    mid = (mid + Math.imul(al5, bh1)) | 0\n    mid = (mid + Math.imul(ah5, bl1)) | 0\n    hi = (hi + Math.imul(ah5, bh1)) | 0\n    lo = (lo + Math.imul(al4, bl2)) | 0\n    mid = (mid + Math.imul(al4, bh2)) | 0\n    mid = (mid + Math.imul(ah4, bl2)) | 0\n    hi = (hi + Math.imul(ah4, bh2)) | 0\n    lo = (lo + Math.imul(al3, bl3)) | 0\n    mid = (mid + Math.imul(al3, bh3)) | 0\n    mid = (mid + Math.imul(ah3, bl3)) | 0\n    hi = (hi + Math.imul(ah3, bh3)) | 0\n    lo = (lo + Math.imul(al2, bl4)) | 0\n    mid = (mid + Math.imul(al2, bh4)) | 0\n    mid = (mid + Math.imul(ah2, bl4)) | 0\n    hi = (hi + Math.imul(ah2, bh4)) | 0\n    lo = (lo + Math.imul(al1, bl5)) | 0\n    mid = (mid + Math.imul(al1, bh5)) | 0\n    mid = (mid + Math.imul(ah1, bl5)) | 0\n    hi = (hi + Math.imul(ah1, bh5)) | 0\n    lo = (lo + Math.imul(al0, bl6)) | 0\n    mid = (mid + Math.imul(al0, bh6)) | 0\n    mid = (mid + Math.imul(ah0, bl6)) | 0\n    hi = (hi + Math.imul(ah0, bh6)) | 0\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0\n    w6 &= 0x3ffffff\n    /* k = 7 */\n    lo = Math.imul(al7, bl0)\n    mid = Math.imul(al7, bh0)\n    mid = (mid + Math.imul(ah7, bl0)) | 0\n    hi = Math.imul(ah7, bh0)\n    lo = (lo + Math.imul(al6, bl1)) | 0\n    mid = (mid + Math.imul(al6, bh1)) | 0\n    mid = (mid + Math.imul(ah6, bl1)) | 0\n    hi = (hi + Math.imul(ah6, bh1)) | 0\n    lo = (lo + Math.imul(al5, bl2)) | 0\n    mid = (mid + Math.imul(al5, bh2)) | 0\n    mid = (mid + Math.imul(ah5, bl2)) | 0\n    hi = (hi + Math.imul(ah5, bh2)) | 0\n    lo = (lo + Math.imul(al4, bl3)) | 0\n    mid = (mid + Math.imul(al4, bh3)) | 0\n    mid = (mid + Math.imul(ah4, bl3)) | 0\n    hi = (hi + Math.imul(ah4, bh3)) | 0\n    lo = (lo + Math.imul(al3, bl4)) | 0\n    mid = (mid + Math.imul(al3, bh4)) | 0\n    mid = (mid + Math.imul(ah3, bl4)) | 0\n    hi = (hi + Math.imul(ah3, bh4)) | 0\n    lo = (lo + Math.imul(al2, bl5)) | 0\n    mid = (mid + Math.imul(al2, bh5)) | 0\n    mid = (mid + Math.imul(ah2, bl5)) | 0\n    hi = (hi + Math.imul(ah2, bh5)) | 0\n    lo = (lo + Math.imul(al1, bl6)) | 0\n    mid = (mid + Math.imul(al1, bh6)) | 0\n    mid = (mid + Math.imul(ah1, bl6)) | 0\n    hi = (hi + Math.imul(ah1, bh6)) | 0\n    lo = (lo + Math.imul(al0, bl7)) | 0\n    mid = (mid + Math.imul(al0, bh7)) | 0\n    mid = (mid + Math.imul(ah0, bl7)) | 0\n    hi = (hi + Math.imul(ah0, bh7)) | 0\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0\n    w7 &= 0x3ffffff\n    /* k = 8 */\n    lo = Math.imul(al8, bl0)\n    mid = Math.imul(al8, bh0)\n    mid = (mid + Math.imul(ah8, bl0)) | 0\n    hi = Math.imul(ah8, bh0)\n    lo = (lo + Math.imul(al7, bl1)) | 0\n    mid = (mid + Math.imul(al7, bh1)) | 0\n    mid = (mid + Math.imul(ah7, bl1)) | 0\n    hi = (hi + Math.imul(ah7, bh1)) | 0\n    lo = (lo + Math.imul(al6, bl2)) | 0\n    mid = (mid + Math.imul(al6, bh2)) | 0\n    mid = (mid + Math.imul(ah6, bl2)) | 0\n    hi = (hi + Math.imul(ah6, bh2)) | 0\n    lo = (lo + Math.imul(al5, bl3)) | 0\n    mid = (mid + Math.imul(al5, bh3)) | 0\n    mid = (mid + Math.imul(ah5, bl3)) | 0\n    hi = (hi + Math.imul(ah5, bh3)) | 0\n    lo = (lo + Math.imul(al4, bl4)) | 0\n    mid = (mid + Math.imul(al4, bh4)) | 0\n    mid = (mid + Math.imul(ah4, bl4)) | 0\n    hi = (hi + Math.imul(ah4, bh4)) | 0\n    lo = (lo + Math.imul(al3, bl5)) | 0\n    mid = (mid + Math.imul(al3, bh5)) | 0\n    mid = (mid + Math.imul(ah3, bl5)) | 0\n    hi = (hi + Math.imul(ah3, bh5)) | 0\n    lo = (lo + Math.imul(al2, bl6)) | 0\n    mid = (mid + Math.imul(al2, bh6)) | 0\n    mid = (mid + Math.imul(ah2, bl6)) | 0\n    hi = (hi + Math.imul(ah2, bh6)) | 0\n    lo = (lo + Math.imul(al1, bl7)) | 0\n    mid = (mid + Math.imul(al1, bh7)) | 0\n    mid = (mid + Math.imul(ah1, bl7)) | 0\n    hi = (hi + Math.imul(ah1, bh7)) | 0\n    lo = (lo + Math.imul(al0, bl8)) | 0\n    mid = (mid + Math.imul(al0, bh8)) | 0\n    mid = (mid + Math.imul(ah0, bl8)) | 0\n    hi = (hi + Math.imul(ah0, bh8)) | 0\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0\n    w8 &= 0x3ffffff\n    /* k = 9 */\n    lo = Math.imul(al9, bl0)\n    mid = Math.imul(al9, bh0)\n    mid = (mid + Math.imul(ah9, bl0)) | 0\n    hi = Math.imul(ah9, bh0)\n    lo = (lo + Math.imul(al8, bl1)) | 0\n    mid = (mid + Math.imul(al8, bh1)) | 0\n    mid = (mid + Math.imul(ah8, bl1)) | 0\n    hi = (hi + Math.imul(ah8, bh1)) | 0\n    lo = (lo + Math.imul(al7, bl2)) | 0\n    mid = (mid + Math.imul(al7, bh2)) | 0\n    mid = (mid + Math.imul(ah7, bl2)) | 0\n    hi = (hi + Math.imul(ah7, bh2)) | 0\n    lo = (lo + Math.imul(al6, bl3)) | 0\n    mid = (mid + Math.imul(al6, bh3)) | 0\n    mid = (mid + Math.imul(ah6, bl3)) | 0\n    hi = (hi + Math.imul(ah6, bh3)) | 0\n    lo = (lo + Math.imul(al5, bl4)) | 0\n    mid = (mid + Math.imul(al5, bh4)) | 0\n    mid = (mid + Math.imul(ah5, bl4)) | 0\n    hi = (hi + Math.imul(ah5, bh4)) | 0\n    lo = (lo + Math.imul(al4, bl5)) | 0\n    mid = (mid + Math.imul(al4, bh5)) | 0\n    mid = (mid + Math.imul(ah4, bl5)) | 0\n    hi = (hi + Math.imul(ah4, bh5)) | 0\n    lo = (lo + Math.imul(al3, bl6)) | 0\n    mid = (mid + Math.imul(al3, bh6)) | 0\n    mid = (mid + Math.imul(ah3, bl6)) | 0\n    hi = (hi + Math.imul(ah3, bh6)) | 0\n    lo = (lo + Math.imul(al2, bl7)) | 0\n    mid = (mid + Math.imul(al2, bh7)) | 0\n    mid = (mid + Math.imul(ah2, bl7)) | 0\n    hi = (hi + Math.imul(ah2, bh7)) | 0\n    lo = (lo + Math.imul(al1, bl8)) | 0\n    mid = (mid + Math.imul(al1, bh8)) | 0\n    mid = (mid + Math.imul(ah1, bl8)) | 0\n    hi = (hi + Math.imul(ah1, bh8)) | 0\n    lo = (lo + Math.imul(al0, bl9)) | 0\n    mid = (mid + Math.imul(al0, bh9)) | 0\n    mid = (mid + Math.imul(ah0, bl9)) | 0\n    hi = (hi + Math.imul(ah0, bh9)) | 0\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0\n    w9 &= 0x3ffffff\n    /* k = 10 */\n    lo = Math.imul(al9, bl1)\n    mid = Math.imul(al9, bh1)\n    mid = (mid + Math.imul(ah9, bl1)) | 0\n    hi = Math.imul(ah9, bh1)\n    lo = (lo + Math.imul(al8, bl2)) | 0\n    mid = (mid + Math.imul(al8, bh2)) | 0\n    mid = (mid + Math.imul(ah8, bl2)) | 0\n    hi = (hi + Math.imul(ah8, bh2)) | 0\n    lo = (lo + Math.imul(al7, bl3)) | 0\n    mid = (mid + Math.imul(al7, bh3)) | 0\n    mid = (mid + Math.imul(ah7, bl3)) | 0\n    hi = (hi + Math.imul(ah7, bh3)) | 0\n    lo = (lo + Math.imul(al6, bl4)) | 0\n    mid = (mid + Math.imul(al6, bh4)) | 0\n    mid = (mid + Math.imul(ah6, bl4)) | 0\n    hi = (hi + Math.imul(ah6, bh4)) | 0\n    lo = (lo + Math.imul(al5, bl5)) | 0\n    mid = (mid + Math.imul(al5, bh5)) | 0\n    mid = (mid + Math.imul(ah5, bl5)) | 0\n    hi = (hi + Math.imul(ah5, bh5)) | 0\n    lo = (lo + Math.imul(al4, bl6)) | 0\n    mid = (mid + Math.imul(al4, bh6)) | 0\n    mid = (mid + Math.imul(ah4, bl6)) | 0\n    hi = (hi + Math.imul(ah4, bh6)) | 0\n    lo = (lo + Math.imul(al3, bl7)) | 0\n    mid = (mid + Math.imul(al3, bh7)) | 0\n    mid = (mid + Math.imul(ah3, bl7)) | 0\n    hi = (hi + Math.imul(ah3, bh7)) | 0\n    lo = (lo + Math.imul(al2, bl8)) | 0\n    mid = (mid + Math.imul(al2, bh8)) | 0\n    mid = (mid + Math.imul(ah2, bl8)) | 0\n    hi = (hi + Math.imul(ah2, bh8)) | 0\n    lo = (lo + Math.imul(al1, bl9)) | 0\n    mid = (mid + Math.imul(al1, bh9)) | 0\n    mid = (mid + Math.imul(ah1, bl9)) | 0\n    hi = (hi + Math.imul(ah1, bh9)) | 0\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0\n    w10 &= 0x3ffffff\n    /* k = 11 */\n    lo = Math.imul(al9, bl2)\n    mid = Math.imul(al9, bh2)\n    mid = (mid + Math.imul(ah9, bl2)) | 0\n    hi = Math.imul(ah9, bh2)\n    lo = (lo + Math.imul(al8, bl3)) | 0\n    mid = (mid + Math.imul(al8, bh3)) | 0\n    mid = (mid + Math.imul(ah8, bl3)) | 0\n    hi = (hi + Math.imul(ah8, bh3)) | 0\n    lo = (lo + Math.imul(al7, bl4)) | 0\n    mid = (mid + Math.imul(al7, bh4)) | 0\n    mid = (mid + Math.imul(ah7, bl4)) | 0\n    hi = (hi + Math.imul(ah7, bh4)) | 0\n    lo = (lo + Math.imul(al6, bl5)) | 0\n    mid = (mid + Math.imul(al6, bh5)) | 0\n    mid = (mid + Math.imul(ah6, bl5)) | 0\n    hi = (hi + Math.imul(ah6, bh5)) | 0\n    lo = (lo + Math.imul(al5, bl6)) | 0\n    mid = (mid + Math.imul(al5, bh6)) | 0\n    mid = (mid + Math.imul(ah5, bl6)) | 0\n    hi = (hi + Math.imul(ah5, bh6)) | 0\n    lo = (lo + Math.imul(al4, bl7)) | 0\n    mid = (mid + Math.imul(al4, bh7)) | 0\n    mid = (mid + Math.imul(ah4, bl7)) | 0\n    hi = (hi + Math.imul(ah4, bh7)) | 0\n    lo = (lo + Math.imul(al3, bl8)) | 0\n    mid = (mid + Math.imul(al3, bh8)) | 0\n    mid = (mid + Math.imul(ah3, bl8)) | 0\n    hi = (hi + Math.imul(ah3, bh8)) | 0\n    lo = (lo + Math.imul(al2, bl9)) | 0\n    mid = (mid + Math.imul(al2, bh9)) | 0\n    mid = (mid + Math.imul(ah2, bl9)) | 0\n    hi = (hi + Math.imul(ah2, bh9)) | 0\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0\n    w11 &= 0x3ffffff\n    /* k = 12 */\n    lo = Math.imul(al9, bl3)\n    mid = Math.imul(al9, bh3)\n    mid = (mid + Math.imul(ah9, bl3)) | 0\n    hi = Math.imul(ah9, bh3)\n    lo = (lo + Math.imul(al8, bl4)) | 0\n    mid = (mid + Math.imul(al8, bh4)) | 0\n    mid = (mid + Math.imul(ah8, bl4)) | 0\n    hi = (hi + Math.imul(ah8, bh4)) | 0\n    lo = (lo + Math.imul(al7, bl5)) | 0\n    mid = (mid + Math.imul(al7, bh5)) | 0\n    mid = (mid + Math.imul(ah7, bl5)) | 0\n    hi = (hi + Math.imul(ah7, bh5)) | 0\n    lo = (lo + Math.imul(al6, bl6)) | 0\n    mid = (mid + Math.imul(al6, bh6)) | 0\n    mid = (mid + Math.imul(ah6, bl6)) | 0\n    hi = (hi + Math.imul(ah6, bh6)) | 0\n    lo = (lo + Math.imul(al5, bl7)) | 0\n    mid = (mid + Math.imul(al5, bh7)) | 0\n    mid = (mid + Math.imul(ah5, bl7)) | 0\n    hi = (hi + Math.imul(ah5, bh7)) | 0\n    lo = (lo + Math.imul(al4, bl8)) | 0\n    mid = (mid + Math.imul(al4, bh8)) | 0\n    mid = (mid + Math.imul(ah4, bl8)) | 0\n    hi = (hi + Math.imul(ah4, bh8)) | 0\n    lo = (lo + Math.imul(al3, bl9)) | 0\n    mid = (mid + Math.imul(al3, bh9)) | 0\n    mid = (mid + Math.imul(ah3, bl9)) | 0\n    hi = (hi + Math.imul(ah3, bh9)) | 0\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0\n    w12 &= 0x3ffffff\n    /* k = 13 */\n    lo = Math.imul(al9, bl4)\n    mid = Math.imul(al9, bh4)\n    mid = (mid + Math.imul(ah9, bl4)) | 0\n    hi = Math.imul(ah9, bh4)\n    lo = (lo + Math.imul(al8, bl5)) | 0\n    mid = (mid + Math.imul(al8, bh5)) | 0\n    mid = (mid + Math.imul(ah8, bl5)) | 0\n    hi = (hi + Math.imul(ah8, bh5)) | 0\n    lo = (lo + Math.imul(al7, bl6)) | 0\n    mid = (mid + Math.imul(al7, bh6)) | 0\n    mid = (mid + Math.imul(ah7, bl6)) | 0\n    hi = (hi + Math.imul(ah7, bh6)) | 0\n    lo = (lo + Math.imul(al6, bl7)) | 0\n    mid = (mid + Math.imul(al6, bh7)) | 0\n    mid = (mid + Math.imul(ah6, bl7)) | 0\n    hi = (hi + Math.imul(ah6, bh7)) | 0\n    lo = (lo + Math.imul(al5, bl8)) | 0\n    mid = (mid + Math.imul(al5, bh8)) | 0\n    mid = (mid + Math.imul(ah5, bl8)) | 0\n    hi = (hi + Math.imul(ah5, bh8)) | 0\n    lo = (lo + Math.imul(al4, bl9)) | 0\n    mid = (mid + Math.imul(al4, bh9)) | 0\n    mid = (mid + Math.imul(ah4, bl9)) | 0\n    hi = (hi + Math.imul(ah4, bh9)) | 0\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0\n    w13 &= 0x3ffffff\n    /* k = 14 */\n    lo = Math.imul(al9, bl5)\n    mid = Math.imul(al9, bh5)\n    mid = (mid + Math.imul(ah9, bl5)) | 0\n    hi = Math.imul(ah9, bh5)\n    lo = (lo + Math.imul(al8, bl6)) | 0\n    mid = (mid + Math.imul(al8, bh6)) | 0\n    mid = (mid + Math.imul(ah8, bl6)) | 0\n    hi = (hi + Math.imul(ah8, bh6)) | 0\n    lo = (lo + Math.imul(al7, bl7)) | 0\n    mid = (mid + Math.imul(al7, bh7)) | 0\n    mid = (mid + Math.imul(ah7, bl7)) | 0\n    hi = (hi + Math.imul(ah7, bh7)) | 0\n    lo = (lo + Math.imul(al6, bl8)) | 0\n    mid = (mid + Math.imul(al6, bh8)) | 0\n    mid = (mid + Math.imul(ah6, bl8)) | 0\n    hi = (hi + Math.imul(ah6, bh8)) | 0\n    lo = (lo + Math.imul(al5, bl9)) | 0\n    mid = (mid + Math.imul(al5, bh9)) | 0\n    mid = (mid + Math.imul(ah5, bl9)) | 0\n    hi = (hi + Math.imul(ah5, bh9)) | 0\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0\n    w14 &= 0x3ffffff\n    /* k = 15 */\n    lo = Math.imul(al9, bl6)\n    mid = Math.imul(al9, bh6)\n    mid = (mid + Math.imul(ah9, bl6)) | 0\n    hi = Math.imul(ah9, bh6)\n    lo = (lo + Math.imul(al8, bl7)) | 0\n    mid = (mid + Math.imul(al8, bh7)) | 0\n    mid = (mid + Math.imul(ah8, bl7)) | 0\n    hi = (hi + Math.imul(ah8, bh7)) | 0\n    lo = (lo + Math.imul(al7, bl8)) | 0\n    mid = (mid + Math.imul(al7, bh8)) | 0\n    mid = (mid + Math.imul(ah7, bl8)) | 0\n    hi = (hi + Math.imul(ah7, bh8)) | 0\n    lo = (lo + Math.imul(al6, bl9)) | 0\n    mid = (mid + Math.imul(al6, bh9)) | 0\n    mid = (mid + Math.imul(ah6, bl9)) | 0\n    hi = (hi + Math.imul(ah6, bh9)) | 0\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0\n    w15 &= 0x3ffffff\n    /* k = 16 */\n    lo = Math.imul(al9, bl7)\n    mid = Math.imul(al9, bh7)\n    mid = (mid + Math.imul(ah9, bl7)) | 0\n    hi = Math.imul(ah9, bh7)\n    lo = (lo + Math.imul(al8, bl8)) | 0\n    mid = (mid + Math.imul(al8, bh8)) | 0\n    mid = (mid + Math.imul(ah8, bl8)) | 0\n    hi = (hi + Math.imul(ah8, bh8)) | 0\n    lo = (lo + Math.imul(al7, bl9)) | 0\n    mid = (mid + Math.imul(al7, bh9)) | 0\n    mid = (mid + Math.imul(ah7, bl9)) | 0\n    hi = (hi + Math.imul(ah7, bh9)) | 0\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0\n    w16 &= 0x3ffffff\n    /* k = 17 */\n    lo = Math.imul(al9, bl8)\n    mid = Math.imul(al9, bh8)\n    mid = (mid + Math.imul(ah9, bl8)) | 0\n    hi = Math.imul(ah9, bh8)\n    lo = (lo + Math.imul(al8, bl9)) | 0\n    mid = (mid + Math.imul(al8, bh9)) | 0\n    mid = (mid + Math.imul(ah8, bl9)) | 0\n    hi = (hi + Math.imul(ah8, bh9)) | 0\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0\n    w17 &= 0x3ffffff\n    /* k = 18 */\n    lo = Math.imul(al9, bl9)\n    mid = Math.imul(al9, bh9)\n    mid = (mid + Math.imul(ah9, bl9)) | 0\n    hi = Math.imul(ah9, bh9)\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0\n    w18 &= 0x3ffffff\n    o[0] = w0\n    o[1] = w1\n    o[2] = w2\n    o[3] = w3\n    o[4] = w4\n    o[5] = w5\n    o[6] = w6\n    o[7] = w7\n    o[8] = w8\n    o[9] = w9\n    o[10] = w10\n    o[11] = w11\n    o[12] = w12\n    o[13] = w13\n    o[14] = w14\n    o[15] = w15\n    o[16] = w16\n    o[17] = w17\n    o[18] = w18\n    if (c !== 0) {\n      o[19] = c\n      out.length++\n    }\n    return out\n  }\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative\n    out.length = self.length + num.length\n\n    var carry = 0\n    var hncarry = 0\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry\n      hncarry = 0\n      var rword = carry & 0x3ffffff\n      var maxJ = Math.min(k, num.length - 1)\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j\n        var a = self.words[i] | 0\n        var b = num.words[j] | 0\n        var r = a * b\n\n        var lo = r & 0x3ffffff\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0\n        lo = (lo + rword) | 0\n        rword = lo & 0x3ffffff\n        ncarry = (ncarry + (lo >>> 26)) | 0\n\n        hncarry += ncarry >>> 26\n        ncarry &= 0x3ffffff\n      }\n      out.words[k] = rword\n      carry = ncarry\n      ncarry = hncarry\n    }\n    if (carry !== 0) {\n      out.words[k] = carry\n    } else {\n      out.length--\n    }\n\n    return out.strip()\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM()\n    return fftm.mulp(self, num, out)\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res\n    var len = this.length + num.length\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out)\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out)\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out)\n    } else {\n      res = jumboMulTo(this, num, out)\n    }\n\n    return res\n  }\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N)\n    var l = BN.prototype._countBits(N) - 1\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N)\n    }\n\n    return t\n  }\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x\n\n    var rb = 0\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1)\n      x >>= 1\n    }\n\n    return rb\n  }\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]]\n      itws[i] = iws[rbt[i]]\n    }\n  }\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N)\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1\n\n      var rtwdf = Math.cos(2 * Math.PI / l)\n      var itwdf = Math.sin(2 * Math.PI / l)\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf\n        var itwdf_ = itwdf\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j]\n          var ie = itws[p + j]\n\n          var ro = rtws[p + j + s]\n          var io = itws[p + j + s]\n\n          var rx = rtwdf_ * ro - itwdf_ * io\n\n          io = rtwdf_ * io + itwdf_ * ro\n          ro = rx\n\n          rtws[p + j] = re + ro\n          itws[p + j] = ie + io\n\n          rtws[p + j + s] = re - ro\n          itws[p + j + s] = ie - io\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_\n            rtwdf_ = rx\n          }\n        }\n      }\n    }\n  }\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1\n    var odd = N & 1\n    var i = 0\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++\n    }\n\n    return 1 << i + 1 + odd\n  }\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i]\n\n      rws[i] = rws[N - i - 1]\n      rws[N - i - 1] = t\n\n      t = iws[i]\n\n      iws[i] = -iws[N - i - 1]\n      iws[N - i - 1] = -t\n    }\n  }\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n                Math.round(ws[2 * i] / N) +\n                carry\n\n      ws[i] = w & 0x3ffffff\n\n      if (w < 0x4000000) {\n        carry = 0\n      } else {\n        carry = w / 0x4000000 | 0\n      }\n    }\n\n    return ws\n  }\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0)\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0\n    }\n\n    assert(carry === 0)\n    assert((carry & ~0x1fff) === 0)\n  }\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N)\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0\n    }\n\n    return ph\n  }\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length)\n\n    var rbt = this.makeRBT(N)\n\n    var _ = this.stub(N)\n\n    var rws = new Array(N)\n    var rwst = new Array(N)\n    var iwst = new Array(N)\n\n    var nrws = new Array(N)\n    var nrwst = new Array(N)\n    var niwst = new Array(N)\n\n    var rmws = out.words\n    rmws.length = N\n\n    this.convert13b(x.words, x.length, rws, N)\n    this.convert13b(y.words, y.length, nrws, N)\n\n    this.transform(rws, _, rwst, iwst, N, rbt)\n    this.transform(nrws, _, nrwst, niwst, N, rbt)\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i]\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i]\n      rwst[i] = rx\n    }\n\n    this.conjugate(rwst, iwst, N)\n    this.transform(rwst, iwst, rmws, _, N, rbt)\n    this.conjugate(rmws, _, N)\n    this.normalize13b(rmws, N)\n\n    out.negative = x.negative ^ y.negative\n    out.length = x.length + y.length\n    return out.strip()\n  }\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null)\n    out.words = new Array(this.length + num.length)\n    return this.mulTo(num, out)\n  }\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null)\n    out.words = new Array(this.length + num.length)\n    return jumboMulTo(this, num, out)\n  }\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this)\n  }\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number')\n    assert(num < 0x4000000)\n\n    // Carry\n    var carry = 0\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff)\n      carry >>= 26\n      carry += (w / 0x4000000) | 0\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26\n      this.words[i] = lo & 0x3ffffff\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry\n      this.length++\n    }\n\n    return this\n  }\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num)\n  }\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this)\n  }\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone())\n  }\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num)\n    if (w.length === 0) return new BN(1)\n\n    // Skip leading zeroes\n    var res = this\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue\n\n        res = res.mul(q)\n      }\n    }\n\n    return res\n  }\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0)\n    var r = bits % 26\n    var s = (bits - r) / 26\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r)\n    var i\n\n    if (r !== 0) {\n      var carry = 0\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask\n        var c = ((this.words[i] | 0) - newCarry) << r\n        this.words[i] = c | carry\n        carry = newCarry >>> (26 - r)\n      }\n\n      if (carry) {\n        this.words[i] = carry\n        this.length++\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i]\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0\n      }\n\n      this.length += s\n    }\n\n    return this.strip()\n  }\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0)\n    return this.iushln(bits)\n  }\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0)\n    var h\n    if (hint) {\n      h = (hint - (hint % 26)) / 26\n    } else {\n      h = 0\n    }\n\n    var r = bits % 26\n    var s = Math.min((bits - r) / 26, this.length)\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r)\n    var maskedWords = extended\n\n    h -= s\n    h = Math.max(0, h)\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i]\n      }\n      maskedWords.length = s\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s]\n      }\n    } else {\n      this.words[0] = 0\n      this.length = 1\n    }\n\n    var carry = 0\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0\n      this.words[i] = (carry << (26 - r)) | (word >>> r)\n      carry = word & mask\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0\n      this.length = 1\n    }\n\n    return this.strip()\n  }\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0)\n    return this.iushrn(bits, hint, extended)\n  }\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits)\n  }\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits)\n  }\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits)\n  }\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits)\n  }\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0)\n    var r = bit % 26\n    var s = (bit - r) / 26\n    var q = 1 << r\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false\n\n    // Check bit and return\n    var w = this.words[s]\n\n    return !!(w & q)\n  }\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0)\n    var r = bits % 26\n    var s = (bits - r) / 26\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers')\n\n    if (this.length <= s) {\n      return this\n    }\n\n    if (r !== 0) {\n      s++\n    }\n    this.length = Math.min(s, this.length)\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r)\n      this.words[this.length - 1] &= mask\n    }\n\n    return this.strip()\n  }\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits)\n  }\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number')\n    assert(num < 0x4000000)\n    if (num < 0) return this.isubn(-num)\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0)\n        this.negative = 0\n        return this\n      }\n\n      this.negative = 0\n      this.isubn(num)\n      this.negative = 1\n      return this\n    }\n\n    // Add without checks\n    return this._iaddn(num)\n  }\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1\n      } else {\n        this.words[i + 1]++\n      }\n    }\n    this.length = Math.max(this.length, i + 1)\n\n    return this\n  }\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number')\n    assert(num < 0x4000000)\n    if (num < 0) return this.iaddn(-num)\n\n    if (this.negative !== 0) {\n      this.negative = 0\n      this.iaddn(num)\n      this.negative = 1\n      return this\n    }\n\n    this.words[0] -= num\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0]\n      this.negative = 1\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000\n        this.words[i + 1] -= 1\n      }\n    }\n\n    return this.strip()\n  }\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num)\n  }\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num)\n  }\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0\n\n    return this\n  }\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs()\n  }\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift\n    var i\n\n    this._expand(len)\n\n    var w\n    var carry = 0\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry\n      var right = (num.words[i] | 0) * mul\n      w -= right & 0x3ffffff\n      carry = (w >> 26) - ((right / 0x4000000) | 0)\n      this.words[i + shift] = w & 0x3ffffff\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry\n      carry = w >> 26\n      this.words[i + shift] = w & 0x3ffffff\n    }\n\n    if (carry === 0) return this.strip()\n\n    // Subtraction overflow\n    assert(carry === -1)\n    carry = 0\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry\n      carry = w >> 26\n      this.words[i] = w & 0x3ffffff\n    }\n    this.negative = 1\n\n    return this.strip()\n  }\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length\n\n    var a = this.clone()\n    var b = num\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0\n    var bhiBits = this._countBits(bhi)\n    shift = 26 - bhiBits\n    if (shift !== 0) {\n      b = b.ushln(shift)\n      a.iushln(shift)\n      bhi = b.words[b.length - 1] | 0\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length\n    var q\n\n    if (mode !== 'mod') {\n      q = new BN(null)\n      q.length = m + 1\n      q.words = new Array(q.length)\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m)\n    if (diff.negative === 0) {\n      a = diff\n      if (q) {\n        q.words[m] = 1\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n                (a.words[b.length + j - 1] | 0)\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff)\n\n      a._ishlnsubmul(b, qj, j)\n      while (a.negative !== 0) {\n        qj--\n        a.negative = 0\n        a._ishlnsubmul(b, 1, j)\n        if (!a.isZero()) {\n          a.negative ^= 1\n        }\n      }\n      if (q) {\n        q.words[j] = qj\n      }\n    }\n    if (q) {\n      q.strip()\n    }\n    a.strip()\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift)\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    }\n  }\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero())\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      }\n    }\n\n    var div, mod, res\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode)\n\n      if (mode !== 'mod') {\n        div = res.div.neg()\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg()\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num)\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      }\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode)\n\n      if (mode !== 'mod') {\n        div = res.div.neg()\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      }\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode)\n\n      if (mode !== 'div') {\n        mod = res.mod.neg()\n        if (positive && mod.negative !== 0) {\n          mod.isub(num)\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      }\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      }\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        }\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        }\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      }\n    }\n\n    return this._wordDiv(num, mode)\n  }\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div\n  }\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod\n  }\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod\n  }\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num)\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod\n\n    var half = num.ushrn(1)\n    var r2 = num.andln(1)\n    var cmp = mod.cmp(half)\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1)\n  }\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff)\n    var p = (1 << 26) % num\n\n    var acc = 0\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num\n    }\n\n    return acc\n  }\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff)\n\n    var carry = 0\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000\n      this.words[i] = (w / num) | 0\n      carry = w % num\n    }\n\n    return this.strip()\n  }\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num)\n  }\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0)\n    assert(!p.isZero())\n\n    var x = this\n    var y = p.clone()\n\n    if (x.negative !== 0) {\n      x = x.umod(p)\n    } else {\n      x = x.clone()\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1)\n    var B = new BN(0)\n\n    // C * x + D * y = y\n    var C = new BN(0)\n    var D = new BN(1)\n\n    var g = 0\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1)\n      y.iushrn(1)\n      ++g\n    }\n\n    var yp = y.clone()\n    var xp = x.clone()\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i)\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp)\n            B.isub(xp)\n          }\n\n          A.iushrn(1)\n          B.iushrn(1)\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j)\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp)\n            D.isub(xp)\n          }\n\n          C.iushrn(1)\n          D.iushrn(1)\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y)\n        A.isub(C)\n        B.isub(D)\n      } else {\n        y.isub(x)\n        C.isub(A)\n        D.isub(B)\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    }\n  }\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0)\n    assert(!p.isZero())\n\n    var a = this\n    var b = p.clone()\n\n    if (a.negative !== 0) {\n      a = a.umod(p)\n    } else {\n      a = a.clone()\n    }\n\n    var x1 = new BN(1)\n    var x2 = new BN(0)\n\n    var delta = b.clone()\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i)\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta)\n          }\n\n          x1.iushrn(1)\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j)\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta)\n          }\n\n          x2.iushrn(1)\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b)\n        x1.isub(x2)\n      } else {\n        b.isub(a)\n        x2.isub(x1)\n      }\n    }\n\n    var res\n    if (a.cmpn(1) === 0) {\n      res = x1\n    } else {\n      res = x2\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p)\n    }\n\n    return res\n  }\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs()\n    if (num.isZero()) return this.abs()\n\n    var a = this.clone()\n    var b = num.clone()\n    a.negative = 0\n    b.negative = 0\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1)\n      b.iushrn(1)\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1)\n      }\n      while (b.isEven()) {\n        b.iushrn(1)\n      }\n\n      var r = a.cmp(b)\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a\n        a = b\n        b = t\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break\n      }\n\n      a.isub(b)\n    } while (true)\n\n    return b.iushln(shift)\n  }\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num)\n  }\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0\n  }\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1\n  }\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num\n  }\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number')\n    var r = bit % 26\n    var s = (bit - r) / 26\n    var q = 1 << r\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1)\n      this.words[s] |= q\n      return this\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0\n      w += carry\n      carry = w >>> 26\n      w &= 0x3ffffff\n      this.words[i] = w\n    }\n    if (carry !== 0) {\n      this.words[i] = carry\n      this.length++\n    }\n    return this\n  }\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0\n  }\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0\n\n    if (this.negative !== 0 && !negative) return -1\n    if (this.negative === 0 && negative) return 1\n\n    this.strip()\n\n    var res\n    if (this.length > 1) {\n      res = 1\n    } else {\n      if (negative) {\n        num = -num\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big')\n\n      var w = this.words[0] | 0\n      res = w === num ? 0 : w < num ? -1 : 1\n    }\n    if (this.negative !== 0) return -res | 0\n    return res\n  }\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1\n    if (this.negative === 0 && num.negative !== 0) return 1\n\n    var res = this.ucmp(num)\n    if (this.negative !== 0) return -res | 0\n    return res\n  }\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1\n    if (this.length < num.length) return -1\n\n    var res = 0\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0\n      var b = num.words[i] | 0\n\n      if (a === b) continue\n      if (a < b) {\n        res = -1\n      } else if (a > b) {\n        res = 1\n      }\n      break\n    }\n    return res\n  }\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1\n  }\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1\n  }\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0\n  }\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0\n  }\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1\n  }\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1\n  }\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0\n  }\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0\n  }\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0\n  }\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0\n  }\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num)\n  }\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context')\n    assert(this.negative === 0, 'red works only with positives')\n    return ctx.convertTo(this)._forceRed(ctx)\n  }\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context')\n    return this.red.convertFrom(this)\n  }\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx\n    return this\n  }\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context')\n    return this._forceRed(ctx)\n  }\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers')\n    return this.red.add(this, num)\n  }\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers')\n    return this.red.iadd(this, num)\n  }\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers')\n    return this.red.sub(this, num)\n  }\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers')\n    return this.red.isub(this, num)\n  }\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers')\n    return this.red.shl(this, num)\n  }\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers')\n    this.red._verify2(this, num)\n    return this.red.mul(this, num)\n  }\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers')\n    this.red._verify2(this, num)\n    return this.red.imul(this, num)\n  }\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers')\n    this.red._verify1(this)\n    return this.red.sqr(this)\n  }\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers')\n    this.red._verify1(this)\n    return this.red.isqr(this)\n  }\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers')\n    this.red._verify1(this)\n    return this.red.sqrt(this)\n  }\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers')\n    this.red._verify1(this)\n    return this.red.invm(this)\n  }\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers')\n    this.red._verify1(this)\n    return this.red.neg(this)\n  }\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)')\n    this.red._verify1(this)\n    return this.red.pow(this, num)\n  }\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name\n    this.p = new BN(p, 16)\n    this.n = this.p.bitLength()\n    this.k = new BN(1).iushln(this.n).isub(this.p)\n\n    this.tmp = this._tmp()\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null)\n    tmp.words = new Array(Math.ceil(this.n / 13))\n    return tmp\n  }\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num\n    var rlen\n\n    do {\n      this.split(r, this.tmp)\n      r = this.imulK(r)\n      r = r.iadd(this.tmp)\n      rlen = r.bitLength()\n    } while (rlen > this.n)\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p)\n    if (cmp === 0) {\n      r.words[0] = 0\n      r.length = 1\n    } else if (cmp > 0) {\n      r.isub(this.p)\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip()\n      } else {\n        // r is BN v5 instance\n        r._strip()\n      }\n    }\n\n    return r\n  }\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out)\n  }\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k)\n  }\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f')\n  }\n  inherits(K256, MPrime)\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff\n\n    var outLen = Math.min(input.length, 9)\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i]\n    }\n    output.length = outLen\n\n    if (input.length <= 9) {\n      input.words[0] = 0\n      input.length = 1\n      return\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9]\n    output.words[output.length++] = prev & mask\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22)\n      prev = next\n    }\n    prev >>>= 22\n    input.words[i - 10] = prev\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10\n    } else {\n      input.length -= 9\n    }\n  }\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0\n    num.words[num.length + 1] = 0\n    num.length += 2\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0\n      lo += w * 0x3d1\n      num.words[i] = lo & 0x3ffffff\n      lo = w * 0x40 + ((lo / 0x4000000) | 0)\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--\n      if (num.words[num.length - 1] === 0) {\n        num.length--\n      }\n    }\n    return num\n  }\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001')\n  }\n  inherits(P224, MPrime)\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff')\n  }\n  inherits(P192, MPrime)\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed')\n  }\n  inherits(P25519, MPrime)\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry\n      var lo = hi & 0x3ffffff\n      hi >>>= 26\n\n      num.words[i] = lo\n      carry = hi\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry\n    }\n    return num\n  }\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name]\n\n    var prime\n    if (name === 'k256') {\n      prime = new K256()\n    } else if (name === 'p224') {\n      prime = new P224()\n    } else if (name === 'p192') {\n      prime = new P192()\n    } else if (name === 'p25519') {\n      prime = new P25519()\n    } else {\n      throw new Error('Unknown prime ' + name)\n    }\n    primes[name] = prime\n\n    return prime\n  }\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m)\n      this.m = prime.p\n      this.prime = prime\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1')\n      this.m = m\n      this.prime = null\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives')\n    assert(a.red, 'red works only with red numbers')\n  }\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives')\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers')\n  }\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this)\n    return a.umod(this.m)._forceRed(this)\n  }\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone()\n    }\n\n    return this.m.sub(a)._forceRed(this)\n  }\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b)\n\n    var res = a.add(b)\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m)\n    }\n    return res._forceRed(this)\n  }\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b)\n\n    var res = a.iadd(b)\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m)\n    }\n    return res\n  }\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b)\n\n    var res = a.sub(b)\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m)\n    }\n    return res._forceRed(this)\n  }\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b)\n\n    var res = a.isub(b)\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m)\n    }\n    return res\n  }\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a)\n    return this.imod(a.ushln(num))\n  }\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b)\n    return this.imod(a.imul(b))\n  }\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b)\n    return this.imod(a.mul(b))\n  }\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone())\n  }\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a)\n  }\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone()\n\n    var mod3 = this.m.andln(3)\n    assert(mod3 % 2 === 1)\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2)\n      return this.pow(a, pow)\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1)\n    var s = 0\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++\n      q.iushrn(1)\n    }\n    assert(!q.isZero())\n\n    var one = new BN(1).toRed(this)\n    var nOne = one.redNeg()\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1)\n    var z = this.m.bitLength()\n    z = new BN(2 * z * z).toRed(this)\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne)\n    }\n\n    var c = this.pow(z, q)\n    var r = this.pow(a, q.addn(1).iushrn(1))\n    var t = this.pow(a, q)\n    var m = s\n    while (t.cmp(one) !== 0) {\n      var tmp = t\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr()\n      }\n      assert(i < m)\n      var b = this.pow(c, new BN(1).iushln(m - i - 1))\n\n      r = r.redMul(b)\n      c = b.redSqr()\n      t = t.redMul(c)\n      m = i\n    }\n\n    return r\n  }\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m)\n    if (inv.negative !== 0) {\n      inv.negative = 0\n      return this.imod(inv).redNeg()\n    } else {\n      return this.imod(inv)\n    }\n  }\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this)\n    if (num.cmpn(1) === 0) return a.clone()\n\n    var windowSize = 4\n    var wnd = new Array(1 << windowSize)\n    wnd[0] = new BN(1).toRed(this)\n    wnd[1] = a\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a)\n    }\n\n    var res = wnd[0]\n    var current = 0\n    var currentLen = 0\n    var start = num.bitLength() % 26\n    if (start === 0) {\n      start = 26\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i]\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1\n        if (res !== wnd[0]) {\n          res = this.sqr(res)\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0\n          continue\n        }\n\n        current <<= 1\n        current |= bit\n        currentLen++\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue\n\n        res = this.mul(res, wnd[current])\n        currentLen = 0\n        current = 0\n      }\n      start = 26\n    }\n\n    return res\n  }\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m)\n\n    return r === num ? r.clone() : r\n  }\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone()\n    res.red = null\n    return res\n  }\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num)\n  }\n\n  function Mont (m) {\n    Red.call(this, m)\n\n    this.shift = this.m.bitLength()\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26)\n    }\n\n    this.r = new BN(1).iushln(this.shift)\n    this.r2 = this.imod(this.r.sqr())\n    this.rinv = this.r._invmp(this.m)\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)\n    this.minv = this.minv.umod(this.r)\n    this.minv = this.r.sub(this.minv)\n  }\n  inherits(Mont, Red)\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift))\n  }\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv))\n    r.red = null\n    return r\n  }\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0\n      a.length = 1\n      return a\n    }\n\n    var t = a.imul(b)\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)\n    var u = t.isub(c).iushrn(this.shift)\n    var res = u\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m)\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m)\n    }\n\n    return res._forceRed(this)\n  }\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this)\n\n    var t = a.mul(b)\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)\n    var u = t.isub(c).iushrn(this.shift)\n    var res = u\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m)\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m)\n    }\n\n    return res._forceRed(this)\n  }\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2))\n    return res._forceRed(this)\n  }\n})(typeof module === 'undefined' || module, this)\n","'use strict'\n\nvar errors = require('../errors')\nvar _ = require('../util/_')\n\nmodule.exports = {\n  checkState: function (condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message)\n    }\n  },\n  checkArgument: function (condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath)\n    }\n  },\n  checkArgumentType: function (argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)'\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        if (!Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName)\n        }\n      } else if (typeof argument !== type) { // eslint-disable-line\n        throw new errors.InvalidArgumentType(argument, type, argumentName)\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName)\n      }\n    }\n  }\n}\n","'use strict'\n\nvar _ = require('../util/_')\n\nfunction format (message, args) {\n  return message\n    .replace('{0}', args[0])\n    .replace('{1}', args[1])\n    .replace('{2}', args[2])\n}\nvar traverseNode = function (parent, errorDefinition) {\n  var NodeError = function () {\n    if (_.isString(errorDefinition.message)) {\n      this.message = format(errorDefinition.message, arguments)\n    } else if (_.isFunction(errorDefinition.message)) {\n      this.message = errorDefinition.message.apply(null, arguments)\n    } else {\n      throw new Error('Invalid error definition for ' + errorDefinition.name)\n    }\n    this.stack = this.message + '\\n' + (new Error()).stack\n  }\n  NodeError.prototype = Object.create(parent.prototype)\n  NodeError.prototype.name = parent.prototype.name + errorDefinition.name\n  parent[errorDefinition.name] = NodeError\n  if (errorDefinition.errors) {\n    childDefinitions(NodeError, errorDefinition.errors)\n  }\n  return NodeError\n}\n\nvar childDefinitions = function (parent, childDefinitions) {\n  _.each(childDefinitions, function (childDefinition) {\n    traverseNode(parent, childDefinition)\n  })\n}\n\nvar traverseRoot = function (parent, errorsDefinition) {\n  childDefinitions(parent, errorsDefinition)\n  return parent\n}\n\nvar bsv = {}\nbsv.Error = function () {\n  this.message = 'Internal error'\n  this.stack = this.message + '\\n' + (new Error()).stack\n}\nbsv.Error.prototype = Object.create(Error.prototype)\nbsv.Error.prototype.name = 'bsv.Error'\n\nvar data = require('./spec')\ntraverseRoot(bsv.Error, data)\n\nmodule.exports = bsv.Error\n\nmodule.exports.extend = function (spec) {\n  return traverseNode(bsv.Error, spec)\n}\n","'use strict'\n\nvar _ = {}\n\n_.isArray = t => Array.isArray(t)\n_.isNumber = t => typeof t === 'number'\n_.isObject = t => t && typeof t === 'object'\n_.isString = t => typeof t === 'string'\n_.isUndefined = t => typeof t === 'undefined'\n_.isFunction = t => typeof t === 'function'\n_.isNull = t => t === null\n_.isDate = t => t instanceof Date\n_.extend = (a, b) => Object.assign(a, b)\n_.noop = () => { }\n_.every = (a, f) => a.every(f || (t => t))\n_.map = (a, f) => Array.from(a).map(f || (t => t))\n_.includes = (a, e) => a.includes(e)\n_.each = (a, f) => a.forEach(f)\n_.clone = o => Object.assign({}, o)\n_.pick = (object, keys) => {\n  const obj = {}\n  keys.forEach(key => {\n    if (typeof object[key] !== 'undefined') { obj[key] = object[key] }\n  })\n  return obj\n}\n_.values = o => Object.values(o)\n_.filter = (a, f) => a.filter(f)\n_.reduce = (a, f, s) => a.reduce(f, s)\n_.without = (a, n) => a.filter(t => t !== n)\n_.shuffle = a => {\n  const result = a.slice(0)\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]]\n  }\n  return result\n}\n_.difference = (a, b) => a.filter(t => !b.includes(t))\n_.findIndex = (a, f) => a.findIndex(f)\n_.some = (a, f) => a.some(f)\n_.range = n => [...Array(n).keys()]\n_.isPositiveNumber = (n) => n < 0x7e\n\nmodule.exports = _\n","'use strict'\n\nvar docsURL = 'https://docs.moneybutton.com/'\n\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function () {\n    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +\n      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '')\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function () {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0]\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'MerkleBlock',\n  message: 'Internal Error on MerkleBlock {0}',\n  errors: [{\n    'name': 'InvalidMerkleTree',\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }, {\n      name: 'MissingInput',\n      message: 'Invalid inputIndex.'\n    }]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'MissingOutput',\n    message: 'Output not found'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid'\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}'\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}'\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}'\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }, {\n    name: 'TransactionAlreadySealed',\n    message: 'Cannot update sealed transaction'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }, {\n    name: 'InvalidOpcode',\n    message: 'Invalid Opcode: got \"{0}\"'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}, {\n  name: 'ECIES',\n  message: 'Internal Error on bsv-ecies Module {0}',\n  errors: [{\n    name: 'DecryptionError',\n    message: 'Invalid Message: {0}'\n  },\n  {\n    name: 'UnsupportAlgorithm',\n    message: 'Unsupport Algorithm: {0}'\n  }]\n}, {\n  name: 'Mnemonic',\n  message: 'Internal Error on bsv-mnemonic module {0}',\n  errors: [{\n    name: 'InvalidEntropy',\n    message: 'Entropy length must be an even multiple of 11 bits: {0}'\n  }, {\n    name: 'UnknownWordlist',\n    message: 'Could not detect the used word list: {0}'\n  }, {\n    name: 'InvalidMnemonic',\n    message: 'Mnemonic string is invalid: {0}'\n  }]\n}]\n","'use strict'\n\nvar BN = require('./bn')\nvar Point = require('./point')\nvar Signature = require('./signature')\nvar PublicKey = require('../publickey')\nvar Random = require('./random')\nvar Hash = require('./hash')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\n\nvar ECDSA = function ECDSA (obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj)\n  }\n  if (obj) {\n    this.set(obj)\n  }\n}\n\nECDSA.prototype.set = function (obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf\n  this.endian = obj.endian || this.endian // the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey)\n  this.sig = obj.sig || this.sig\n  this.k = obj.k || this.k\n  this.verified = obj.verified || this.verified\n  return this\n}\n\nECDSA.prototype.privkey2pubkey = function () {\n  this.pubkey = this.privkey.toPublicKey()\n}\n\nECDSA.prototype.calci = function () {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i\n    var Qprime\n    try {\n      Qprime = this.toPublicKey()\n    } catch (e) {\n      console.error(e)\n      continue\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed\n      return this\n    }\n  }\n\n  this.sig.i = undefined\n  throw new Error('Unable to find valid recovery factor')\n}\n\nECDSA.fromString = function (str) {\n  var obj = JSON.parse(str)\n  return new ECDSA(obj)\n}\n\nECDSA.prototype.randomK = function () {\n  var N = Point.getN()\n  var k\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32))\n  } while (!(k.lt(N) && k.gt(BN.Zero)))\n  this.k = k\n  return this\n}\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function (badrs) {\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0\n  }\n  var v = Buffer.alloc(32)\n  v.fill(0x01)\n  var k = Buffer.alloc(32)\n  k.fill(0x00)\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  })\n  var hashbuf = this.endian === 'little' ? Buffer.from(this.hashbuf).reverse() : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x01]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  v = Hash.sha256hmac(v, k)\n  var T = BN.fromBuffer(v)\n  var N = Point.getN()\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00])]), k)\n    v = Hash.sha256hmac(v, k)\n    v = Hash.sha256hmac(v, k)\n    T = BN.fromBuffer(v)\n  }\n\n  this.k = T\n  return this\n}\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function () {\n  var i = this.sig.i\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'))\n\n  var e = BN.fromBuffer(this.hashbuf)\n  var r = this.sig.r\n  var s = this.sig.s\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1\n\n  var n = Point.getN()\n  var G = Point.getG()\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r\n  var R = Point.fromX(isYOdd, x)\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n)\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point')\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().umod(n)\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n)\n\n  // var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv)\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed)\n\n  return pubkey\n}\n\nECDSA.prototype.sigError = function () {\n  if (!Buffer.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer'\n  }\n\n  var r = this.sig.r\n  var s = this.sig.s\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range'\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n  var n = Point.getN()\n  var sinv = s.invm(n)\n  var u1 = sinv.mul(e).umod(n)\n  var u2 = sinv.mul(r).umod(n)\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2)\n  if (p.isInfinity()) {\n    return 'p is infinity'\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature'\n  } else {\n    return false\n  }\n}\n\nECDSA.toLowS = function (s) {\n  // enforce low s\n  // see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(Buffer.from('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s)\n  }\n  return s\n}\n\nECDSA.prototype._findSignature = function (d, e) {\n  var N = Point.getN()\n  var G = Point.getG()\n  // try different values of k until r, s are valid\n  var badrs = 0\n  var k, Q, r, s\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs)\n    }\n    badrs++\n    k = this.k\n    Q = G.mul(k)\n    r = new BN(1).mul(Q.x.umod(N))\n    s = k.invm(N).mul(e.add(d.mul(r))).umod(N)\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0)\n\n  s = ECDSA.toLowS(s)\n  return {\n    s: s,\n    r: r\n  }\n}\n\nECDSA.prototype.sign = function () {\n  var hashbuf = this.hashbuf\n  var privkey = this.privkey\n  var d = privkey.bn\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'))\n  $.checkState(Buffer.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'))\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n\n  var obj = this._findSignature(d, e)\n  obj.compressed = this.pubkey.compressed\n\n  this.sig = new Signature(obj)\n  return this\n}\n\nECDSA.prototype.signRandomK = function () {\n  this.randomK()\n  return this.sign()\n}\n\nECDSA.prototype.toString = function () {\n  var obj = {}\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex')\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString()\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString()\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString()\n  }\n  if (this.k) {\n    obj.k = this.k.toString()\n  }\n  return JSON.stringify(obj)\n}\n\nECDSA.prototype.verify = function () {\n  if (!this.sigError()) {\n    this.verified = true\n  } else {\n    this.verified = false\n  }\n  return this\n}\n\nECDSA.sign = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig\n}\n\nECDSA.signWithCalcI = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().calci().sig\n}\n\nECDSA.signRandomK = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).signRandomK().sig\n}\n\nECDSA.verify = function (hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified\n}\n\nmodule.exports = ECDSA\n","'use strict'\n\nvar BN = require('./bn')\nvar elliptic = require('elliptic')\nvar EC = elliptic.ec\nvar ec = new EC('secp256k1')\nvar ecPoint = ec.curve.point.bind(ec.curve)\nvar ecPointFromX = ec.curve.pointFromX.bind(ec.curve)\n\n/**\n * Instantiate a valid secp256k1 Point from the X and Y coordinates. This class\n * is just an extension of the secp256k1 code from the library \"elliptic\" by\n * Fedor Indutny. It includes a few extra features that are useful in Bitcoin.\n *\n * @param {BN|String} x - The X coordinate\n * @param {BN|String} y - The Y coordinate\n * @link https://github.com/indutny/elliptic\n * @augments elliptic.curve.point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n * @constructor\n */\nvar Point = function Point (x, y, isRed) {\n  try {\n    var point = ecPoint(x, y, isRed)\n  } catch (e) {\n    throw new Error('Invalid Point')\n  }\n  point.validate()\n  return point\n}\n\nPoint.prototype = Object.getPrototypeOf(ec.curve.point())\n\n/**\n *\n * Instantiate a valid secp256k1 Point from only the X coordinate. This is\n * useful to rederive a full point from the compressed form of a point.\n *\n * @param {boolean} odd - If the Y coordinate is odd\n * @param {BN|String} x - The X coordinate\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n */\nPoint.fromX = function fromX (odd, x) {\n  try {\n    var point = ecPointFromX(x, odd)\n  } catch (e) {\n    throw new Error('Invalid X')\n  }\n  point.validate()\n  return point\n}\n\n/**\n *\n * Will return a secp256k1 ECDSA base point.\n *\n * @link https://en.bitcoin.it/wiki/Secp256k1\n * @returns {Point} An instance of the base point.\n */\nPoint.getG = function getG () {\n  return ec.curve.g\n}\n\n/**\n *\n * Will return the max of range of valid private keys as governed by the\n * secp256k1 ECDSA standard.\n *\n * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys\n * @returns {BN} A BN instance of the number of points on the curve\n */\nPoint.getN = function getN () {\n  return new BN(ec.curve.n.toArray())\n}\n\nif (!Point.prototype._getX) { Point.prototype._getX = Point.prototype.getX }\n\n/**\n * Will return the X coordinate of the Point.\n *\n * @returns {BN} A BN instance of the X coordinate\n */\nPoint.prototype.getX = function getX () {\n  return new BN(this._getX().toArray())\n}\n\nif (!Point.prototype._getY) { Point.prototype._getY = Point.prototype.getY }\n\n/**\n * Will return the Y coordinate of the Point.\n *\n * @returns {BN} A BN instance of the Y coordinate\n */\nPoint.prototype.getY = function getY () {\n  return new BN(this._getY().toArray())\n}\n\n/**\n * Will determine if the point is valid.\n *\n * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of the same Point\n */\nPoint.prototype.validate = function validate () {\n  if (this.isInfinity()) {\n    throw new Error('Point cannot be equal to Infinity')\n  }\n\n  var p2\n  try {\n    p2 = ecPointFromX(this.getX(), this.getY().isOdd())\n  } catch (e) {\n    throw new Error('Point does not lie on the curve')\n  }\n\n  if (p2.y.cmp(this.y) !== 0) {\n    throw new Error('Invalid y value for curve.')\n  }\n\n  // todo: needs test case\n  if (!(this.mul(Point.getN()).isInfinity())) {\n    throw new Error('Point times N must be infinity')\n  }\n\n  return this\n}\n\n/**\n * A \"compressed\" format point is the X part of the (X, Y) point plus an extra\n * bit (which takes an entire byte) to indicate whether the Y value is odd or\n * not. Storing points this way takes a bit less space, but requires a bit more\n * computation to rederive the full point.\n *\n * @param {Point} point An instance of Point.\n * @returns {Buffer} A compressed point in the form of a buffer.\n */\nPoint.pointToCompressed = function pointToCompressed (point) {\n  var xbuf = point.getX().toBuffer({ size: 32 })\n  var ybuf = point.getY().toBuffer({ size: 32 })\n\n  var prefix\n  var odd = ybuf[ybuf.length - 1] % 2\n  if (odd) {\n    prefix = Buffer.from([0x03])\n  } else {\n    prefix = Buffer.from([0x02])\n  }\n  return Buffer.concat([prefix, xbuf])\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.pointFromCompressed = function (buf) {\n  if (buf.length !== 33) {\n    throw new Error('invalid buffer length')\n  }\n  let prefix = buf[0]\n  let odd\n  if (prefix === 0x03) {\n    odd = true\n  } else if (prefix === 0x02) {\n    odd = false\n  } else {\n    throw new Error('invalid value of compressed prefix')\n  }\n\n  let xbuf = buf.slice(1, 33)\n  let x = BN.fromBuffer(xbuf)\n  return Point.fromX(odd, x)\n}\n\n/**\n * Convert point to a compressed buffer.\n *\n * @returns {Buffer} A compressed point.\n */\nPoint.prototype.toBuffer = function () {\n  return Point.pointToCompressed(this)\n}\n\n/**\n * Convert point to a compressed hex string.\n *\n * @returns {string} A compressed point as a hex string.\n */\nPoint.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.fromBuffer = function (buf) {\n  return Point.pointFromCompressed(buf)\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} hex A compressed point as a hex string.\n * @returns {Point} A Point.\n */\nPoint.fromHex = function (hex) {\n  return Point.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nmodule.exports = Point\n","'use strict'\n\nvar BN = require('./bn')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Signature = function Signature (r, s) {\n  if (!(this instanceof Signature)) {\n    return new Signature(r, s)\n  }\n  if (r instanceof BN) {\n    this.set({\n      r: r,\n      s: s\n    })\n  } else if (r) {\n    var obj = r\n    this.set(obj)\n  }\n}\n\nSignature.prototype.set = function (obj) {\n  this.r = obj.r || this.r || undefined\n  this.s = obj.s || this.s || undefined\n\n  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i // public key recovery parameter in range [0, 3]\n  this.compressed = typeof obj.compressed !== 'undefined'\n    ? obj.compressed : this.compressed // whether the recovered pubkey is compressed\n  this.nhashtype = obj.nhashtype || this.nhashtype || undefined\n  return this\n}\n\nSignature.fromCompact = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf), 'Argument is expected to be a Buffer')\n\n  var sig = new Signature()\n\n  var compressed = true\n  var i = buf.slice(0, 1)[0] - 27 - 4\n  if (i < 0) {\n    compressed = false\n    i = i + 4\n  }\n\n  var b2 = buf.slice(1, 33)\n  var b3 = buf.slice(33, 65)\n\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'))\n  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'))\n  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'))\n\n  sig.compressed = compressed\n  sig.i = i\n  sig.r = BN.fromBuffer(b2)\n  sig.s = BN.fromBuffer(b3)\n\n  return sig\n}\n\nSignature.fromDER = Signature.fromBuffer = function (buf, strict) {\n  var obj = Signature.parseDER(buf, strict)\n  var sig = new Signature()\n\n  sig.r = obj.r\n  sig.s = obj.s\n\n  return sig\n}\n\n// The format used in a tx\nSignature.fromTxFormat = function (buf) {\n  var nhashtype = buf.readUInt8(buf.length - 1)\n  var derbuf = buf.slice(0, buf.length - 1)\n  var sig = Signature.fromDER(derbuf, false)\n  sig.nhashtype = nhashtype\n  return sig\n}\n\nSignature.fromString = function (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Signature.fromDER(buf)\n}\n\n/**\n * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n */\nSignature.parseDER = function (buf, strict) {\n  $.checkArgument(Buffer.isBuffer(buf), new Error('DER formatted signature should be a buffer'))\n  if (_.isUndefined(strict)) {\n    strict = true\n  }\n\n  var header = buf[0]\n  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'))\n\n  var length = buf[1]\n  var buflength = buf.slice(2).length\n  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'))\n\n  length = length < buflength ? length : buflength\n\n  var rheader = buf[2 + 0]\n  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'))\n\n  var rlength = buf[2 + 1]\n  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength)\n  var r = BN.fromBuffer(rbuf)\n  var rneg = buf[2 + 1 + 1] === 0x00\n  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'))\n\n  var sheader = buf[2 + 2 + rlength + 0]\n  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'))\n\n  var slength = buf[2 + 2 + rlength + 1]\n  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength)\n  var s = BN.fromBuffer(sbuf)\n  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00\n  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'))\n\n  var sumlength = 2 + 2 + rlength + 2 + slength\n  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'))\n\n  var obj = {\n    header: header,\n    length: length,\n    rheader: rheader,\n    rlength: rlength,\n    rneg: rneg,\n    rbuf: rbuf,\n    r: r,\n    sheader: sheader,\n    slength: slength,\n    sneg: sneg,\n    sbuf: sbuf,\n    s: s\n  }\n\n  return obj\n}\n\nSignature.prototype.toCompact = function (i, compressed) {\n  i = typeof i === 'number' ? i : this.i\n  compressed = typeof compressed === 'boolean' ? compressed : this.compressed\n\n  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {\n    throw new Error('i must be equal to 0, 1, 2, or 3')\n  }\n\n  var val = i + 27 + 4\n  if (compressed === false) {\n    val = val - 4\n  }\n  var b1 = Buffer.from([val])\n  var b2 = this.r.toBuffer({\n    size: 32\n  })\n  var b3 = this.s.toBuffer({\n    size: 32\n  })\n  return Buffer.concat([b1, b2, b3])\n}\n\nSignature.prototype.toBuffer = Signature.prototype.toDER = function () {\n  var rnbuf = this.r.toBuffer()\n  var snbuf = this.s.toBuffer()\n\n  var rneg = !!(rnbuf[0] & 0x80)\n  var sneg = !!(snbuf[0] & 0x80)\n\n  var rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf\n  var sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf\n\n  var rlength = rbuf.length\n  var slength = sbuf.length\n  var length = 2 + rlength + 2 + slength\n  var rheader = 0x02\n  var sheader = 0x02\n  var header = 0x30\n\n  var der = Buffer.concat([Buffer.from([header, length, rheader, rlength]), rbuf, Buffer.from([sheader, slength]), sbuf])\n  return der\n}\n\nSignature.prototype.toString = function () {\n  var buf = this.toDER()\n  return buf.toString('hex')\n}\n\n/**\n * This function is translated from bitcoind's IsDERSignature and is used in\n * the script interpreter.  This \"DER\" format actually includes an extra byte,\n * the nhashtype, at the end. It is really the tx format, not DER format.\n *\n * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n * Where R and S are not negative (their first byte has its highest bit not set), and not\n * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n * in which case a single 0 byte is necessary and even required).\n *\n * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n */\nSignature.isTxDER = function (buf) {\n  if (buf.length < 9) {\n    //  Non-canonical signature: too short\n    return false\n  }\n  if (buf.length > 73) {\n    // Non-canonical signature: too long\n    return false\n  }\n  if (buf[0] !== 0x30) {\n    //  Non-canonical signature: wrong type\n    return false\n  }\n  if (buf[1] !== buf.length - 3) {\n    //  Non-canonical signature: wrong length marker\n    return false\n  }\n  var nLenR = buf[3]\n  if (5 + nLenR >= buf.length) {\n    //  Non-canonical signature: S length misplaced\n    return false\n  }\n  var nLenS = buf[5 + nLenR]\n  if ((nLenR + nLenS + 7) !== buf.length) {\n    //  Non-canonical signature: R+S length mismatch\n    return false\n  }\n\n  var R = buf.slice(4)\n  if (buf[4 - 2] !== 0x02) {\n    //  Non-canonical signature: R value type mismatch\n    return false\n  }\n  if (nLenR === 0) {\n    //  Non-canonical signature: R length is zero\n    return false\n  }\n  if (R[0] & 0x80) {\n    //  Non-canonical signature: R value negative\n    return false\n  }\n  if (nLenR > 1 && (R[0] === 0x00) && !(R[1] & 0x80)) {\n    //  Non-canonical signature: R value excessively padded\n    return false\n  }\n\n  var S = buf.slice(6 + nLenR)\n  if (buf[6 + nLenR - 2] !== 0x02) {\n    //  Non-canonical signature: S value type mismatch\n    return false\n  }\n  if (nLenS === 0) {\n    //  Non-canonical signature: S length is zero\n    return false\n  }\n  if (S[0] & 0x80) {\n    //  Non-canonical signature: S value negative\n    return false\n  }\n  if (nLenS > 1 && (S[0] === 0x00) && !(S[1] & 0x80)) {\n    //  Non-canonical signature: S value excessively padded\n    return false\n  }\n  return true\n}\n\n/**\n * Compares to bitcoind's IsLowDERSignature\n * See also ECDSA signature algorithm which enforces this.\n * See also BIP 62, \"low S values in signatures\"\n */\nSignature.prototype.hasLowS = function () {\n  if (this.s.lt(new BN(1)) ||\n    this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof.\n * Translated from bitcoind's IsDefinedHashtypeSignature\n */\nSignature.prototype.hasDefinedHashtype = function () {\n  if (!JSUtil.isNaturalNumber(this.nhashtype)) {\n    return false\n  }\n  // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit\n  var temp = this.nhashtype & 0x1F\n  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {\n    return false\n  }\n  return true\n}\n\nSignature.prototype.toTxFormat = function () {\n  var derbuf = this.toDER()\n  var buf = Buffer.alloc(1)\n  buf.writeUInt8(this.nhashtype, 0)\n  return Buffer.concat([derbuf, buf])\n}\n\nSignature.SIGHASH_ALL = 0x01\nSignature.SIGHASH_NONE = 0x02\nSignature.SIGHASH_SINGLE = 0x03\nSignature.SIGHASH_FORKID = 0x40\nSignature.SIGHASH_ANYONECANPAY = 0x80\n\nSignature.ALL = 0x41\nSignature.NONE = 0x42\nSignature.SINGLE = 0x43\nSignature.ANYONECANPAY_ALL = 0xc1\nSignature.ANYONECANPAY_NONE = 0xc2\nSignature.ANYONECANPAY_SINGLE = 0xc3\n\nmodule.exports = Signature\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('./preconditions')\n\n/**\n * Determines whether a string contains only hexadecimal values\n *\n * @name JSUtil.isHexa\n * @param {string} value\n * @return {boolean} true if the string is the hexa representation of a number\n */\nvar isHexa = function isHexa (value) {\n  if (!_.isString(value)) {\n    return false\n  }\n  return /^[0-9a-fA-F]+$/.test(value)\n}\n\n/**\n * @namespace JSUtil\n */\nmodule.exports = {\n  /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param {string} arg\n   * @return {Object|boolean} false if the argument is not a JSON string.\n   */\n  isValidJSON: function isValidJSON (arg) {\n    var parsed\n    if (!_.isString(arg)) {\n      return false\n    }\n    try {\n      parsed = JSON.parse(arg)\n    } catch (e) {\n      return false\n    }\n    if (typeof (parsed) === 'object') {\n      return true\n    }\n    return false\n  },\n  isHexa: isHexa,\n  isHexaString: isHexa,\n\n  /**\n   * Define immutable properties on a target object\n   *\n   * @param {Object} target - An object to be extended\n   * @param {Object} values - An object of properties\n   * @return {Object} The target object\n   */\n  defineImmutable: function defineImmutable (target, values) {\n    Object.keys(values).forEach(function (key) {\n      Object.defineProperty(target, key, {\n        configurable: false,\n        enumerable: true,\n        value: values[key]\n      })\n    })\n    return target\n  },\n  /**\n   * Checks that a value is a natural number, a positive integer or zero.\n   *\n   * @param {*} value\n   * @return {Boolean}\n   */\n  isNaturalNumber: function isNaturalNumber (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      value >= 0\n  },\n\n  /**\n   * Transform a 4-byte integer (unsigned value) into a Buffer of length 4 (Big Endian Byte Order)\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsBuffer: function integerAsBuffer (integer) {\n    $.checkArgumentType(integer, 'number', 'integer')\n    const buf = Buffer.allocUnsafe(4)\n    buf.writeUInt32BE(integer, 0)\n    return buf\n  }\n}\n","'use strict'\n\nvar BN = require('./crypto/bn')\nvar Point = require('./crypto/point')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar Network = require('./networks')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey (data, extra) {\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra)\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.')\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data\n  }\n  extra = extra || {}\n\n  var info = this._classifyArgs(data, extra)\n\n  // validation\n  info.point.validate()\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Network.defaultNetwork\n  })\n\n  return this\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function (data, extra) {\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  }\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data)\n  } else if (typeof (data) === 'string') {\n    info = PublicKey._transformDER(Buffer.from(data, 'hex'))\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data)\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network)\n  }\n  return info\n}\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function (param) {\n  var PrivateKey = require('./privatekey')\n  return param instanceof PrivateKey\n}\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function (param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array)\n}\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = {}\n  info.point = Point.getG().mul(privkey.bn)\n  info.compressed = privkey.compressed\n  info.network = privkey.network\n  return info\n}\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = {}\n\n  strict = _.isUndefined(strict) ? true : strict\n\n  var x\n  var y\n  var xbuf\n  var ybuf\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33)\n    ybuf = buf.slice(33, 65)\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes')\n    }\n    x = new BN(xbuf)\n    y = new BN(ybuf)\n    info.point = new Point(x, y)\n    info.compressed = false\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(true, x)\n    info.compressed = true\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(false, x)\n    info.compressed = true\n  } else {\n    throw new TypeError('Invalid DER format public key')\n  }\n  return info\n}\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function (odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)')\n  var info = {}\n  info.point = Point.fromX(odd, x)\n  return info\n}\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function (json) {\n  var x = new BN(json.x, 'hex')\n  var y = new BN(json.y, 'hex')\n  var point = new Point(x, y)\n  return new PublicKey(point, {\n    compressed: json.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = PublicKey._transformPrivateKey(privkey)\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = PublicKey._transformDER(buf, strict)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function (point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.')\n  return new PublicKey(point, {\n    compressed: compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromHex = PublicKey.fromString = function (str, encoding) {\n  var buf = Buffer.from(str, encoding || 'hex')\n  var info = PublicKey._transformDER(buf)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function (odd, x) {\n  var info = PublicKey._transformX(odd, x)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function (data) {\n  var error\n  try {\n    new PublicKey(data) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function (data) {\n  return !PublicKey.getValidationError(data)\n}\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject () {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  }\n}\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function () {\n  var x = this.point.getX()\n  var y = this.point.getY()\n\n  var xbuf = x.toBuffer({\n    size: 32\n  })\n  var ybuf = y.toBuffer({\n    size: 32\n  })\n\n  var prefix\n  if (!this.compressed) {\n    prefix = Buffer.from([0x04])\n    return Buffer.concat([prefix, xbuf, ybuf])\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2\n    if (odd) {\n      prefix = Buffer.from([0x03])\n    } else {\n      prefix = Buffer.from([0x02])\n    }\n    return Buffer.concat([prefix, xbuf])\n  }\n}\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID () {\n  return Hash.sha256ripemd160(this.toBuffer())\n}\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function (network) {\n  var Address = require('./address')\n  return Address.fromPublicKey(this, network || this.network)\n}\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = PublicKey.prototype.toHex = function () {\n  return this.toDER().toString('hex')\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function () {\n  return '<PublicKey: ' + this.toHex() +\n    (this.compressed ? '' : ', uncompressed') + '>'\n}\n\nmodule.exports = PublicKey\n","if (process.browser) module.exports = require('./hash.browser')\nelse module.exports = require('./hash.node')\n","'use strict'\n\nvar hash = require('hash.js')\nvar $ = require('../util/preconditions')\n\nvar Hash = module.exports\n\n/**\n * A SHA or SHA1 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-1\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha1 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha1().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha1.blocksize = 512\n\n/**\n * A SHA256 hash, which is always 256 bits or 32 bytes long.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha256().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha256.blocksize = 512\n\n/**\n * A double SHA256 hash, which is always 256 bits or 32 bytes bytes long. This\n * hash function is commonly used inside Bitcoin, particularly for the hash of a\n * block and the hash of a transaction.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.sha256(Hash.sha256(buf))\n}\n\n/**\n * A RIPEMD160 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.ripemd160().update(buf).digest('hex'), 'hex')\n}\n/**\n * A RIPEMD160 hash of a SHA256 hash, which is always 160 bits or 20 bytes long.\n * This value is commonly used inside Bitcoin, particularly for Bitcoin\n * addresses.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.ripemd160(Hash.sha256(buf))\n}\n\n/**\n * A SHA512 hash, which is always 512 bits or 64 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-2\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha512 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha512().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha512.blocksize = 1024\n\n/**\n * A way to do HMAC using any underlying hash function. If you ever find that\n * you want to hash two pieces of data together, you should use HMAC instead of\n * just using a hash function. Rather than doing hash(data1 + data2) you should\n * do HMAC(data1, data2). Actually, rather than use HMAC directly, we recommend\n * you use either sha256hmac or sha515hmac provided below.\n *\n * See:\n * https://en.wikipedia.org/wiki/Length_extension_attack\n * https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\n *\n * @param {function} hashf Which hash function to use.\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.hmac = function (hashf, data, key) {\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(Buffer.isBuffer(data))\n  $.checkArgument(Buffer.isBuffer(key))\n  $.checkArgument(hashf.blocksize)\n\n  var blocksize = hashf.blocksize / 8\n\n  if (key.length > blocksize) {\n    key = hashf(key)\n  } else if (key < blocksize) {\n    var fill = Buffer.alloc(blocksize)\n    fill.fill(0)\n    key.copy(fill)\n    key = fill\n  }\n\n  var oKey = Buffer.alloc(blocksize)\n  oKey.fill(0x5c)\n\n  var iKey = Buffer.alloc(blocksize)\n  iKey.fill(0x36)\n\n  var oKeyPad = Buffer.alloc(blocksize)\n  var iKeyPad = Buffer.alloc(blocksize)\n  for (var i = 0; i < blocksize; i++) {\n    oKeyPad[i] = oKey[i] ^ key[i]\n    iKeyPad[i] = iKey[i] ^ key[i]\n  }\n\n  return hashf(Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))]))\n}\n\n/**\n * A SHA256 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key)\n}\n\n/**\n * A SHA512 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key)\n}\n","'use strict'\nvar _ = require('./util/_')\n\nvar JSUtil = require('./util/js')\nvar networks = []\nvar networkMaps = {}\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\"), \"testnet\", \"regtest\" and \"stn\".\n * @constructor\n */\nfunction Network () {}\n\nNetwork.prototype.toString = function toString () {\n  return this.name\n}\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get (arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys]\n    }\n    for (var i = 0; i < networks.length; i++) {\n      var network = networks[i]\n      var filteredNet = _.pick(network, keys)\n      var netValues = _.values(filteredNet)\n      if (~netValues.indexOf(arg)) {\n        return network\n      }\n    }\n    return undefined\n  }\n  return networkMaps[arg]\n}\n\n/***\n * Derives an array from the given cashAddrPrefix to be used in the computation\n * of the address' checksum.\n *\n * @param {string} cashAddrPrefix Network cashAddrPrefix. E.g.: 'bitcoincash'.\n */\nfunction cashAddrPrefixToArray (cashAddrPrefix) {\n  var result = []\n  for (var i = 0; i < cashAddrPrefix.length; i++) {\n    result.push(cashAddrPrefix.charCodeAt(i) & 31)\n  }\n  return result\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash cashAddrPrefix\n * @param {Number} data.privatekey - The privatekey cashAddrPrefix\n * @param {Number} data.scripthash - The scripthash cashAddrPrefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork (data) {\n  var network = new Network()\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey\n  })\n\n  var indexBy = data.indexBy || Object.keys(data)\n\n  if (data.cashAddrPrefix) {\n    _.extend(network, {\n      cashAddrPrefix: data.cashAddrPrefix,\n      cashAddrPrefixArray: cashAddrPrefixToArray(data.cashAddrPrefix)\n    })\n  }\n\n  if (data.networkMagic) {\n    _.extend(network, {\n      networkMagic: JSUtil.integerAsBuffer(data.networkMagic)\n    })\n  }\n\n  if (data.port) {\n    _.extend(network, {\n      port: data.port\n    })\n  }\n\n  if (data.dnsSeeds) {\n    _.extend(network, {\n      dnsSeeds: data.dnsSeeds\n    })\n  }\n  networks.push(network)\n  indexNetworkBy(network, indexBy)\n  return network\n}\n\nfunction indexNetworkBy (network, keys) {\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    var networkValue = network[key]\n    if (!_.isUndefined(networkValue) && !_.isObject(networkValue)) {\n      networkMaps[networkValue] = network\n    }\n  }\n}\n\nfunction unindexNetworkBy (network, values) {\n  for (var index = 0; index < values.length; index++) {\n    var value = values[index]\n    if (networkMaps[value] === network) {\n      delete networkMaps[value]\n    }\n  }\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork (network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1)\n    }\n  }\n  unindexNetworkBy(network, Object.keys(networkMaps))\n}\n\nvar networkMagic = {\n  livenet: 0xe3e1f3e8,\n  testnet: 0xf4e5f3f4,\n  regtest: 0xdab5bffa,\n  stn: 0xfbcec4f9\n}\n\nvar dnsSeeds = [\n  'seed.bitcoinsv.org',\n  'seed.bitcoinunlimited.info'\n]\n\nvar TESTNET = {\n  PORT: 18333,\n  NETWORK_MAGIC: networkMagic.testnet,\n  DNS_SEEDS: dnsSeeds,\n  PREFIX: 'testnet',\n  CASHADDRPREFIX: 'bchtest'\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: networkMagic.regtest,\n  DNS_SEEDS: [],\n  PREFIX: 'regtest',\n  CASHADDRPREFIX: 'bchreg'\n}\n\nvar STN = {\n  PORT: 9333,\n  NETWORK_MAGIC: networkMagic.stn,\n  DNS_SEEDS: ['stn-seed.bitcoinsv.io'],\n  PREFIX: 'stn',\n  CASHADDRPREFIX: 'bsvstn'\n}\n\nvar liveNetwork = {\n  name: 'livenet',\n  alias: 'mainnet',\n  prefix: 'bitcoin',\n  cashAddrPrefix: 'bitcoincash',\n  pubkeyhash: 0x00,\n  privatekey: 0x80,\n  scripthash: 0x05,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: networkMagic.livenet,\n  port: 8333,\n  dnsSeeds: dnsSeeds\n}\n\n// network magic, port, cashAddrPrefix, and dnsSeeds are overloaded by enableRegtest\nvar testNetwork = {\n  name: 'testnet',\n  prefix: TESTNET.PREFIX,\n  cashAddrPrefix: TESTNET.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: TESTNET.NETWORK_MAGIC\n}\n\nvar regtestNetwork = {\n  name: 'regtest',\n  prefix: REGTEST.PREFIX,\n  cashAddrPrefix: REGTEST.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: REGTEST.NETWORK_MAGIC,\n  port: REGTEST.PORT,\n  dnsSeeds: [],\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\nvar stnNetwork = {\n  name: 'stn',\n  prefix: STN.PREFIX,\n  cashAddrPrefix: STN.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: STN.NETWORK_MAGIC,\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\n// Add configurable values for testnet/regtest\n\naddNetwork(testNetwork)\naddNetwork(stnNetwork)\naddNetwork(regtestNetwork)\naddNetwork(liveNetwork)\n\nvar livenet = get('livenet')\nvar regtest = get('regtest')\nvar testnet = get('testnet')\nvar stn = get('stn')\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT\n    } else if (this.stnEnabled) {\n      return STN.PORT\n    } else {\n      return TESTNET.PORT\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return JSUtil.integerAsBuffer(REGTEST.NETWORK_MAGIC)\n    } else if (this.stnEnabled) {\n      return JSUtil.integerAsBuffer(STN.NETWORK_MAGIC)\n    } else {\n      return JSUtil.integerAsBuffer(TESTNET.NETWORK_MAGIC)\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS\n    } else if (this.stnEnabled) {\n      return STN.DNS_SEEDS\n    } else {\n      return TESTNET.DNS_SEEDS\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefix', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.CASHADDRPREFIX\n    } else if (this.stnEnabled) {\n      return STN.CASHADDRPREFIX\n    } else {\n      return TESTNET.CASHADDRPREFIX\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefixArray', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return cashAddrPrefixToArray(REGTEST.CASHADDRPREFIX)\n    } else if (this.stnEnabled) {\n      return STN.cashAddrPrefixToArray(STN.CASHADDRPREFIX)\n    } else {\n      return cashAddrPrefixToArray(TESTNET.CASHADDRPREFIX)\n    }\n  }\n})\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest () {\n  testnet.regtestEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest () {\n  testnet.regtestEnabled = false\n}\n/**\n * @function\n * @member Networks#enableStn\n * Will enable stn features for testnet\n */\nfunction enableStn () {\n  testnet.stnEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableStn\n * Will disable stn features for testnet\n */\nfunction disableStn () {\n  testnet.stnEnabled = false\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  regtest: regtest,\n  stn: stn,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest,\n  enableStn: enableStn,\n  disableStn: disableStn\n}\n","'use strict'\n\nvar _ = require('./util/_')\nvar Address = require('./address')\nvar Base58Check = require('./encoding/base58check')\nvar BN = require('./crypto/bn')\nvar JSUtil = require('./util/js')\nvar Networks = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\nvar Random = require('./crypto/random')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer or WIF string.\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey (data, network) {\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network)\n  }\n  if (data instanceof PrivateKey) {\n    return data\n  }\n\n  var info = this._classifyArguments(data, network)\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0) {\n    throw new TypeError('Number can not be equal to zero, undefined, null or false')\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N')\n  }\n  if (typeof (info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")')\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  })\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  })\n\n  return this\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function (data, network) {\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  }\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)) {\n    info.bn = PrivateKey._getRandomBN()\n  } else if (data instanceof BN) {\n    info.bn = data\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n    info = PrivateKey._transformBuffer(data, network)\n  } else if (data.bn && data.network) {\n    info = PrivateKey._transformObject(data)\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN()\n    info.network = Networks.get(data)\n  } else if (typeof (data) === 'string') {\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(Buffer.from(data, 'hex'))\n    } else {\n      info = PrivateKey._transformWIF(data, network)\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.')\n  }\n  return info\n}\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function () {\n  var condition\n  var bn\n  do {\n    var privbuf = Random.getRandomBuffer(32)\n    bn = BN.fromBuffer(privbuf)\n    condition = bn.lt(Point.getN())\n  } while (!condition)\n  return bn\n}\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function (buf, network) {\n  var info = {}\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network)\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey')\n\n  if (!info.network) {\n    throw new Error('Invalid network')\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch')\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)')\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1))\n\n  return info\n}\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function (buf, network) {\n  var info = {}\n  info.network = Networks.get(network) || Networks.defaultNetwork\n  info.bn = BN.fromBuffer(buf)\n  info.compressed = false\n  return info\n}\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function (str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network)\n}\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} buf\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function (buf, network) {\n  return new PrivateKey(buf, network)\n}\n\nPrivateKey.fromHex = function (hex, network) {\n  return PrivateKey.fromBuffer(Buffer.from(hex, 'hex'), network)\n}\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function (json) {\n  var bn = new BN(json.bn, 'hex')\n  var network = Networks.get(json.network)\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  }\n}\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function (str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.')\n  return new PrivateKey(str)\n}\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = PrivateKey.fromJSON = function (obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.')\n  return new PrivateKey(obj)\n}\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function (network) {\n  var bn = PrivateKey._getRandomBN()\n  return new PrivateKey(bn, network)\n}\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function (data, network) {\n  var error\n  try {\n    new PrivateKey(data, network) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function (data, network) {\n  if (!data) {\n    return false\n  }\n  return !PrivateKey.getValidationError(data, network)\n}\n\n/**\n * Will output the PrivateKey in WIF\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function () {\n  return this.toWIF()\n}\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function () {\n  var network = this.network\n  var compressed = this.compressed\n\n  var buf\n  if (compressed) {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 }),\n      Buffer.from([0x01])])\n  } else {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 })])\n  }\n\n  return Base58Check.encode(buf)\n}\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function () {\n  return this.bn\n}\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function () {\n  return this.bn.toBuffer({ size: 32 })\n}\n\nPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function () {\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this)\n  }\n  return this._pubkey\n}\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function (network) {\n  var pubkey = this.toPublicKey()\n  return Address.fromPublicKey(pubkey, network || this.network)\n}\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject () {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function () {\n  var uncompressed = !this.compressed ? ', uncompressed' : ''\n  return '<PrivateKey: ' + this.toHex() + ', network: ' + this.network + uncompressed + '>'\n}\n\nmodule.exports = PrivateKey\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar errors = require('./errors')\nvar Base58Check = require('./encoding/base58check')\nvar Networks = require('./networks')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar PublicKey = require('./publickey')\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address (data, network, type) {\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type)\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type)\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html')\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\", \"testnet\", or \"regtest\".')\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".')\n  }\n\n  var info = this._classifyArguments(data, network, type)\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork\n  info.type = info.type || type || Address.PayToPublicKeyHash\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  })\n\n  return this\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function (data, network, type) {\n  var Script = require('./script')\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data)\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type)\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data)\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network)\n  } else if (typeof (data) === 'string') {\n    return Address._transformString(data, network, type)\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n}\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash'\n/** @static */\nAddress.PayToScriptHash = 'scripthash'\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function (hash) {\n  var info = {}\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.')\n  }\n  info.hashBuffer = hash\n  return info\n}\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function (data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property')\n  $.checkArgument(data.type, 'Must provide a `type` property')\n  return {\n    hashBuffer: data.hash ? Buffer.from(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  }\n}\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function (buffer) {\n  var version = {}\n\n  var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash')\n  var scripthashNetwork = Networks.get(buffer[0], 'scripthash')\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork\n    version.type = Address.PayToPublicKeyHash\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork\n    version.type = Address.PayToScriptHash\n  }\n\n  return version\n}\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function (buffer, network, type) {\n  var info = {}\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.')\n  }\n\n  var networkObj = Networks.get(network)\n  var bufferVersion = Address._classifyFromVersion(buffer)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    // console.log(bufferVersion)\n    throw new TypeError('Address has mismatched network type.')\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.')\n  }\n\n  info.hashBuffer = buffer.slice(1)\n  info.network = bufferVersion.network\n  info.type = bufferVersion.type\n  return info\n}\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function (pubkey) {\n  var info = {}\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.')\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer())\n  info.type = Address.PayToPublicKeyHash\n  return info\n}\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function (script, network) {\n  var Script = require('./script')\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = script.getAddressInfo(network)\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script)\n  }\n  return info\n}\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function (publicKeys, threshold, network) {\n  var Script = require('./script')\n  network = network || publicKeys[0].network || Networks.defaultNetwork\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network)\n}\n\n/**\n * Internal function to transform a bitcoin cash address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function (data, network, type) {\n  if (typeof (data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.')\n  }\n  if (data.length < 27) {\n    throw new Error('Invalid Address string provided')\n  }\n  data = data.trim()\n  var networkObj = Networks.get(network)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  var addressBuffer = Base58Check.decode(data)\n  return Address._transformBuffer(addressBuffer, network, type)\n}\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function (data, network) {\n  var info = Address._transformPublicKey(data)\n  network = network || Networks.defaultNetwork\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a PrivateKey instance\n *\n * @param {PrivateKey} privateKey\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPrivateKey = function (privateKey, network) {\n  let publicKey = PublicKey.fromPrivateKey(privateKey)\n  network = network || privateKey.network || Networks.defaultNetwork\n  return Address.fromPublicKey(publicKey, network)\n}\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function (hash, network) {\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash)\n}\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function (hash, network) {\n  $.checkArgument(hash, 'hash parameter is required')\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash)\n}\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function (script, network) {\n  var Script = require('./script')\n  $.checkArgument(script, 'script is required')\n  $.checkArgument(script instanceof Script, 'script must be instance of Script')\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network)\n}\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function (script, network) {\n  var Script = require('./script')\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = Address._transformScript(script, network)\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function (buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\nAddress.fromHex = function (hex, network, type) {\n  return Address.fromBuffer(Buffer.from(hex, 'hex'), network, type)\n}\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function (str, network, type) {\n  var info = Address._transformString(str, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject (obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  )\n  var hashBuffer = Buffer.from(obj.hash, 'hex')\n  return new Address(hashBuffer, obj.network, obj.type)\n}\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function (data, network, type) {\n  var error\n  try {\n    new Address(data, network, type) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function (data, network, type) {\n  return !Address.getValidationError(data, network, type)\n}\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function () {\n  return this.type === Address.PayToPublicKeyHash\n}\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function () {\n  return this.type === Address.PayToScriptHash\n}\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function () {\n  var version = Buffer.from([this.network[this.type]])\n  var buf = Buffer.concat([version, this.hashBuffer])\n  return buf\n}\n\nAddress.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function () {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>'\n}\n\n/**\n * Will return a the base58 string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function () {\n  return Base58Check.encode(this.toBuffer())\n}\n\nmodule.exports = Address\n","'use strict'\n\nvar _ = require('../util/_')\nvar Base58 = require('./base58')\nvar sha256sha256 = require('../crypto/hash').sha256sha256\n\n/**\n * A Base58check object can encode/decodd Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. This is the same as\n * Base58, except that it includes a checksum to prevent accidental mistypings.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58Check = function Base58Check (obj) {\n  if (!(this instanceof Base58Check)) { return new Base58Check(obj) }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58Check.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\nBase58Check.validChecksum = function validChecksum (data, checksum) {\n  if (_.isString(data)) {\n    data = Buffer.from(Base58.decode(data))\n  }\n  if (_.isString(checksum)) {\n    checksum = Buffer.from(Base58.decode(checksum))\n  }\n  if (!checksum) {\n    checksum = data.slice(-4)\n    data = data.slice(0, -4)\n  }\n  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex')\n}\n\nBase58Check.decode = function (s) {\n  if (typeof s !== 'string') { throw new Error('Input must be a string') }\n\n  var buf = Buffer.from(Base58.decode(s))\n\n  if (buf.length < 4) { throw new Error('Input string too short') }\n\n  var data = buf.slice(0, -4)\n  var csum = buf.slice(-4)\n\n  var hash = sha256sha256(data)\n  var hash4 = hash.slice(0, 4)\n\n  if (csum.toString('hex') !== hash4.toString('hex')) { throw new Error('Checksum mismatch') }\n\n  return data\n}\n\nBase58Check.checksum = function (buffer) {\n  return sha256sha256(buffer).slice(0, 4)\n}\n\nBase58Check.encode = function (buf) {\n  if (!Buffer.isBuffer(buf)) { throw new Error('Input must be a buffer') }\n  var checkedBuf = Buffer.alloc(buf.length + 4)\n  var hash = Base58Check.checksum(buf)\n  buf.copy(checkedBuf)\n  hash.copy(checkedBuf, buf.length)\n  return Base58.encode(checkedBuf)\n}\n\nBase58Check.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromBuffer = function (buf) {\n  return new Base58Check().fromBuffer(buf)\n}\n\nBase58Check.fromHex = function (hex) {\n  return Base58Check.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58Check.prototype.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  return new Base58(buf)\n}\n\nBase58Check.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58Check.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58Check.prototype.toString = function () {\n  return Base58Check.encode(this.buf)\n}\n\nmodule.exports = Base58Check\n","'use strict'\n\nvar _ = require('../util/_')\nvar bs58 = require('bs58')\n\n/**\n * The alphabet for the Bitcoin-specific Base 58 encoding distinguishes between\n * lower case L and upper case i - neither of those characters are allowed to\n * prevent accidentaly miscopying of letters.\n */\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('')\n\n/**\n * A Base58 object can encode/decoded Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. Addresses and private\n * keys actually use an additional checksum, and so they actually use the\n * Base58Check class.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58 = function Base58 (obj) {\n  if (!(this instanceof Base58)) {\n    return new Base58(obj)\n  }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58.validCharacters = function validCharacters (chars) {\n  if (Buffer.isBuffer(chars)) {\n    chars = chars.toString()\n  }\n  return _.every(_.map(chars, function (char) { return _.includes(ALPHABET, char) }))\n}\n\nBase58.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\n/**\n * Encode a buffer to Bsae 58.\n *\n * @param {Buffer} buf Any buffer to be encoded.\n * @returns {string} A Base 58 encoded string.\n */\nBase58.encode = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    throw new Error('Input should be a buffer')\n  }\n  return bs58.encode(buf)\n}\n\n/**\n * Decode a Base 58 string to a buffer.\n *\n * @param {string} str A Base 58 encoded string.\n * @returns {Buffer} The decoded buffer.\n */\nBase58.decode = function (str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string')\n  }\n  return Buffer.from(bs58.decode(str))\n}\n\nBase58.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58.fromBuffer = function (buf) {\n  return new Base58().fromBuffer(buf)\n}\n\nBase58.fromHex = function (hex) {\n  return Base58.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58.prototype.fromString = function (str) {\n  var buf = Base58.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58.fromString = function (str) {\n  return new Base58().fromString(str)\n}\n\nBase58.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58.prototype.toString = function () {\n  return Base58.encode(this.buf)\n}\n\nmodule.exports = Base58\n","module.exports = require('./script')\n\nmodule.exports.Interpreter = require('./interpreter')\n\nmodule.exports.Stack = require('./stack')\n","'use strict'\n\nvar Address = require('../address')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Opcode = require('../opcode')\nvar PublicKey = require('../publickey')\nvar Signature = require('../crypto/signature')\nvar Networks = require('../networks')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\nvar errors = require('../errors')\nvar JSUtil = require('../util/js')\nconst decodeScriptChunks = require('../encoding/decode-script-chunks')\nconst decodeASM = require('../encoding/decode-asm')\nconst encodeHex = require('../encoding/encode-hex')\n\n// These WeakMap caches allow the objects themselves to maintain their immutability\nconst SCRIPT_TO_CHUNKS_CACHE = new WeakMap()\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script (from) {\n  if (!(this instanceof Script)) {\n    return new Script(from)\n  }\n  this.buffer = Buffer.from([])\n\n  if (Buffer.isBuffer(from)) {\n    return Script.fromBuffer(from)\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from)\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer())\n  } else if (_.isString(from)) {\n    return Script.fromString(from)\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    return Script.fromChunks(from.chunks)\n  } else if (_.isObject(from) && Buffer.isBuffer(from.buffer)) {\n    return Script.fromBuffer(from.buffer)\n  }\n}\n\nScript.prototype.set = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  if (obj.chunks && _.isArray(obj.chunks)) {\n    var s = Script.fromChunks(obj.chunks)\n    this.buffer = s.buffer\n    return this\n  }\n\n  $.checkArgument(Buffer.isBuffer(obj.buffer))\n  this.buffer = obj.buffer\n  return this\n}\n\nScript.fromBuffer = function (buffer) {\n  $.checkArgument(Buffer.isBuffer(buffer))\n  var script = new Script()\n  script.buffer = buffer\n  return script\n}\n\nScript.fromChunks = function (chunks) {\n  var script = new Script()\n\n  const bw = new BufferWriter()\n\n  for (let index = 0; index < chunks.length; index++) {\n    const chunk = chunks[index]\n    bw.writeUInt8(chunk.opcodenum)\n    if (chunk.buf) {\n      if (chunk.opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len)\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len)\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len)\n        bw.write(chunk.buf)\n      }\n    }\n  }\n\n  script.buffer = bw.toBuffer()\n  return script\n}\n\nScript.prototype.toBuffer = function () {\n  return this.buffer\n}\n\nScript.fromASM = function (str) {\n  return Script.fromBuffer(decodeASM(str))\n}\n\nScript.fromHex = function (str) {\n  return new Script(Buffer.from(str, 'hex'))\n}\n\nScript.fromString = function (str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(Buffer.from(str, 'hex'))\n  }\n\n  var chunks = []\n\n  var tokens = str.split(' ')\n  var i = 0\n  while (i < tokens.length) {\n    var token = tokens[i]\n    var opcode = Opcode(token)\n    var opcodenum = opcode.toNumber()\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token)\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        var buf = Buffer.from(tokens[i + 1].slice(2), 'hex')\n        if (buf.length !== opcodenum) {\n          throw new Error('Invalid script buf len: ' + JSON.stringify(str))\n        }\n        chunks.push({\n          buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        })\n        i = i + 2\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str))\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x')\n      }\n      chunks.push({\n        buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      })\n      i = i + 3\n    } else {\n      chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    }\n  }\n  return Script.fromChunks(chunks)\n}\n\nScript.prototype.slice = function (start, end) {\n  return this.buffer.slice(start, end)\n}\n\nObject.defineProperty(Script.prototype, 'chunks', {\n  get () {\n    if (SCRIPT_TO_CHUNKS_CACHE.has(this)) return SCRIPT_TO_CHUNKS_CACHE.get(this)\n    const chunks = decodeScriptChunks(this.buffer)\n    SCRIPT_TO_CHUNKS_CACHE.set(this, chunks)\n    return chunks\n  }\n})\n\nObject.defineProperty(Script.prototype, 'length', {\n  get () {\n    return this.buffer.length\n  }\n})\n\nScript.prototype._chunkToString = function (chunk, type) {\n  var opcodenum = chunk.opcodenum\n  var asm = (type === 'asm')\n  var str = ''\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0'\n        } else if (opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1'\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString()\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString()\n      }\n    } else {\n      var numstr = opcodenum.toString(16)\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr\n      }\n      if (asm) {\n        str = str + ' ' + numstr\n      } else {\n        str = str + ' ' + '0x' + numstr\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4)) {\n      str = str + ' ' + Opcode(opcodenum).toString()\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex')\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex')\n      }\n    }\n  }\n  return str\n}\n\nScript.prototype.toASM = function () {\n  var str = ''\n  var chunks = this.chunks\n  for (var i = 0; i < chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk, 'asm')\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toString = function () {\n  var str = ''\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk)\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toHex = function () {\n  return encodeHex(this.buffer)\n}\n\nScript.prototype.inspect = function () {\n  return '<Script: ' + this.toString() + '>'\n}\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function () {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG)\n}\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function () {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf\n    var pubkeyBuf = this.chunks[1].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30 &&\n      pubkeyBuf &&\n      pubkeyBuf.length\n    ) {\n      var version = pubkeyBuf[0]\n      if ((version === 0x04 ||\n        version === 0x06 ||\n        version === 0x07) && pubkeyBuf.length === 65) {\n        return true\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nScript.prototype.getPublicKey = function () {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output')\n  return this.chunks[0].buf\n}\n\nScript.prototype.getPublicKeyHash = function () {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output')\n  return this.chunks[2].buf\n}\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function () {\n  if (this.chunks.length === 2 &&\n    this.chunks[0].buf &&\n    this.chunks[0].buf.length &&\n    this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf\n    var version = pubkeyBuf[0]\n    var isVersion = false\n    if ((version === 0x04 ||\n      version === 0x06 ||\n      version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf)\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function () {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function () {\n  var buf = this.toBuffer()\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL)\n}\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function () {\n  if (this.chunks.length <= 1) {\n    return false\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1]\n  var redeemBuf = redeemChunk.buf\n  if (!redeemBuf) {\n    return false\n  }\n\n  var redeemScript\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf)\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false\n    }\n    throw e\n  }\n  var type = redeemScript.classify()\n  return type !== Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function () {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function (obj) {\n      return obj.buf && Buffer.isBuffer(obj.buf)\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG)\n}\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function () {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function (obj) {\n      return obj.buf &&\n        Buffer.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf)\n    })\n}\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function () {\n  var step1 = this.buffer.length >= 1 &&\n    this.buffer[0] === Opcode.OP_RETURN\n  if (!step1) return false\n  var buffer = this.buffer.slice(1)\n  var script2 = new Script({ buffer: buffer })\n  return script2.isPushOnly()\n}\n\nScript.prototype.isSafeDataOut = function () {\n  if (this.buffer.length < 2) {\n    return false\n  }\n  if (this.buffer[0] !== Opcode.OP_FALSE) {\n    return false\n  }\n  var buffer = this.buffer.slice(1)\n  var script2 = new Script({ buffer })\n  return script2.isDataOut()\n}\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of safe OP_RETURN data, return an array of buffers\n * In the case of a standard deprecated OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function () {\n  if (this.isSafeDataOut()) {\n    var chunks = this.chunks.slice(2)\n    var buffers = chunks.map(chunk => chunk.buf)\n    return buffers\n  }\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return Buffer.alloc(0)\n    } else {\n      return Buffer.from(this.chunks[1].buf)\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return Buffer.from(this.chunks[2].buf)\n  }\n  throw new Error('Unrecognized script type to get data from')\n}\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function () {\n  return _.every(this.chunks, function (chunk) {\n    return chunk.opcodenum <= Opcode.OP_16 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA1 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA2 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA4\n  })\n}\n\nScript.types = {}\nScript.types.UNKNOWN = 'Unknown'\nScript.types.PUBKEY_OUT = 'Pay to public key'\nScript.types.PUBKEY_IN = 'Spend from public key'\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash'\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash'\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash'\nScript.types.SCRIPTHASH_IN = 'Spend from script hash'\nScript.types.MULTISIG_OUT = 'Pay to multisig'\nScript.types.MULTISIG_IN = 'Spend from multisig'\nScript.types.DATA_OUT = 'Data push'\nScript.types.SAFE_DATA_OUT = 'Safe data push'\n\nScript.OP_RETURN_STANDARD_SIZE = 220\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function () {\n  if (this._isInput) {\n    return this.classifyInput()\n  } else if (this._isOutput) {\n    return this.classifyOutput()\n  } else {\n    var outputType = this.classifyOutput()\n    return outputType !== Script.types.UNKNOWN ? outputType : this.classifyInput()\n  }\n}\n\nScript.outputIdentifiers = {}\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut\nScript.outputIdentifiers.SAFE_DATA_OUT = Script.prototype.isSafeDataOut\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function () {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\nScript.inputIdentifiers = {}\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function () {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function () {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN\n}\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function (obj) {\n  this._addByType(obj, true)\n  return this\n}\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function (script) {\n  $.checkState(script instanceof Script, 'Must provide another script')\n  if (this.buffer.length !== script.buffer.length) {\n    return false\n  }\n  var i\n  for (i = 0; i < this.buffer.length; i++) {\n    if (this.buffer[i] !== script.buffer[i]) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function (obj) {\n  this._addByType(obj, false)\n  return this\n}\n\nScript.prototype._addByType = function (obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend)\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend)\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend)\n  } else if (Buffer.isBuffer(obj)) {\n    this._addBuffer(obj, prepend)\n  } else if (obj instanceof Script) {\n    this._insertAtPosition(obj.buffer, prepend)\n  } else if (typeof obj === 'object') {\n    var s = Script.fromChunks([obj])\n    this._insertAtPosition(s.toBuffer(), prepend)\n  } else {\n    throw new Error('Invalid script chunk')\n  }\n}\n\nScript.prototype._insertAtPosition = function (buf, prepend) {\n  var bw = new BufferWriter()\n\n  if (prepend) {\n    bw.write(buf)\n    bw.write(this.buffer)\n  } else {\n    bw.write(this.buffer)\n    bw.write(buf)\n  }\n  this.buffer = bw.toBuffer()\n}\n\nScript.prototype._addOpcode = function (opcode, prepend) {\n  var op\n  if (typeof opcode === 'number') {\n    op = opcode\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber()\n  } else {\n    op = Opcode(opcode).toNumber()\n  }\n\n  // OP_INVALIDOPCODE\n  if (op > 255) {\n    throw new errors.Script.InvalidOpcode(op)\n  }\n  this._insertAtPosition(Script.fromChunks([{\n    opcodenum: op\n  }]).toBuffer(), prepend)\n  return this\n}\n\nScript.prototype._addBuffer = function (buf, prepend) {\n  var bw = new BufferWriter()\n  var opcodenum\n  var len = buf.length\n  if (len === 0) {\n    opcodenum = 0\n    bw.writeUInt8(opcodenum)\n  } else if (len > 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len\n    bw.writeUInt8(opcodenum)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt8(len)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt16LE(len)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt32LE(len)\n    bw.write(buf)\n  } else {\n    throw new Error('You can\\'t push that much data')\n  }\n\n  this._insertAtPosition(bw.toBuffer(), prepend)\n  return this\n}\n\nScript.prototype.clone = function () {\n  return Script.fromBuffer(this.buffer.slice())\n}\n\nScript.prototype.removeCodeseparators = function () {\n  var chunks = []\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i])\n    }\n  }\n  SCRIPT_TO_CHUNKS_CACHE.delete(this)\n\n  this.buffer = Script.fromChunks(chunks).toBuffer()\n  return this\n}\n\n/**\n * If the script does not contain any OP_CODESEPARATOR, Return all scripts\n * If the script contains any OP_CODESEPARATOR, the scriptCode is the script but removing everything up to and including the last executed OP_CODESEPARATOR before the signature checking opcode being executed\n * @param {n} The {n}th codeseparator in the script\n *\n * @returns {Script} Subset of script starting at the {n}th codeseparator\n */\nScript.prototype.subScript = function (n) {\n  var idx = 0\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum === Opcode.OP_CODESEPARATOR) {\n      if (idx === n) {\n        return Script.fromChunks(this.chunks.slice(i + 1))\n      } else {\n        idx++\n      }\n    }\n  }\n\n  return this\n}\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function (publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys')\n  opts = opts || {}\n  var script = new Script()\n  script.add(Opcode.smallInt(threshold))\n  publicKeys = _.map(publicKeys, PublicKey)\n  var sorted = publicKeys\n  if (!opts.noSorting) {\n    sorted = publicKeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i]\n    script.add(publicKey.toBuffer())\n  }\n  script.add(Opcode.smallInt(publicKeys.length))\n  script.add(Opcode.OP_CHECKMULTISIG)\n  return script\n}\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  return s\n}\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer())\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function (to) {\n  $.checkArgument(!_.isUndefined(to))\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to))\n  if (to instanceof PublicKey) {\n    to = to.toAddress()\n  } else if (_.isString(to)) {\n    to = new Address(to)\n  }\n  var s = new Script()\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG)\n  s._network = to.network\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function (pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey)\n  var s = new Script()\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG)\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildDataOut = function (data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || _.isArray(data) || Buffer.isBuffer(data))\n  var datas = data\n  if (!_.isArray(datas)) {\n    datas = [data]\n  }\n  var s = new Script()\n  s.add(Opcode.OP_RETURN)\n  for (let data of datas) {\n    $.checkArgument(_.isUndefined(data) || _.isString(data) || Buffer.isBuffer(data))\n    if (_.isString(data)) {\n      data = Buffer.from(data, encoding)\n    }\n    if (!_.isUndefined(data)) {\n      s.add(data)\n    }\n  }\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildSafeDataOut = function (data, encoding) {\n  var s2 = Script.buildDataOut(data, encoding)\n  var s1 = new Script()\n  s1.add(Opcode.OP_FALSE)\n  s1.add(s2)\n  return s1\n}\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function (script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()))\n  var s = new Script()\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL)\n\n  s._network = script._network || script.network\n  return s\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function (signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n  script.add(Buffer.concat([\n    signature,\n    Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n  ]))\n  return script\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function (publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n    .add(Buffer.concat([\n      signature,\n      Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n    ]))\n    .add(new PublicKey(publicKey).toBuffer())\n  return script\n}\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function () {\n  return new Script()\n}\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function () {\n  return Script.buildScriptHashOut(this)\n}\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function (address) {\n  address = Address(address)\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address)\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address)\n  }\n  throw new errors.Script.UnrecognizedAddress(address)\n}\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function (opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo()\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo()\n  } else {\n    var info = this._getOutputAddressInfo()\n    if (!info) {\n      return this._getInputAddressInfo()\n    }\n    return info\n  }\n}\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function () {\n  var info = {}\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToScriptHash\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToPublicKeyHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function () {\n  var info = {}\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf)\n    info.type = Address.PayToPublicKeyHash\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf)\n    info.type = Address.PayToScriptHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function (network) {\n  var info = this.getAddressInfo()\n  if (!info) {\n    return false\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork\n  return new Address(info)\n}\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function (script) {\n  var buf = script.toBuffer()\n  var hex = buf.toString('hex')\n  var chunks = this.chunks\n  for (var i = 0; i < chunks.length; i++) {\n    var script2 = Script.fromChunks([chunks[i]])\n    var buf2 = script2.toBuffer()\n    var hex2 = buf2.toString('hex')\n    if (hex === hex2) {\n      chunks.splice(i, 1)\n      this.buffer = Script.fromChunks(chunks).toBuffer()\n    }\n  }\n  return this\n}\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function (i) {\n  var chunk = this.chunks[i]\n  var buf = chunk.buf\n  var opcodenum = chunk.opcodenum\n  if (!buf) {\n    return true\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1)\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2\n  }\n  return true\n}\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function (opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1)\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode))\n  }\n}\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function (accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate)\n  var self = this\n  var n = 0\n  var lastOpcode = Opcode.OP_INVALIDOPCODE\n  _.each(self.chunks, function getChunk (chunk) {\n    var opcode = chunk.opcodenum\n    if (opcode === Opcode.OP_CHECKSIG || opcode === Opcode.OP_CHECKSIGVERIFY) {\n      n++\n    } else if (opcode === Opcode.OP_CHECKMULTISIG || opcode === Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode)\n      } else {\n        n += 20\n      }\n    }\n    lastOpcode = opcode\n  })\n  return n\n}\n\nmodule.exports = Script\n","'use strict'\n\nvar assert = require('assert')\n\nconst writeU8LE = require('../script/write-u8-le')\nconst writeU16LE = require('../script/write-u16-le')\nconst writeU32LE = require('../script/write-u32-le')\nconst writeI32LE = require('../script/write-i32-le')\nconst writeVarint = require('../script/write-varint')\n\nclass BufferWriter {\n  constructor (obj) {\n    if (obj) { this.set(obj) } else {\n      this.buffers = []\n      this.length = 0\n    }\n  }\n\n  write (buffer) {\n    this.buffers.push(buffer)\n    this.length += buffer.length\n    return this\n  }\n\n  set (obj) {\n    this.buffers = obj.buffers || obj.bufs || this.buffers || []\n    this.length = this.buffers.reduce(function (prev, buf) { return prev + buf.length }, 0)\n    return this\n  }\n\n  concat () {\n    return this.toBuffer()\n  }\n\n  toBuffer () {\n    if (this.buffers.length === 1) {\n      return Buffer.from(this.buffers[0])\n    }\n\n    const whole = new Uint8Array(this.length)\n\n    let offset = 0\n    this.buffers.forEach(part => {\n      whole.set(part, offset)\n      offset += part.length\n    })\n\n    return Buffer.from(whole)\n  }\n\n  writeReverse (buf) {\n    assert(Buffer.isBuffer(buf))\n    this.write(Buffer.from(buf).reverse())\n    return this\n  }\n\n  writeUInt16LE (n) {\n    writeU16LE(this, n)\n    return this\n  }\n\n  writeUInt16BE (n) {\n    var bw = new BufferWriter()\n    bw.writeUInt16LE(n)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeUInt32LE (n) {\n    writeU32LE(this, n)\n    return this\n  }\n\n  writeUInt32BE (n) {\n    var bw = new BufferWriter()\n    bw.writeUInt32LE(n)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeUInt8 (n) {\n    writeU8LE(this, n)\n    return this\n  }\n\n  writeUInt64LEBN (bn) {\n    var buf = bn.toBuffer({ size: 8 })\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeUInt64BEBN (bn) {\n    var bw = new BufferWriter()\n    bw.writeUInt64LEBN(bn)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeVarintNum (n) {\n    writeVarint(this, n)\n    return this\n  }\n\n  writeInt32LE (n) {\n    writeI32LE(this, n)\n    return this\n  }\n\n  static varintBufNum (n) {\n    var bw = new BufferWriter()\n    bw.writeVarintNum(n)\n    return bw.toBuffer()\n  }\n\n  writeVarintBN (bn) {\n    var n = bn.toNumber()\n    if (n < 253) {\n      writeU8LE(this, n)\n    } else if (n < 0x10000) {\n      writeU8LE(this, 253)\n      writeU16LE(this, n)\n    } else if (n < 0x100000000) {\n      writeU8LE(this, 254)\n      writeU32LE(this, n)\n    } else {\n      var bw = new BufferWriter()\n      bw.writeUInt8(255)\n      bw.writeUInt64LEBN(bn)\n      var buf = bw.toBuffer()\n      this.write(buf)\n    }\n    return this\n  }\n}\n\nmodule.exports = BufferWriter\n","function writeU8LE (writer, n) {\n  if (n > 0xff) throw new Error('number too large')\n  const buffer = new Uint8Array(1)\n  buffer[0] = n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU8LE\n","function writeU16LE (writer, n) {\n  if (n > 0xffff) throw new Error('number too large')\n\n  const buffer = new Uint8Array(2)\n  buffer[0] = n % 256\n  n = n >> 8\n  buffer[1] = n % 256\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU16LE\n","function writeU32LE (writer, n) {\n  if (n > 0xffffffff) throw new Error('number too large')\n\n  const buffer = new Uint8Array(4)\n  buffer[0] = n % 256\n  n = Math.floor(n / 256)\n  buffer[1] = n % 256\n  n = n >> 8\n  buffer[2] = n % 256\n  n = n >> 8\n  buffer[3] = n\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU32LE\n","function writeI32LE (writer, n) {\n  if (n < -2147483648 || n > 2147483647) throw new Error('Out of range. It must be >= -2147483648 and <= 2147483647.')\n\n  const buffer = new Uint8Array(4)\n  buffer[0] = n % 256\n  n = Math.floor(n / 256)\n  buffer[1] = n % 256\n  n = n >> 8\n  buffer[2] = n % 256\n  n = n >> 8\n  buffer[3] = n\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeI32LE\n","function writeVarint (writer, n) {\n  if (n > Number.MAX_SAFE_INTEGER) throw new Error('varint too large')\n\n  if (n <= 0xfc) {\n    return writer.write([n])\n  }\n\n  if (n <= 0xffff) {\n    return writer.write([0xfd, n % 256, Math.floor(n / 256)])\n  }\n\n  if (n <= 0xffffffff) {\n    const buffer = new Uint8Array(5)\n    buffer[0] = 0xfe\n    buffer[1] = n % 256\n    n = Math.floor(n / 256)\n    buffer[2] = n % 256\n    n = Math.floor(n / 256)\n    buffer[3] = n % 256\n    n = Math.floor(n / 256)\n    buffer[4] = n\n    return writer.write(buffer)\n  }\n\n  // n <= 0xffffffffffffffff\n  const buffer = new Uint8Array(9)\n  buffer[0] = 0xff\n  buffer[1] = n % 256\n  n = Math.floor(n / 256)\n  buffer[2] = n % 256\n  n = Math.floor(n / 256)\n  buffer[3] = n % 256\n  n = Math.floor(n / 256)\n  buffer[4] = n % 256\n  n = Math.floor(n / 256)\n  buffer[5] = n % 256\n  n = Math.floor(n / 256)\n  buffer[6] = n % 256\n  n = Math.floor(n / 256)\n  buffer[7] = n % 256\n  n = Math.floor(n / 256)\n  buffer[8] = n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeVarint\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar JSUtil = require('./util/js')\n\nfunction Opcode (num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num)\n  }\n\n  var value\n\n  if (_.isNumber(num)) {\n    value = num\n  } else if (_.isString(num)) {\n    value = Opcode.map[num]\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof (num) + '\" for Opcode')\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  })\n\n  return this\n}\n\nOpcode.fromBuffer = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return new Opcode(Number('0x' + buf.toString('hex')))\n}\n\nOpcode.fromNumber = function (num) {\n  $.checkArgument(_.isNumber(num))\n  return new Opcode(num)\n}\n\nOpcode.fromString = function (str) {\n  $.checkArgument(_.isString(str))\n  var value = Opcode.map[str]\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr')\n  }\n  return new Opcode(value)\n}\n\nOpcode.prototype.toHex = function () {\n  return this.num.toString(16)\n}\n\nOpcode.prototype.toBuffer = function () {\n  return Buffer.from(this.toHex(), 'hex')\n}\n\nOpcode.prototype.toNumber = function () {\n  return this.num\n}\n\nOpcode.prototype.toString = function () {\n  var str = Opcode.reverseMap[this.num]\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation')\n  }\n  return str\n}\n\nOpcode.prototype.toSafeString = function () {\n  var str = Opcode.reverseMap[this.num]\n  if (typeof str === 'undefined') {\n    return this.toHex()\n  }\n  return str\n}\n\nOpcode.smallInt = function (n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number')\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16')\n  if (n === 0) {\n    return Opcode('OP_0')\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1)\n}\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SPLIT: 127,\n  OP_NUM2BIN: 128,\n  OP_BIN2NUM: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_CHECKSEQUENCEVERIFY: 178,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n}\n\nOpcode.reverseMap = []\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map)\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function (opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber()\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)))\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function () {\n  return '<Opcode: ' + this.toString() + ', hex: ' + this.toHex() + ', decimal: ' + this.num + '>'\n}\n\nmodule.exports = Opcode\n","function decodeScriptChunks (script) {\n  const chunks = []\n  let i = 0\n  let len = 0\n  while (i < script.length) {\n    const opcodenum = script[i]\n    i += 1\n    if (opcodenum === 0) {\n      len = opcodenum\n      chunks.push({ opcodenum: opcodenum, len })\n    } else if (opcodenum < 76) { // OP_PUSHDATA1\n      len = opcodenum\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + opcodenum), len })\n      i += opcodenum\n    } else if (opcodenum === 76) { // OP_PUSHDATA1\n      len = script[i]\n      i += 1\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else if (opcodenum === 77) { // OP_PUSHDATA2\n      len = script[i] | script[i + 1] << 8\n      i += 2\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else if (opcodenum === 78) { // OP_PUSHDATA4\n      len = script[i] + script[i + 1] * 0x0100 + script[i + 2] * 0x010000 + script[i + 3] * 0x01000000\n      i += 4\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else {\n      chunks.push({ opcodenum: opcodenum })\n    }\n  }\n  // if (i !== script.length) throw new Error('bad script')\n  return chunks\n}\n\nmodule.exports = decodeScriptChunks\n","const decodeHex = require('./decode-hex')\nconst opcodes = require('../opcode')\nconst BufferWriter = require('./bufferwriter')\nconst writePushData = require('../script/write-push-data')\n\nfunction decodeASM (script) {\n  const parts = script.split(' ')\n  const writer = new BufferWriter()\n  parts.forEach(part => {\n    if (part in opcodes) {\n      writer.write([opcodes[part]])\n    } else if (part === '0') {\n      writer.write([opcodes.OP_0])\n    } else if (part === '-1') {\n      writer.write([opcodes.OP_1NEGATE])\n    } else {\n      const buf = decodeHex(part)\n      writePushData(writer, buf)\n    }\n  })\n  return writer.toBuffer()\n}\n\nmodule.exports = decodeASM\n","/* global VARIANT */\n\nconst isHex = require('./is-hex')\n\n// Prefer our implementation of decodeHex over Buffer when we don't know the VARIANT\n// to avoid accidentally importing the Buffer shim in the browser.\n\nfunction decodeHex (hex) {\n  if (typeof hex !== 'string') throw new Error('not a string')\n\n  if (hex.startsWith('0x')) hex = hex.slice(2)\n\n  if (hex.length % 2 === 1) hex = '0' + hex\n\n  if (!isHex(hex)) throw new Error('invalid hex string in script')\n\n  if (typeof VARIANT === 'undefined' || VARIANT === 'browser') {\n    const length = hex.length / 2\n    const arr = new Uint8Array(length)\n    const isNaN = x => x !== x // eslint-disable-line no-self-compare\n    for (let i = 0; i < length; ++i) {\n      const byte = parseInt(hex.substr(i * 2, 2), 16)\n      if (isNaN(byte)) throw new Error('bad hex char')\n      arr[i] = byte\n    }\n    return arr\n  } else {\n    return Buffer.from(hex, 'hex')\n  }\n}\n\nmodule.exports = decodeHex\n","const HEX_REGEX = /^(?:[a-fA-F0-9][a-fA-F0-9])*$/\n\nfunction isHex (s) {\n  return HEX_REGEX.test(s)\n}\n\nmodule.exports = isHex\n","function writePushData (writer, buffer) {\n  // It is possible to optimize buffers that only store numbers 1-16, or -1, by using the OP_N opcodes.\n  // But we say \"push data\" is always stored using OP_0 or OP_PUSH(N) so that it's easy to identify and\n  // extract, and also because there is some ambiguity around OP_0 if we don't do this.\n  if (buffer.length === 0) {\n    writer.write([0])\n  } else if (buffer.length <= 75) {\n    writer.write([buffer.length]) // OP_PUSH(buffer.length)\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFF) {\n    writer.write([76, buffer.length]) // OP_PUSHDATA1\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFFFF) {\n    writer.write([77, buffer.length % 256, buffer.length >> 8]) // OP_PUSHDATA2\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFFFFFFFF) {\n    const prefix = new Uint8Array(5)\n    prefix[0] = 78 // OP_PUSHDATA4\n    let n = buffer.length\n    prefix[1] = n % 256\n    n = Math.floor(n / 256)\n    prefix[2] = n % 256\n    n = Math.floor(n / 256)\n    prefix[3] = n % 256\n    n = Math.floor(n / 256)\n    prefix[4] = n\n    writer.write(prefix)\n    writer.write(buffer)\n  } else {\n    throw new Error('data too large')\n  }\n  return writer\n}\n\nmodule.exports = writePushData\n","/* global VARIANT */\n\nlet encodeHex = null\n\n// Prefer our implementation of encodeHex over Buffer when we don't know the VARIANT\n// to avoid accidentally importing the Buffer shim in the browser.\n\nif (typeof VARIANT === 'undefined' || VARIANT === 'browser') {\n  // In the browser, a lookup table is fastest, and faster than the Buffer toString shim.\n  const HEX = [\n    '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f',\n    '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f',\n    '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f',\n    '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f',\n    '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f',\n    '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f',\n    '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f',\n    '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f',\n    '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f',\n    '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f',\n    'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af',\n    'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf',\n    'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf',\n    'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df',\n    'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef',\n    'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'\n  ]\n\n  encodeHex = function (buffer) {\n    const len = buffer.length\n    const out = new Array(len)\n    for (let i = 0; i < len; ++i) {\n      out[i] = HEX[buffer[i]]\n    }\n    return out.join('')\n  }\n} else {\n  // Buffer toString('hex') in Node is faster than any JavaScript we could write\n  encodeHex = function (buffer) {\n    return buffer instanceof Buffer ? buffer.toString('hex') : Buffer.from(buffer).toString('hex')\n  }\n}\n\nmodule.exports = encodeHex\n","'use strict'\n\nvar _ = require('../util/_')\n\nvar Script = require('./script')\nvar Opcode = require('../opcode')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar PublicKey = require('../publickey')\nvar Stack = require('./stack')\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter (obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj)\n  }\n  if (obj) {\n    this.initialize()\n    this.set(obj)\n  } else {\n    this.initialize()\n  }\n}\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n * @param {number} satoshisBN - amount in satoshis of the input to be verified (when FORKID signhash is used)\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function (scriptSig, scriptPubkey, tx, nin, flags, satoshisBN, sighashScript) {\n  var Transaction = require('../transaction')\n\n  if (_.isUndefined(tx)) {\n    tx = new Transaction()\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0\n  }\n\n  // If FORKID is enabled, we also ensure strict encoding.\n  if (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    flags |= Interpreter.SCRIPT_VERIFY_STRICTENC\n\n    // If FORKID is enabled, we need the input amount.\n    if (!satoshisBN) {\n      throw new Error('internal error - need satoshisBN to verify FORKID transactions')\n    }\n  }\n\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n  var stackCopy\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n    return false\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate('scriptSig')) {\n    return false\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.copy()\n  }\n\n  var stack = this.stack\n  this.initialize()\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n\n  // evaluate scriptPubkey\n  if (!this.evaluate('scriptPubkey')) {\n    return false\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT'\n    return false\n  }\n\n  var buf = this.stack.stacktop(-1)\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK'\n    return false\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n      return false\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty')\n    }\n\n    var redeemScriptSerialized = stackCopy.stacktop(-1)\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized)\n    stackCopy.pop()\n\n    this.initialize()\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags,\n      satoshisBN: satoshisBN\n    })\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK'\n      return false\n    }\n\n    if (!Interpreter.castToBool(stackCopy.stacktop(-1))) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK'\n      return false\n    }\n  }\n\n  // The CLEANSTACK check is only performed after potential P2SH evaluation,\n  // as the non-P2SH evaluation of a P2SH script will obviously not result in\n  // a clean stack (the P2SH inputs remain). The same holds for witness\n  // evaluation.\n  if ((flags & Interpreter.SCRIPT_VERIFY_CLEANSTACK) !== 0) {\n    // Disallow CLEANSTACK without P2SH, as otherwise a switch\n    // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a\n    // softfork (and P2SH should be one).\n    // if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) {\n    //   throw new Error('internal error - CLEANSTACK without P2SH')\n    // }\n\n    if (this.stack.length !== 1) {\n      this.errstr = 'SCRIPT_ERR_CLEANSTACK'\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = Interpreter\n\nInterpreter.prototype.initialize = function (obj) {\n  this.stack = new Stack([])\n  this.altstack = new Stack([])\n  this.pc = 0\n  this.pbegincodehash = 0\n  this.nOpCount = 0\n  this.vfExec = []\n  this.errstr = ''\n  this.flags = 0\n  // if OP_RETURN is found in executed branches after genesis is activated,\n  // we still have to check if the rest of the script is valid\n  this.nonTopLevelReturnAfterGenesis = false\n  this.returned = false\n}\n\nInterpreter.prototype.set = function (obj) {\n  this.script = obj.script || this.script\n  this.tx = obj.tx || this.tx\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin\n  this.satoshisBN = obj.satoshisBN || this.satoshisBN\n  this.stack = obj.stack || this.stack\n  this.altstack = obj.altstack || this.altstack\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount\n  this.vfExec = obj.vfExec || this.vfExec\n  this.errstr = obj.errstr || this.errstr\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags\n  this.sighashScript = obj.sighashScript || this.sighashScript\n}\n\nInterpreter.prototype.subscript = function () {\n  if (this.sighashScript) {\n    return this.sighashScript.clone()\n  } else {\n    // Subset of script starting at the most recent codeseparator\n    // CScript scriptCode(pbegincodehash, pend);\n    return Script.fromChunks(this.script.chunks.slice(this.pbegincodehash))\n  }\n}\n\nInterpreter.getTrue = () => Buffer.from([1])\nInterpreter.getFalse = () => Buffer.from([])\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520\nInterpreter.MAXIMUM_ELEMENT_SIZE = 4\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD)\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0)\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1)\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2)\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3)\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4)\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5)\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6)\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7)\n\n// Require that only a single stack element remains after evaluation. This\n// changes the success criterion from \"At least one stack element must\n// remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n// one stack element must remain, and when interpreted as a boolean, it must\n// be true\".\n// (softfork safe, BIP62 rule 6)\n// Note: CLEANSTACK should never be used without P2SH or WITNESS.\nInterpreter.SCRIPT_VERIFY_CLEANSTACK = (1 << 8)\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9)\n\n// support CHECKSEQUENCEVERIFY opcode\n//\n// See BIP112 for details\nInterpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1 << 10)\n\n// Segwit script only: Require the argument of OP_IF/NOTIF to be exactly\n// 0x01 or empty vector\n//\nInterpreter.SCRIPT_VERIFY_MINIMALIF = (1 << 13)\n\n// Signature(s) must be empty vector if an CHECK(MULTI)SIG operation failed\n//\nInterpreter.SCRIPT_VERIFY_NULLFAIL = (1 << 14)\n\n// Public keys in scripts must be compressed\nInterpreter.SCRIPT_VERIFY_COMPRESSED_PUBKEYTYPE = (1 << 15)\n\n// Do we accept signature using SIGHASH_FORKID\n//\nInterpreter.SCRIPT_ENABLE_SIGHASH_FORKID = (1 << 16)\n\n// Do we accept activate replay protection using a different fork id.\n//\nInterpreter.SCRIPT_ENABLE_REPLAY_PROTECTION = (1 << 17)\n\n// Enable new opcodes.\n//\nInterpreter.SCRIPT_ENABLE_MONOLITH_OPCODES = (1 << 18)\n\n// Are the Magnetic upgrade opcodes enabled?\n//\nInterpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES = (1 << 19)\n\n/* Below flags apply in the context of BIP 68 */\n/**\n * If this flag set, CTxIn::nSequence is NOT interpreted as a relative\n * lock-time.\n */\nInterpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time and this flag is set,\n * the relative lock-time has units of 512 seconds, otherwise it specifies\n * blocks with a granularity of 1.\n */\nInterpreter.SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time, this mask is applied to\n * extract that lock-time from the sequence field.\n */\nInterpreter.SEQUENCE_LOCKTIME_MASK = 0x0000ffff\n\nInterpreter.MAX_SCRIPT_SIZE = Number.MAX_SAFE_INTEGER\n\nInterpreter.MAX_OPCODE_COUNT = Number.MAX_SAFE_INTEGER\n\nInterpreter.DEFAULT_FLAGS =\n  // Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CLEANSTACK | // no longer applies now p2sh is deprecated: cleanstack only applies to p2sh\n  Interpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES | Interpreter.SCRIPT_ENABLE_MONOLITH_OPCODES | // TODO: to be removed after upgrade to bsv 2.0\n  Interpreter.SCRIPT_VERIFY_STRICTENC |\n  Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_NULLFAIL |\n  Interpreter.SCRIPT_VERIFY_DERSIG |\n  Interpreter.SCRIPT_VERIFY_MINIMALDATA | Interpreter.SCRIPT_VERIFY_NULLDUMMY |\n  Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |\n  Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY | Interpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY | Interpreter.SCRIPT_VERIFY_CLEANSTACK\n\nInterpreter.castToBool = function (buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function (buf) {\n  var sig\n\n  // Empty signature. Not strictly DER encoded, but allowed to provide a\n  // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n  if (buf.length === 0) {\n    return true\n  }\n\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT'\n    return false\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S'\n      return false\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE'\n      return false\n    }\n\n    if (!(this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      (sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n      return false\n    }\n\n    if ((this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      !(sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_MUST_USE_FORKID'\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function (buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE'\n    return false\n  }\n  return true\n}\n\n/**\n  *\n  * Check the buffer is minimally encoded (see https://github.com/bitcoincashorg/spec/blob/master/may-2018-reenabled-opcodes.md#op_bin2num)\n  *\n  *\n  */\n\nInterpreter._isMinimallyEncoded = function (buf, nMaxNumSize) {\n  nMaxNumSize = nMaxNumSize || Interpreter.MAXIMUM_ELEMENT_SIZE\n  if (buf.length > nMaxNumSize) {\n    return false\n  }\n\n  if (buf.length > 0) {\n    // Check that the number is encoded with the minimum possible number\n    // of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set it\n      // would conflict with the sign bit. An example of this case is\n      // +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n  *\n  * minimally encode the buffer content\n  *\n  * @param {number} nMaxNumSize (max allowed size)\n  */\nInterpreter._minimallyEncode = function (buf) {\n  if (buf.length === 0) {\n    return buf\n  }\n\n  // If the last byte is not 0x00 or 0x80, we are minimally encoded.\n  var last = buf[buf.length - 1]\n  if (last & 0x7f) {\n    return buf\n  }\n\n  // If the script is one byte long, then we have a zero, which encodes as an\n  // empty array.\n  if (buf.length === 1) {\n    return Buffer.from('')\n  }\n\n  // If the next byte has it sign bit set, then we are minimaly encoded.\n  if (buf[buf.length - 2] & 0x80) {\n    return buf\n  }\n\n  // We are not minimally encoded, we need to figure out how much to trim.\n  for (var i = buf.length - 1; i > 0; i--) {\n    // We found a non zero byte, time to encode.\n    if (buf[i - 1] !== 0) {\n      if (buf[i - 1] & 0x80) {\n        // We found a byte with it sign bit set so we need one more\n        // byte.\n        buf[i++] = last\n      } else {\n        // the sign bit is clear, we can use it.\n        buf[i - 1] |= last\n      }\n\n      return buf.slice(0, i)\n    }\n  }\n\n  // If we found the whole thing is zeros, then we have a zero.\n  return Buffer.from('')\n}\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function (scriptType) {\n  // TODO: script size should be configurable. no magic numbers\n  if (this.script.toBuffer().length > Interpreter.MAX_SCRIPT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE'\n    return false\n  }\n\n  try {\n    while (!this.returned && this.pc < this.script.chunks.length) {\n      // fExec: if the opcode will be executed, i.e., not in a false branch\n      let thisStep = { pc: this.pc, fExec: (this.vfExec.indexOf(false) === -1), opcode: Opcode.fromNumber(this.script.chunks[this.pc].opcodenum) }\n\n      var fSuccess = this.step(scriptType)\n\n      this._callbackStep(thisStep)\n\n      if (!fSuccess) {\n        return false\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE'\n      return false\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e\n    return false\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n    return false\n  }\n\n  return true\n}\n\nInterpreter.prototype._callbackStep = function (thisStep) {\n  if (typeof this.stepListener === 'function') {\n    try {\n      this.stepListener(thisStep)\n    } catch (err) {\n      console.log(`Error in Step callback:${err}`)\n    }\n  }\n}\n\n/**\n * call to update stackvar\n * @param {*} stack\n */\nInterpreter.prototype._callbackStack = function (stack, pc, scriptType) {\n  if (typeof this.stackListener === 'function') {\n    try {\n      this.stackListener(stack, pc, scriptType)\n    } catch (err) {\n      var chunk = this.script.chunks[pc]\n      console.error(`Error: ${err} in _updateStack pc: ${pc}, opcode ${Opcode.fromNumber(chunk.opcodenum).toSafeString()}`)\n    }\n  }\n}\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function (nLockTime) {\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime < Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (this.tx.inputs[this.nin].isFinal()) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Checks a sequence parameter with the transaction's sequence.\n * @param {BN} nSequence the sequence read from the script\n * @return {boolean} true if the transaction's sequence is less than or equal to\n *                   the transaction's sequence\n */\nInterpreter.prototype.checkSequence = function (nSequence) {\n  // Relative lock times are supported by comparing the passed in operand to\n  // the sequence number of the input.\n  var txToSequence = this.tx.inputs[this.nin].sequenceNumber\n\n  // Fail if the transaction's version number is not set high enough to\n  // trigger BIP 68 rules.\n  if (this.tx.version < 2) {\n    return false\n  }\n\n  // Sequence numbers with their most significant bit set are not consensus\n  // constrained. Testing that the transaction's sequence number do not have\n  // this bit set prevents using this property to get around a\n  // CHECKSEQUENCEVERIFY check.\n  if (txToSequence & Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n    return false\n  }\n\n  // Mask off any bits that do not have consensus-enforced meaning before\n  // doing the integer comparisons\n  var nLockTimeMask =\n    Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG | Interpreter.SEQUENCE_LOCKTIME_MASK\n  var txToSequenceMasked = new BN(txToSequence & nLockTimeMask)\n  var nSequenceMasked = nSequence.and(nLockTimeMask)\n\n  // There are two kinds of nSequence: lock-by-blockheight and\n  // lock-by-blocktime, distinguished by whether nSequenceMasked <\n  // CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n  //\n  // We want to compare apples to apples, so fail the script unless the type\n  // of nSequenceMasked being tested is the same as the nSequenceMasked in the\n  // transaction.\n  var SEQUENCE_LOCKTIME_TYPE_FLAG_BN = new BN(Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG)\n\n  if (!((txToSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n    nSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)) ||\n    (txToSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n      nSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)))) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the comparison is a\n  // simple numeric one.\n  if (nSequenceMasked.gt(txToSequenceMasked)) {\n    return false\n  }\n  return true\n}\n\nfunction padBufferToSize (buf, len) {\n  let b = buf\n  while (b.length < len) {\n    b = Buffer.concat([Buffer.from([0x00]), b])\n  }\n  return b\n}\n\n/**\n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function (scriptType) {\n  var self = this\n\n  function stacktop (i) {\n    return self.stack.stacktop(i)\n  }\n\n  function vartop (i) {\n    return self.stack.vartop(i)\n  }\n\n  function isOpcodeDisabled (opcode) {\n    switch (opcode) {\n      case Opcode.OP_2MUL:\n      case Opcode.OP_2DIV:\n\n        // Disabled opcodes.\n        return true\n\n      case Opcode.OP_INVERT:\n      case Opcode.OP_MUL:\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES) === 0) {\n          return true\n        }\n        break\n      case Opcode.OP_DIV:\n      case Opcode.OP_MOD:\n      case Opcode.OP_SPLIT:\n      case Opcode.OP_CAT:\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n      case Opcode.OP_BIN2NUM:\n      case Opcode.OP_NUM2BIN:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MONOLITH_OPCODES) === 0) {\n          return true\n        }\n        break\n      default:\n        break\n    }\n\n    return false\n  }\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0\n\n  // bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript\n  var sig, pubkey\n  var fValue, fSuccess\n  var var1, var2, var3\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc]\n  this.pc++\n  var opcodenum = chunk.opcodenum\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE'\n    return false\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n    return false\n  }\n\n  // Do not execute instructions if Genesis OP_RETURN was found in executed branches.\n  var fExec = (this.vfExec.indexOf(false) === -1) && (!this.nonTopLevelReturnAfterGenesis || opcodenum === Opcode.OP_RETURN)\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > Interpreter.MAX_OPCODE_COUNT) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT'\n    return false\n  }\n\n  if (isOpcodeDisabled(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE'\n    return false\n  }\n\n  if (fExec && opcodenum >= 0 && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA'\n      return false\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.getFalse())\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error(`Length of push value not equal to length of data (${chunk.len},${chunk.buf.length})`)\n    } else {\n      this.stack.push(chunk.buf)\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        // ( -- value)\n        // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n        n = opcodenum - (Opcode.OP_1 - 1)\n        buf = new BN(n).toScriptNumBuffer()\n        this.stack.push(buf)\n        // The result of these opcodes should always be the minimal way to push the data\n        // they push, so no need for a CheckMinimalPush here.\n        break\n\n      //\n      // Control\n      //\n      case Opcode.OP_NOP:\n        break\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack.stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP3:\n      case Opcode.OP_CHECKSEQUENCEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n          // not enabled; treat as a NOP3\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // nSequence, like nLockTime, is a 32-bit unsigned\n        // integer field. See the comment in CHECKLOCKTIMEVERIFY\n        // regarding 5-byte numeric operands.\n\n        var nSequence = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKSEQUENCEVERIFY.\n        if (nSequence.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // To provide for future soft-fork extensibility, if the\n        // operand has the disabled lock-time flag set,\n        // CHECKSEQUENCEVERIFY behaves as a NOP.\n        if ((nSequence &\n          Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) !== 0) {\n          break\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkSequence(nSequence)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n          this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n          return false\n        }\n        break\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        // <expression> if [statements] [else [statements]] endif\n        // bool fValue = false;\n        fValue = false\n        if (fExec) {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n            return false\n          }\n          buf = stacktop(-1)\n\n          if (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALIF) {\n            if (buf.length > 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n            if (buf.length === 1 && buf[0] !== 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n          }\n          fValue = Interpreter.castToBool(buf)\n          if (opcodenum === Opcode.OP_NOTIF) {\n            fValue = !fValue\n          }\n          this.stack.pop()\n        }\n        this.vfExec.push(fValue)\n        break\n\n      case Opcode.OP_ELSE:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1]\n        break\n\n      case Opcode.OP_ENDIF:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec.pop()\n        break\n\n      case Opcode.OP_VERIFY:\n        // (true -- ) or\n        // (false -- false) and return\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          this.stack.pop()\n        } else {\n          this.errstr = 'SCRIPT_ERR_VERIFY'\n          return false\n        }\n        break\n\n      case Opcode.OP_RETURN:\n\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) { // utxo_after_genesis\n          if (this.vfExec.length === 0) {\n            // Terminate the execution as successful. The remaining of the script does not affect the validity (even in\n            // presence of unbalanced IFs, invalid opcodes etc)\n            this.returned = true\n            return true\n          }\n          // op_return encountered inside if statement after genesis --> check for invalid grammar\n          this.nonTopLevelReturnAfterGenesis = true\n        } else {\n          return false\n        }\n\n        break\n\n      //\n      // Stack ops\n      //\n      case Opcode.OP_TOALTSTACK:\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.altstack.push(this.stack.pop(), var1)\n        break\n\n      case Opcode.OP_FROMALTSTACK:\n        if (this.altstack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION'\n          return false\n        }\n        const varAlt = this.altstack.vartop(-1)\n        this.stack.push(this.altstack.pop(), varAlt)\n        break\n\n      case Opcode.OP_2DROP:\n        // (x1 x2 -- )\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        this.stack.pop()\n        break\n\n      case Opcode.OP_2DUP:\n        // (x1 x2 -- x1 x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_3DUP:\n        // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-3)\n        buf2 = stacktop(-2)\n        var buf3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        this.stack.push(Buffer.from(buf3), `$${var3}`)\n        break\n\n      case Opcode.OP_2OVER:\n        // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-4)\n        buf2 = stacktop(-3)\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_2ROT:\n        // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n        if (this.stack.length < 6) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-6)\n        var2 = vartop(-5)\n\n        spliced = this.stack.splice(this.stack.length - 6, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_2SWAP:\n        // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        spliced = this.stack.splice(this.stack.length - 4, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_IFDUP:\n        // (x - 0 | x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          var1 = vartop(-1)\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n        break\n\n      case Opcode.OP_DEPTH:\n        // -- stacksize\n        buf = new BN(this.stack.length).toScriptNumBuffer()\n        this.stack.push(buf, '$depth')\n        break\n\n      case Opcode.OP_DROP:\n        // (x -- )\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        break\n\n      case Opcode.OP_DUP:\n        // (x -- x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.stack.push(Buffer.from(stacktop(-1)), `$${var1}`)\n        break\n\n      case Opcode.OP_NIP:\n        // (x1 x2 -- x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.splice(this.stack.length - 2, 1)\n        break\n\n      case Opcode.OP_OVER:\n        // (x1 x2 -- x1 x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var2 = vartop(-2)\n        this.stack.push(Buffer.from(stacktop(-2)), `$${var2}`)\n        break\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n        // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal, 4)\n        n = bn.toNumber()\n        this.stack.pop()\n        if (n < 0 || n >= this.stack.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-n - 1)\n        var1 = vartop(-n - 1)\n        if (opcodenum === Opcode.OP_ROLL) {\n          this.stack.splice(this.stack.length - n - 1, 1)\n          this.stack.push(Buffer.from(buf), var1)\n        } else {\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n\n        break\n\n      case Opcode.OP_ROT:\n        // (x1 x2 x3 -- x2 x3 x1)\n        //  x2 x1 x3  after first swap\n        //  x2 x3 x1  after second swap\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-3)\n        x2 = stacktop(-2)\n        var x3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.write(-3, x2)\n        this.stack.write(-2, x3)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var3, var2])\n        break\n\n      case Opcode.OP_SWAP:\n        // (x1 x2 -- x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-2)\n        x2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.write(-2, x2)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var2])\n        break\n\n      case Opcode.OP_TUCK:\n        // (x1 x2 -- x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n\n        this.stack.splice(this.stack.length - 2, 0, Buffer.from(stacktop(-1)))\n        this.stack.updateTopVars([var2, var1, `$${var2}`])\n        break\n\n      case Opcode.OP_SIZE:\n        // (in -- in size)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn = new BN(stacktop(-1).length)\n        this.stack.push(bn.toScriptNumBuffer(), `$size`)\n        break\n\n      //\n      // Bitwise logic\n      //\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n        // (x1 x2 - out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n\n        // Inputs must be the same size\n        if (buf1.length !== buf2.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_OPERAND_SIZE'\n          return false\n        }\n\n        // To avoid allocating, we modify vch1 in place.\n        switch (opcodenum) {\n          case Opcode.OP_AND:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] &= buf2[i]\n            }\n            break\n          case Opcode.OP_OR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] |= buf2[i]\n            }\n            break\n          case Opcode.OP_XOR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] ^= buf2[i]\n            }\n            break\n          default:\n            break\n        }\n\n        // And pop vch2.\n        this.stack.pop()\n        break\n\n      case Opcode.OP_INVERT:\n        // (x -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n        }\n        buf = stacktop(-1)\n        for (let i = 0; i < buf.length; i++) {\n          buf[i] = ~buf[i]\n        }\n        break\n\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // (x n -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        if (buf1.length === 0) {\n          this.stack.pop()\n        } else {\n          bn1 = new BN(buf1)\n          bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 4)\n          n = bn2.toNumber()\n          if (n < 0) {\n            this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n            return false\n          }\n          this.stack.pop()\n          this.stack.pop()\n          let shifted\n          if (opcodenum === Opcode.OP_LSHIFT) {\n            shifted = bn1.ushln(n)\n          }\n          if (opcodenum === Opcode.OP_RSHIFT) {\n            shifted = bn1.ushrn(n)\n          }\n          // bitcoin client implementation of l/rshift is unconventional, therefore this implementation is a bit unconventional\n          // bn library has shift functions however it expands the carried bits into a new byte\n          // in contrast to the bitcoin client implementation which drops off the carried bits\n          // in other words, if operand was 1 byte then we put 1 byte back on the stack instead of expanding to more shifted bytes\n          let bufShifted = padBufferToSize(Buffer.from(shifted.toArray().slice(buf1.length * -1)), buf1.length)\n          this.stack.push(bufShifted)\n        }\n        break\n\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        // case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        // (x1 x2 - bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var fEqual = buf1.toString('hex') === buf2.toString('hex')\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fEqual ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_EQUALVERIFY) {\n          if (fEqual) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_EQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Numeric\n      //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal)\n        switch (opcodenum) {\n          case Opcode.OP_1ADD:\n            bn = bn.add(BN.One)\n            break\n          case Opcode.OP_1SUB:\n            bn = bn.sub(BN.One)\n            break\n          case Opcode.OP_NEGATE:\n            bn = bn.neg()\n            break\n          case Opcode.OP_ABS:\n            if (bn.cmp(BN.Zero) < 0) {\n              bn = bn.neg()\n            }\n            break\n          case Opcode.OP_NOT:\n            bn = new BN((bn.cmp(BN.Zero) === 0) + 0)\n            break\n          case Opcode.OP_0NOTEQUAL:\n            bn = new BN((bn.cmp(BN.Zero) !== 0) + 0)\n            break\n          // default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n        break\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_MUL:\n      case Opcode.OP_MOD:\n      case Opcode.OP_DIV:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        // (x1 x2 -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        bn = new BN(0)\n\n        switch (opcodenum) {\n          case Opcode.OP_ADD:\n            bn = bn1.add(bn2)\n            break\n\n          case Opcode.OP_SUB:\n            bn = bn1.sub(bn2)\n            break\n\n          case Opcode.OP_MUL:\n            bn = bn1.mul(bn2)\n            break\n\n          case Opcode.OP_DIV:\n            // denominator must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.div(bn2)\n            break\n\n          case Opcode.OP_MOD:\n            // divisor must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.mod(bn2)\n            break\n\n          case Opcode.OP_BOOLAND:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_BOOLOR:        bn = (bn1 !== bnZero || bn2 !== bnZero); break;\n          case Opcode.OP_BOOLOR:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_NUMEQUAL:      bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUAL:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUALVERIFY:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 !== bn2); break;\n          case Opcode.OP_NUMNOTEQUAL:\n            bn = new BN((bn1.cmp(bn2) !== 0) + 0)\n            break\n          // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n          case Opcode.OP_LESSTHAN:\n            bn = new BN((bn1.cmp(bn2) < 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n          case Opcode.OP_GREATERTHAN:\n            bn = new BN((bn1.cmp(bn2) > 0) + 0)\n            break\n          // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n          case Opcode.OP_LESSTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) <= 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n          case Opcode.OP_GREATERTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) >= 0) + 0)\n            break\n          case Opcode.OP_MIN:\n            bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2)\n            break\n          case Opcode.OP_MAX:\n            bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2)\n            break\n          // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n\n        if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n          // if (CastToBool(stacktop(-1)))\n          if (Interpreter.castToBool(stacktop(-1))) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_WITHIN:\n        // (x min max -- out)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-3), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        var bn3 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        // bool fValue = (bn2 <= bn1 && bn1 < bn3);\n        fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0)\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fValue ? Interpreter.getTrue() : Interpreter.getFalse())\n        break\n\n      //\n      // Crypto\n      //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        // (in -- hash)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        // valtype vchHash((opcode === Opcode.OP_RIPEMD160 ||\n        //                 opcode === Opcode.OP_SHA1 || opcode === Opcode.OP_HASH160) ? 20 : 32);\n        var bufHash\n        if (opcodenum === Opcode.OP_RIPEMD160) {\n          bufHash = Hash.ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_SHA1) {\n          bufHash = Hash.sha1(buf)\n        } else if (opcodenum === Opcode.OP_SHA256) {\n          bufHash = Hash.sha256(buf)\n        } else if (opcodenum === Opcode.OP_HASH160) {\n          bufHash = Hash.sha256ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_HASH256) {\n          bufHash = Hash.sha256sha256(buf)\n        }\n        this.stack.pop()\n        this.stack.push(bufHash)\n        break\n\n      case Opcode.OP_CODESEPARATOR:\n        // Hash starts after the code separator\n        this.pbegincodehash = this.pc\n        break\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        // (sig pubkey -- bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        bufSig = stacktop(-2)\n        bufPubkey = stacktop(-1)\n\n        if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        // CScript scriptCode(pbegincodehash, pend);\n        subscript = this.subscript()\n\n        // Drop the signature, since there's no way for a signature to sign itself\n        var tmpScript = new Script().add(bufSig)\n        subscript.findAndDelete(tmpScript)\n\n        try {\n          sig = Signature.fromTxFormat(bufSig)\n          pubkey = PublicKey.fromBuffer(bufPubkey, false)\n\n          fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n        } catch (e) {\n          // invalid sig or pubkey\n          fSuccess = false\n        }\n\n        if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n          bufSig.length) {\n          this.errstr = 'SCRIPT_ERR_NULLFAIL'\n          return false\n        }\n\n        this.stack.pop()\n        this.stack.pop()\n\n        // stack.push_back(fSuccess ? vchTrue : vchFalse);\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n        var i = 1\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nKeysCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        // TODO: Keys and opcount are parameterized in client. No magic numbers!\n        if (nKeysCount < 0 || nKeysCount > 20) {\n          this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT'\n          return false\n        }\n        this.nOpCount += nKeysCount\n        if (this.nOpCount > Interpreter.MAX_OPCODE_COUNT) {\n          this.errstr = 'SCRIPT_ERR_OP_COUNT'\n          return false\n        }\n        // int ikey = ++i;\n        var ikey = ++i\n        i += nKeysCount\n\n        // ikey2 is the position of last non-signature item in\n        // the stack. Top stack item = 1. With\n        // SCRIPT_VERIFY_NULLFAIL, this is used for cleanup if\n        // operation fails.\n        var ikey2 = nKeysCount + 2\n\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nSigsCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n          this.errstr = 'SCRIPT_ERR_SIG_COUNT'\n          return false\n        }\n        // int isig = ++i;\n        var isig = ++i\n        i += nSigsCount\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        subscript = this.subscript()\n\n        // Drop the signatures, since there's no way for a signature to sign itself\n        for (var k = 0; k < nSigsCount; k++) {\n          bufSig = stacktop(-isig - k)\n          subscript.findAndDelete(new Script().add(bufSig))\n        }\n\n        fSuccess = true\n        while (fSuccess && nSigsCount > 0) {\n          // valtype& vchSig  = stacktop(-isig);\n          bufSig = stacktop(-isig)\n          // valtype& vchPubKey = stacktop(-ikey);\n          bufPubkey = stacktop(-ikey)\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false\n          }\n\n          var fOk\n          try {\n            sig = Signature.fromTxFormat(bufSig)\n            pubkey = PublicKey.fromBuffer(bufPubkey, false)\n            fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n          } catch (e) {\n            // invalid sig or pubkey\n            fOk = false\n          }\n\n          if (fOk) {\n            isig++\n            nSigsCount--\n          }\n          ikey++\n          nKeysCount--\n\n          // If there are more signatures left than keys left,\n          // then too many signatures have failed\n          if (nSigsCount > nKeysCount) {\n            fSuccess = false\n          }\n        }\n\n        // Clean up stack of actual arguments\n        while (i-- > 1) {\n          if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n            !ikey2 && stacktop(-1).length) {\n            this.errstr = 'SCRIPT_ERR_NULLFAIL'\n            return false\n          }\n\n          if (ikey2 > 0) {\n            ikey2--\n          }\n\n          this.stack.pop()\n        }\n\n        // A bug causes CHECKMULTISIG to consume one extra argument\n        // whose contents were not checked in any way.\n        //\n        // Unfortunately this is a potential source of mutability,\n        // so optionally verify it is exactly equal to zero prior\n        // to removing it from the stack.\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && stacktop(-1).length) {\n          this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY'\n          return false\n        }\n        this.stack.pop()\n\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n\n        if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Byte string operations\n      //\n      case Opcode.OP_CAT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        if (buf1.length + buf2.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n        this.stack.write(-2, Buffer.concat([buf1, buf2]))\n        this.stack.pop()\n        break\n\n      case Opcode.OP_SPLIT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n\n        // Make sure the split point is apropriate.\n        var position = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (position < 0 || position > buf1.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_SPLIT_RANGE'\n          return false\n        }\n\n        // Prepare the results in their own buffer as `data`\n        // will be invalidated.\n        // Copy buffer data, to slice it before\n        var n1 = Buffer.from(buf1)\n\n        // Replace existing stack values by the new values.\n        this.stack.write(-2, n1.slice(0, position))\n        this.stack.write(-1, n1.slice(position))\n        break\n\n      //\n      // Conversion operations\n      //\n      case Opcode.OP_NUM2BIN:\n        // (in -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var size = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (size > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n\n        this.stack.pop()\n        var rawnum = stacktop(-1)\n\n        // Try to see if we can fit that number in the number of\n        // byte requested.\n        rawnum = Interpreter._minimallyEncode(rawnum)\n\n        if (rawnum.length > size) {\n          // We definitively cannot.\n          this.errstr = 'SCRIPT_ERR_IMPOSSIBLE_ENCODING'\n          return false\n        }\n\n        // We already have an element of the right size, we\n        // don't need to do anything.\n        if (rawnum.length === size) {\n          this.stack.write(-1, rawnum)\n          break\n        }\n\n        var signbit = 0x00\n        if (rawnum.length > 0) {\n          signbit = rawnum[rawnum.length - 1] & 0x80\n          rawnum[rawnum.length - 1] &= 0x7f\n        }\n\n        var num = Buffer.alloc(size)\n        rawnum.copy(num, 0)\n\n        var l = rawnum.length - 1\n        while (l++ < size - 2) {\n          num[l] = 0x00\n        }\n\n        num[l] = signbit\n\n        this.stack.write(-1, num)\n        break\n\n      case Opcode.OP_BIN2NUM:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-1)\n        buf2 = Interpreter._minimallyEncode(buf1)\n\n        this.stack.write(-1, buf2)\n\n        // The resulting number must be a valid number.\n        if (!Interpreter._isMinimallyEncoded(buf2)) {\n          this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n          return false\n        }\n        break\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE'\n        return false\n    }\n  }\n\n  // only when next opcode is evaluate opcode, we update stack\n  if (this.vfExec.indexOf(false) === -1) {\n    this._callbackStack(this.stack, this.pc, scriptType)\n  }\n\n  return true\n}\n","'use strict'\n\nvar Stack = function Stack (rawstack, varStack) {\n  this.stack = rawstack\n  this.varStack = varStack || []\n}\n\nmodule.exports = Stack\n\nStack.prototype.pushVar = function (varName) {\n  this.varStack.push(varName || '$tmp')\n}\n\nStack.prototype.popVar = function () {\n  this.varStack.pop()\n}\n\nStack.prototype.push = function (n, varName) {\n  this.pushVar(varName)\n  this.stack.push(n)\n  this.checkConsistency()\n}\n\nStack.prototype.pop = function () {\n  this.popVar()\n  let top = this.stack.pop()\n  this.checkConsistency()\n  return top\n}\n\nStack.prototype.updateTopVars = function (vars) {\n  if (vars.length > this.varStack.length) {\n    throw new Error(`updateTopVars fail, stack: ${this.stack.length},  varStack: ${this.varStack.length}, vars:${vars.length}`)\n  }\n  vars = vars.reverse()\n  this.varStack.splice(this.varStack.length - vars.length, vars.length, ...vars)\n}\n\nStack.prototype.stacktop = function (i) {\n  return this.stack[this.stack.length + i]\n}\n\nStack.prototype.vartop = function (i) {\n  return this.varStack[this.varStack.length + i]\n}\n\nStack.prototype.slice = function (start, end) {\n  return this.stack.slice(start, end)\n}\n\nStack.prototype.splice = function (start, deleteCount, ...items) {\n  this.varStack.splice(start, deleteCount, ...items)\n  return this.stack.splice(start, deleteCount, ...items)\n}\n\nStack.prototype.write = function (i, value) {\n  this.stack[this.stack.length + i] = value\n}\n\nStack.prototype.copy = function () {\n  return new Stack(this.stack.slice() || [], this.varStack.slice() || [])\n}\n\nfunction bytesToHexString (bytearray) {\n  return bytearray.reduce(function (o, c) {\n    o += ('0' + (c & 0xFF).toString(16)).slice(-2)\n    return o\n  }, '')\n}\n\nStack.prototype.printVarStack = function () {\n  let array = this.varStack.map((v, i) => ({\n    name: v,\n    value: bytesToHexString(this.rawstack[i].data)\n  }))\n  console.log(JSON.stringify(array, null, 4))\n}\n\nStack.prototype.checkConsistency = function () {\n  if (this.stack.length !== this.varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistency fail, stack: ${this.stack.length}, varStack:${this.varStack.length}`)\n  }\n}\n\nStack.prototype.checkConsistencyWithVars = function (varStack) {\n  if (this.stack.length < varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistencyWithVars fail, stack: ${this.stack.length}, varStack:${varStack.length}`)\n  }\n}\n\nObject.defineProperty(Stack.prototype, 'length', {\n  get: function () {\n    return this.stack.length\n  }\n})\n\nObject.defineProperty(Stack.prototype, 'rawstack', {\n  get: function () {\n    return this.stack\n  }\n})\n","module.exports = require('./transaction')\n\nmodule.exports.Input = require('./input')\nmodule.exports.Output = require('./output')\nmodule.exports.UnspentOutput = require('./unspentoutput')\nmodule.exports.Signature = require('./signature')\nmodule.exports.Sighash = require('./sighash')\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\n\nvar errors = require('../errors')\nvar JSUtil = require('../util/js')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar Sighash = require('./sighash')\n\nvar Address = require('../address')\nvar UnspentOutput = require('./unspentoutput')\nvar Input = require('./input')\nvar PublicKeyHashInput = Input.PublicKeyHash\nvar PublicKeyInput = Input.PublicKey\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash\nvar MultiSigInput = Input.MultiSig\nvar Output = require('./output')\nvar Script = require('../script')\nvar PrivateKey = require('../privatekey')\nvar BN = require('../crypto/bn')\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction (serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized)\n  }\n  this.inputs = []\n  this.outputs = []\n  this._inputAmount = undefined\n  this._outputAmount = undefined\n  this._inputsMap = new Map()\n  this._outputsMap = new Map()\n  this._privateKey = undefined\n  this._sigType = undefined\n  this.sealed = false\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized)\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized)\n    } else if (Buffer.isBuffer(serialized)) {\n      this.fromBuffer(serialized)\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized)\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction')\n    }\n  } else {\n    this._newTransaction()\n  }\n}\n\nvar CURRENT_VERSION = 1\nvar DEFAULT_NLOCKTIME = 0\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 1\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 150\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 50\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4\n\n/**\n * a dummy privatekey\n */\nTransaction.DUMMY_PRIVATEKEY = PrivateKey.fromWIF('cQ3nCBQB9RsFSyjNQM15NQLVpXXMtWh9PUyeFz5KxLJCHsuRH2Su')\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function (transaction) {\n  var copy = new Transaction(transaction.toBuffer())\n  return copy\n}\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    this._hash = new BufferReader(this._getHash()).readReverse().toString('hex')\n    return this._hash\n  }\n}\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty)\nObject.defineProperty(Transaction.prototype, 'id', hashProperty)\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._getInputAmount()\n  }\n}\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty)\nioProperty.get = function () {\n  return this._getOutputAmount()\n}\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty)\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function () {\n  return Hash.sha256sha256(this.toBuffer())\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function (unsafe) {\n  if (unsafe === true || (unsafe && unsafe.disableAll)) {\n    return this.uncheckedSerialize()\n  } else {\n    return this.checkedSerialize(unsafe)\n  }\n}\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function (opts) {\n  var serializationError = this.getSerializationError(opts)\n  if (serializationError) {\n    serializationError.message += ' - For more information please see: ' +\n      'https://bsv.io/api/lib/transaction#serialization-checks'\n    throw serializationError\n  }\n  return this.uncheckedSerialize()\n}\n\nTransaction.prototype.invalidSatoshis = function () {\n  var invalid = false\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true\n    }\n  }\n  return invalid\n}\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bsv.Error}\n */\nTransaction.prototype.getSerializationError = function (opts) {\n  opts = opts || {}\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis()\n  }\n\n  var unspent = this.getUnspentValue()\n  var unspentError\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum()\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent)\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts)\n}\n\nTransaction.prototype._hasFeeError = function (opts, unspent) {\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    )\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee())\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        )\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      )\n    }\n  }\n}\n\nTransaction.prototype._missingChange = function () {\n  return !this._changeScript\n}\n\nTransaction.prototype._hasDustOutputs = function (opts) {\n  if (opts.disableDustOutputs) {\n    return\n  }\n  var index, output\n  for (index in this.outputs) {\n    output = this.outputs[index]\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut() && !output.script.isSafeDataOut()) {\n      return new errors.Transaction.DustOutputs()\n    }\n  }\n}\n\nTransaction.prototype._isMissingSignatures = function (opts) {\n  if (opts.disableIsFullySigned) {\n    return\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures()\n  }\n}\n\nTransaction.prototype.inspect = function () {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>'\n}\n\nTransaction.prototype.toBuffer = function () {\n  var writer = new BufferWriter()\n  return this.toBufferWriter(writer).toBuffer()\n}\n\nTransaction.prototype.toBufferWriter = function (writer) {\n  writer.writeUInt32LE(this.version)\n  writer.writeVarintNum(this.inputs.length)\n  _.each(this.inputs, function (input) {\n    input.toBufferWriter(writer)\n  })\n  writer.writeVarintNum(this.outputs.length)\n  _.each(this.outputs, function (output) {\n    output.toBufferWriter(writer)\n  })\n  writer.writeUInt32LE(this.nLockTime)\n  return writer\n}\n\nTransaction.prototype.fromBuffer = function (buffer) {\n  var reader = new BufferReader(buffer)\n  return this.fromBufferReader(reader)\n}\n\nTransaction.prototype.fromBufferReader = function (reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received')\n  var i, sizeTxIns, sizeTxOuts\n\n  this.version = reader.readInt32LE()\n  sizeTxIns = reader.readVarintNum()\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader)\n    this.inputs.push(input)\n  }\n  sizeTxOuts = reader.readVarintNum()\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader))\n  }\n  this.nLockTime = reader.readUInt32LE()\n  return this\n}\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject () {\n  var inputs = []\n  this.inputs.forEach(function (input) {\n    inputs.push(input.toObject())\n  })\n  var outputs = []\n  this.outputs.forEach(function (output) {\n    outputs.push(output.toObject())\n  })\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString()\n  }\n\n  if (this._changeScript) {\n    obj.changeAddress = this._changeAddress.toString()\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee\n  }\n  return obj\n}\n\nTransaction.prototype.fromObject = function fromObject (arg) {\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction)\n  var self = this\n  var transaction\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject()\n  } else {\n    transaction = arg\n  }\n  _.each(transaction.inputs, function (input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input))\n      return\n    }\n    var script = new Script(input.output.script)\n    var txin\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input)\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      )\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input)\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script)\n    }\n    self.addInput(txin)\n  })\n  _.each(transaction.outputs, function (output) {\n    self.addOutput(new Output(output))\n  })\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript)\n  }\n  if (transaction.changeAddress) {\n    this._changeAddress = Address.fromString(transaction.changeAddress)\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee\n  }\n  this.nLockTime = transaction.nLockTime\n  this.version = transaction.version\n  this._checkConsistency(arg)\n  return this\n}\n\nTransaction.prototype._checkConsistency = function (arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript, 'Change script is expected.')\n    $.checkState(this._changeAddress, 'Change address is expected.')\n    $.checkState(this.outputs[this._changeIndex], 'Change index points to undefined output.')\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString(), 'Change output has an unexpected script.')\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash.')\n  }\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function (time) {\n  $.checkArgument(time)\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly()\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = time\n  return this\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function (height) {\n  $.checkArgument(_.isNumber(height))\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh()\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange()\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = height\n  return this\n}\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function () {\n  if (!this.nLockTime) {\n    return null\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime\n  }\n  return new Date(1000 * this.nLockTime)\n}\n\nTransaction.prototype.fromString = function (string) {\n  this.fromBuffer(Buffer.from(string, 'hex'))\n}\n\nTransaction.prototype._newTransaction = function () {\n  this.version = CURRENT_VERSION\n  this.nLockTime = DEFAULT_NLOCKTIME\n}\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bsv:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bsv Address object. The\n * same is true for `script`, which can be a string or a bsv Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function (utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this\n    _.each(utxo, function (utxo) {\n      self.from(utxo, pubkeys, threshold)\n    })\n    return this\n  }\n  var exists = _.some(this.inputs, function (input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex\n  })\n  if (exists) {\n    return this\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold)\n  } else {\n    this._fromNonP2SH(utxo)\n  }\n  return this\n}\n\nTransaction.prototype._fromNonP2SH = function (utxo) {\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isPublicKeyHashOut()) {\n    Clazz = PublicKeyHashInput\n  } else if (utxo.script.isPublicKeyOut()) {\n    Clazz = PublicKeyInput\n  } else {\n    Clazz = Input\n  }\n  this.addInput(new Clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }))\n}\n\nTransaction.prototype._fromMultisigUtxo = function (utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys')\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isMultisigOut()) {\n    Clazz = MultiSigInput\n  } else if (utxo.script.isScriptHashOut()) {\n    Clazz = MultiSigScriptHashInput\n  } else {\n    throw new Error('@TODO')\n  }\n  this.addInput(new Clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold))\n}\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function (input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input')\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis')\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript)\n    $.checkArgumentType(satoshis, 'number', 'satoshis')\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    })\n  }\n  return this.uncheckedAddInput(input)\n}\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function (input) {\n  $.checkArgumentType(input, Input, 'input')\n  this.inputs.push(input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function () {\n  return _.every(this.inputs.map(function (input) {\n    return !!input.output\n  }))\n}\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._fee = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._feePerKb = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function (address) {\n  $.checkArgument(address, 'address is required')\n  this._changeScript = Script.fromAddress(address)\n  this._changeAddress = Address(address)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function () {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex]\n  }\n  return null\n}\n\n/**\n * @return {Address | null} change address, if it exists\n */\nTransaction.prototype.getChangeAddress = function () {\n  return this._changeAddress ? this._changeAddress : null\n}\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function (address, amount) {\n  if (_.isArray(address)) {\n    var self = this\n    _.each(address, function (to) {\n      self.to(to.address, to.satoshis)\n    })\n    return this\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  )\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }))\n  return this\n}\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function (value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }))\n  return this\n}\n\n/**\n * Add an OP_FALSE | OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addSafeData = function (value) {\n  this.addOutput(new Output({\n    script: Script.buildSafeDataOut(value),\n    satoshis: 0\n  }))\n  return this\n}\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function (output) {\n  $.checkArgumentType(output, Output, 'output')\n  this._addOutput(output)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function () {\n  this.outputs = []\n  this._clearSignatures()\n  this._outputAmount = undefined\n  this._changeIndex = undefined\n  this._updateChangeOutput()\n  return this\n}\n\nTransaction.prototype._addOutput = function (output) {\n  this.outputs.push(output)\n  this._outputAmount = undefined\n}\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function () {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this\n    this._outputAmount = 0\n    _.each(this.outputs, function (output) {\n      self._outputAmount += output.satoshis\n    })\n  }\n  return this._outputAmount\n}\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function () {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this\n    this._inputAmount = 0\n    _.each(this.inputs, function (input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput()\n      }\n      self._inputAmount += input.output.satoshis\n    })\n  }\n  return this._inputAmount\n}\n\nTransaction.prototype._updateChangeOutput = function () {\n  if (this.sealed) {\n    throw new errors.Transaction.TransactionAlreadySealed()\n  }\n\n  if (!this._changeScript) {\n    return\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex)\n  }\n  this._changeIndex = this.outputs.length\n  this._addOutput(new Output({\n    script: this._changeScript,\n    satoshis: 0\n  }))\n  var available = this.getUnspentValue()\n  var fee = this.getFee()\n  var changeAmount = available - fee\n  this._removeOutput(this._changeIndex)\n  this._changeIndex = undefined\n  if (changeAmount >= Transaction.DUST_AMOUNT) {\n    this._changeIndex = this.outputs.length\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }))\n  }\n  this._clearSignatures()\n}\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function () {\n  if (this.isCoinbase()) {\n    return 0\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this.getUnspentValue()\n  }\n  return this._estimateFee()\n}\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function () {\n  var estimatedSize = this._estimateSize()\n  return Math.ceil(estimatedSize / 1000 * (this._feePerKb || Transaction.FEE_PER_KB))\n}\n\nTransaction.prototype.getUnspentValue = function () {\n  return this._getInputAmount() - this._getOutputAmount()\n}\n\nTransaction.prototype._clearSignatures = function () {\n  _.each(this.inputs, function (input) {\n    input.clearSignatures()\n  })\n}\n\n// 4    version\n// ???  num inputs (VARINT)\n// --- input list ---\n//\n// ???  num outputs (VARINT)\n// --- output list ---\n//      8       value\n//      ???     script size (VARINT)\n//      ???     script\n//\n// 4    locktime\nTransaction.prototype.getEstimateSize = function () {\n  return this._estimateSize()\n}\n\nTransaction.prototype._estimateSize = function () {\n  var result = 4 + 4 // size of version + size of locktime\n  result += Varint(this.inputs.length).toBuffer().length\n  result += Varint(this.outputs.length).toBuffer().length\n  _.each(this.inputs, function (input) {\n    result += input._estimateSize()\n  })\n  _.each(this.outputs, function (output) {\n    result += output.getSize()\n  })\n  return result\n}\n\nTransaction.prototype._removeOutput = function (index) {\n  var output = this.outputs[index]\n  this.outputs = _.without(this.outputs, output)\n  this._outputAmount = undefined\n}\n\nTransaction.prototype.removeOutput = function (index) {\n  this._removeOutput(index)\n  this._updateChangeOutput()\n}\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function () {\n  this.sortInputs(function (inputs) {\n    var copy = Array.prototype.concat.apply([], inputs)\n    copy.sort(function (first, second) {\n      return first.prevTxId.compare(second.prevTxId) ||\n        first.outputIndex - second.outputIndex\n    })\n    return copy\n  })\n  this.sortOutputs(function (outputs) {\n    var copy = Array.prototype.concat.apply([], outputs)\n    copy.sort(function (first, second) {\n      return first.satoshis - second.satoshis ||\n        first.script.toBuffer().compare(second.script.toBuffer())\n    })\n    return copy\n  })\n  return this\n}\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle.\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function () {\n  return this.sortOutputs(_.shuffle)\n}\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function (sortingFunction) {\n  var outs = sortingFunction(this.outputs)\n  return this._newOutputOrder(outs)\n}\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function (sortingFunction) {\n  this.inputs = sortingFunction(this.inputs)\n  this._clearSignatures()\n  return this\n}\n\nTransaction.prototype._newOutputOrder = function (newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n    _.difference(this.outputs, newOutputs).length !== 0)\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting()\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex]\n    this._changeIndex = newOutputs.indexOf(changeOutput)\n  }\n\n  this.outputs = newOutputs\n  return this\n}\n\nTransaction.prototype.removeInput = function (txId, outputIndex) {\n  var index\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId\n  } else {\n    index = _.findIndex(this.inputs, function (input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex\n    })\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length)\n  }\n  var input = this.inputs[index]\n  this.inputs = _.without(this.inputs, input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n}\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function (privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo(), 'Not all utxo information is available to sign the transaction.')\n  var self = this\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function (privateKey) {\n      self.sign(privateKey, sigtype)\n    })\n    return this\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function (signature) {\n    self.applySignature(signature)\n  })\n\n  this._privateKey = privateKey\n  this._sigType = sigtype\n  return this\n}\n\nTransaction.prototype.getSignatures = function (privKey, sigtype) {\n  privKey = new PrivateKey(privKey)\n  // By default, signs using ALL|FORKID\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var transaction = this\n  var results = []\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer())\n  _.each(this.inputs, function forEachInput (input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function (signature) {\n      results.push(signature)\n    })\n  })\n  return results\n}\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function (signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature)\n  return this\n}\n\nTransaction.prototype.isFullySigned = function () {\n  _.each(this.inputs, function (input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      )\n    }\n  })\n  return _.every(_.map(this.inputs, function (input) {\n    return input.isFullySigned()\n  }))\n}\n\nTransaction.prototype.isValidSignature = function (signature) {\n  var self = this\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    )\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature)\n}\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function (sig, pubkey, nin, subscript, satoshisBN, flags) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript, satoshisBN, flags)\n}\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function (notVerifyInput) {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty'\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty'\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0)\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i]\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid'\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY'\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN)\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY'\n    }\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {}\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i]\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input'\n    }\n    txinmap[inputid] = true\n  }\n\n  var isCoinbase = this.isCoinbase()\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid'\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input'\n      }\n\n      if (!notVerifyInput) {\n        var res = this.inputs[i].verify(this, i)\n        if (!res.success) {\n          return 'transaction input ' + i + ' VerifyError: ' + res.error\n        }\n      }\n    }\n  }\n  return true\n}\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function () {\n  return (this.inputs.length === 1 && this.inputs[0].isNull())\n}\n\n/**\n *\n * @param {number | object} inputIndex or option\n * @param {Script|(tx, output) => Script} unlockScriptOrCallback  unlockScript or a callback returns unlockScript\n * @returns unlockScript of the special input\n */\nTransaction.prototype.setInputScript = function (options, unlockScriptOrCallback) {\n  var inputIndex = 0\n  var privateKey\n  var sigtype\n  var isLowS = false\n  if (typeof options === 'number') {\n    inputIndex = options\n    sigtype = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID\n  } else {\n    inputIndex = options.inputIndex || 0\n    privateKey = options.privateKey\n    sigtype = options.sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n    isLowS = options.isLowS || false\n  }\n\n  if (unlockScriptOrCallback instanceof Function) {\n    var outputInPrevTx = this.inputs[inputIndex].output\n    this._inputsMap.set(inputIndex, {\n      sigtype,\n      privateKey,\n      isLowS,\n      callback: unlockScriptOrCallback\n    })\n    var unlockScript = unlockScriptOrCallback(this, outputInPrevTx)\n    this.inputs[inputIndex].setScript(unlockScript)\n  } else {\n    this.inputs[inputIndex].setScript(unlockScriptOrCallback)\n  }\n\n  return this\n}\n\n/**\n *\n * @param {number | object} inputIndex or option\n * @param {(tx, output) => Promise<Script>} unlockScriptOrCallback  a callback returns a unlocking script\n * @returns A promise which resolves to unlockScript of the special input\n */\nTransaction.prototype.setInputScriptAsync = async function (options, unlockScriptOrCallback) {\n  var inputIndex = 0\n  var sigtype\n  var isLowS = false\n  if (typeof options === 'number') {\n    inputIndex = options\n    sigtype = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID\n  } else {\n    inputIndex = options.inputIndex || 0\n    sigtype = options.sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n    isLowS = options.isLowS || false\n  }\n\n  if (unlockScriptOrCallback instanceof Function) {\n    var outputInPrevTx = this.inputs[inputIndex].output\n    this._inputsMap.set(inputIndex, {\n      sigtype,\n      isLowS,\n      callback: unlockScriptOrCallback\n    })\n    var unlockScript = await unlockScriptOrCallback(this, outputInPrevTx)\n    this.inputs[inputIndex].setScript(unlockScript)\n  } else {\n    throw new errors.InvalidArgument('Must provide a callback returns a unlocking script')\n  }\n\n  return this\n}\n\nTransaction.prototype.setInputSequence = function (inputIndex, sequence) {\n  this.inputs[inputIndex].sequenceNumber = sequence\n  return this\n}\n\n/**\n *\n * @param {number} outputIndex\n * @param {Output|(tx) => Output} outputOrcb  output or a callback returns output\n * @returns output\n */\nTransaction.prototype.setOutput = function (outputIndex, outputOrcb) {\n  if (outputOrcb instanceof Function) {\n    this._outputsMap.set(outputIndex, outputOrcb)\n    this.outputs[outputIndex] = outputOrcb(this)\n  } else {\n    this.outputs[outputIndex] = outputOrcb\n  }\n\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Seal a transaction. After the transaction is sealed, except for the unlock script entered,\n * other attributes of the transaction cannot be modified\n */\nTransaction.prototype.seal = function () {\n  var self = this\n\n  this._outputsMap.forEach(function (callback, key) {\n    self.outputs[key] = callback(self)\n  })\n\n  this._updateChangeOutput()\n\n  this._inputsMap.forEach(function (options, key) {\n    var outputInPrevTx = self.inputs[key].output\n    var unlockScript = options.callback(self, outputInPrevTx)\n    self.inputs[key].setScript(unlockScript)\n  })\n\n  if (this._privateKey) {\n    this.sign(this._privateKey, this._sigType)\n  }\n\n  this.sealed = true\n\n  return this\n}\n\n/**\n * Seal a transaction asynchronously. After the transaction is sealed, except for the unlock script entered,\n * other attributes of the transaction cannot be modified\n */\nTransaction.prototype.sealAsync = async function () {\n  var self = this\n\n  this._outputsMap.forEach(function (callback, key) {\n    self.outputs[key] = callback(self)\n  })\n\n  this._updateChangeOutput()\n\n  var promises = []\n\n  this._inputsMap.forEach(function (options, key) {\n    var outputInPrevTx = self.inputs[key].output\n\n    promises.push(\n      Promise.resolve(options.callback(self, outputInPrevTx)).then(unlockScript => {\n        return { key, unlockScript }\n      })\n    )\n  })\n\n  await Promise.all(promises).then(items => {\n    items.forEach(({ key, unlockScript }) => {\n      self.inputs[key].setScript(unlockScript)\n    })\n  })\n\n  if (this._privateKey) {\n    this.sign(this._privateKey, this._sigType)\n  }\n\n  this.sealed = true\n\n  return this\n}\n\nTransaction.prototype.setLockTime = function (nLockTime) {\n  this.nLockTime = nLockTime\n  return this\n}\n\n/**\n *\n * @returns satoshis of change output\n */\nTransaction.prototype.getChangeAmount = function () {\n  if (_.isUndefined(this._changeIndex)) {\n    return 0\n  }\n\n  return this.outputs[this._changeIndex].satoshis\n}\n\n/**\n *\n * @returns estimate fee by transaction size\n */\nTransaction.prototype.getEstimateFee = function () {\n  return this._estimateFee()\n}\n\n/**\n *\n * @param {number} feePerKb the fee per KB for this transaction\n * @returns true or false\n */\nTransaction.prototype.checkFeeRate = function (feePerKb) {\n  var fee = this.getUnspentValue()\n\n  var estimatedSize = this._estimateSize()\n  var expectedRate = (feePerKb || this._feePerKb || Transaction.FEE_PER_KB) / 1000\n  var realFeeRate = fee / estimatedSize\n  return realFeeRate >= expectedRate\n}\n\n/**\n *\n * @returns the serialization of all input outpoints\n */\nTransaction.prototype.prevouts = function () {\n  var writer = new BufferWriter()\n\n  _.each(this.inputs, function (input) {\n    writer.writeReverse(input.prevTxId)\n    writer.writeUInt32LE(input.outputIndex)\n  })\n\n  var buf = writer.toBuffer()\n  return buf.toString('hex')\n}\n\n/**\n *\n * @returns if the transaction is sealed\n */\nTransaction.prototype.isSealed = function () {\n  return this.sealed\n}\n\nTransaction.prototype.getPreimage = function (inputIndex, sigtype, isLowS, csIdx) {\n  $.checkArgumentType(inputIndex, 'number', 'inputIndex')\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  isLowS = isLowS || false\n  inputIndex = inputIndex || 0\n  var preimage = this.inputs[inputIndex].getPreimage(this, inputIndex, sigtype, isLowS, csIdx)\n  return preimage.toString('hex')\n}\n\nTransaction.prototype.getSignature = function (inputIndex, privateKeys, sigtypes) {\n  $.checkArgumentType(inputIndex, 'number', 'inputIndex')\n  var results = []\n  var inputOpt = (this._inputsMap || new Map()).get(inputIndex)\n\n  privateKeys = privateKeys ||\n    (inputOpt ? inputOpt.privateKey : this._privateKey)\n\n  if (privateKeys) {\n    sigtypes = sigtypes || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n    var sigs = this.inputs[inputIndex].getSignatures(this, privateKeys, inputIndex, sigtypes)\n\n    _.each(sigs, function (sig) {\n      results.push(sig.signature.toTxFormat().toString('hex'))\n    })\n\n    if (results.length === 1) {\n      return results[0]\n    }\n\n    return results\n  }\n\n  return []\n}\n\nTransaction.prototype.addInputFromPrevTx = function (prevTx, outputIndex) {\n  $.checkArgumentType(prevTx, Transaction, 'prevTx')\n\n  var outputIdx = outputIndex || 0\n\n  const output = prevTx.outputs[outputIdx]\n\n  if (output.script.isPublicKeyHashOut()) {\n    return this.addInput(new PublicKeyHashInput({\n      prevTxId: prevTx.id,\n      outputIndex: outputIdx,\n      script: new Script(''), // placeholder\n      output: output\n    }))\n  } else {\n    return this.addInput(new Input({\n      prevTxId: prevTx.id,\n      outputIndex: outputIdx,\n      script: new Script(''), // placeholder\n      output: output\n    }))\n  }\n}\n\nTransaction.prototype.addDummyInput = function (script, satoshis) {\n  $.checkArgumentType(script, Script, 'script')\n  $.checkArgumentType(satoshis, 'number', 'satoshis')\n\n  return this.addInput(new Input({\n    prevTxId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n    outputIndex: 0,\n    script: new Script(''), // placeholder\n    output: new Output({\n      script: script,\n      satoshis: satoshis\n    })\n  }))\n}\n\n/**\n * Same as change(addresss), but using the address of Transaction.DUMMY_PRIVATEKEY as default change address\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.dummyChange = function () {\n  return this.change(Transaction.DUMMY_PRIVATEKEY.toAddress())\n}\n\nTransaction.prototype.verifyScript = function (inputIndex) {\n  $.checkArgumentType(inputIndex, 'number', 'inputIndex')\n\n  if (!this.inputs[inputIndex]) {\n    throw new errors.Transaction.Input.MissingInput()\n  }\n\n  return this.inputs[inputIndex].verify(this, inputIndex)\n}\n\n/**\n * @deprecated, please use `verifyScript` instead\n */\nTransaction.prototype.verifyInputScript = function (inputIndex) {\n  return this.verifyScript(inputIndex)\n}\n\nTransaction.prototype.getInputAmount = function (inputIndex) {\n  $.checkArgumentType(inputIndex, 'number', 'inputIndex')\n\n  if (!this.inputs[inputIndex]) {\n    throw new errors.Transaction.Input.MissingInput()\n  }\n\n  return this.inputs[inputIndex].output.satoshis\n}\n\nTransaction.prototype.getOutputAmount = function (outputIndex) {\n  $.checkArgumentType(outputIndex, 'number', 'outputIndex')\n\n  if (!this.outputs[outputIndex]) {\n    throw new errors.Transaction.MissingOutput()\n  }\n\n  return this.outputs[outputIndex].satoshis\n}\n\nmodule.exports = Transaction\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar BN = require('../crypto/bn')\n\nvar BufferReader = function BufferReader (buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf)\n  }\n  if (_.isUndefined(buf)) {\n    return\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    })\n  } else if (_.isString(buf)) {\n    var b = Buffer.from(buf, 'hex')\n    if (b.length * 2 !== buf.length) { throw new TypeError('Invalid hex string') }\n\n    this.set({\n      buf: b\n    })\n  } else if (_.isObject(buf)) {\n    var obj = buf\n    this.set(obj)\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader')\n  }\n}\n\nBufferReader.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  this.pos = obj.pos || this.pos || 0\n  return this\n}\n\nBufferReader.prototype.eof = function () {\n  return this.pos >= this.buf.length\n}\n\nBufferReader.prototype.finished = BufferReader.prototype.eof\n\nBufferReader.prototype.read = function (len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length')\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return buf\n}\n\nBufferReader.prototype.readAll = function () {\n  var buf = this.buf.slice(this.pos, this.buf.length)\n  this.pos = this.buf.length\n  return buf\n}\n\nBufferReader.prototype.readUInt8 = function () {\n  var val = this.buf.readUInt8(this.pos)\n  this.pos = this.pos + 1\n  return val\n}\n\nBufferReader.prototype.readUInt16BE = function () {\n  var val = this.buf.readUInt16BE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt16LE = function () {\n  var val = this.buf.readUInt16LE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt32BE = function () {\n  var val = this.buf.readUInt32BE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt32LE = function () {\n  var val = this.buf.readUInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readInt32LE = function () {\n  var val = this.buf.readInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt64BEBN = function () {\n  var buf = this.buf.slice(this.pos, this.pos + 8)\n  var bn = BN.fromBuffer(buf)\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readUInt64LEBN = function () {\n  var second = this.buf.readUInt32LE(this.pos)\n  var first = this.buf.readUInt32LE(this.pos + 4)\n  var combined = (first * 0x100000000) + second\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined)\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8)\n    bn = new BN(data, 10, 'le')\n  }\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readVarintNum = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE()\n    case 0xFE:\n      return this.readUInt32LE()\n    case 0xFF:\n      var bn = this.readUInt64LEBN()\n      var n = bn.toNumber()\n      if (n <= Math.pow(2, 53)) {\n        return n\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN')\n      }\n      // break // unreachable\n    default:\n      return first\n  }\n}\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function () {\n  var len = this.readVarintNum()\n  var buf = this.read(len)\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +\n    'Expected to read: ' + len + ' and read ' + buf.length)\n  return buf\n}\n\nBufferReader.prototype.readVarintBuf = function () {\n  var first = this.buf.readUInt8(this.pos)\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2)\n    case 0xFE:\n      return this.read(1 + 4)\n    case 0xFF:\n      return this.read(1 + 8)\n    default:\n      return this.read(1)\n  }\n}\n\nBufferReader.prototype.readVarintBN = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE())\n    case 0xFE:\n      return new BN(this.readUInt32LE())\n    case 0xFF:\n      return this.readUInt64LEBN()\n    default:\n      return new BN(first)\n  }\n}\n\nBufferReader.prototype.reverse = function () {\n  var buf = Buffer.alloc(this.buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i]\n  }\n  this.buf = buf\n  return this\n}\n\nBufferReader.prototype.readReverse = function (len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return Buffer.from(buf).reverse()\n}\n\nBufferReader.prototype.remaining = function () {\n  return this.buf.length - this.pos\n}\n\nmodule.exports = BufferReader\n","'use strict'\n\nvar BufferWriter = require('./bufferwriter')\nvar BufferReader = require('./bufferreader')\nvar BN = require('../crypto/bn')\n\nvar Varint = function Varint (buf) {\n  if (!(this instanceof Varint)) { return new Varint(buf) }\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf\n  } else if (typeof buf === 'number') {\n    var num = buf\n    this.fromNumber(num)\n  } else if (buf instanceof BN) {\n    var bn = buf\n    this.fromBN(bn)\n  } else if (buf) {\n    var obj = buf\n    this.set(obj)\n  }\n}\n\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf\n  return this\n}\n\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  })\n  return this\n}\n\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex')\n}\n\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf()\n  return this\n}\n\nVarint.prototype.fromBN = function (bn) {\n  var bw = new BufferWriter()\n  this.buf = bw.writeVarintBN(bn).toBuffer()\n  return this\n}\n\nVarint.prototype.fromNumber = function (num) {\n  var bw = new BufferWriter()\n  this.buf = bw.writeVarintNum(num).toBuffer()\n  return this\n}\n\nVarint.prototype.toBuffer = function () {\n  return this.buf\n}\n\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN()\n}\n\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum()\n}\n\nmodule.exports = Varint\n","'use strict'\n\nvar Signature = require('../crypto/signature')\nvar Script = require('../script')\nvar Output = require('./output')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar ECDSA = require('../crypto/ecdsa')\nvar $ = require('../util/preconditions')\nvar Interpreter = require('../script/interpreter')\nvar _ = require('../util/_')\nvar HashCache = require('../hash-cache')\n\nvar SIGHASH_SINGLE_BUG = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\nvar BITS_64_ON = 'ffffffffffffffff'\n\n// By default, we sign with sighash_forkid\nvar DEFAULT_SIGN_FLAGS = Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID\n\nvar sighashPreimageForForkId = function (transaction, sighashType, inputNumber, subscript, satoshisBN, hashCache = new HashCache()) {\n  var input = transaction.inputs[inputNumber]\n  $.checkArgument(\n    satoshisBN instanceof BN,\n    'For ForkId=0 signatures, satoshis or complete input must be provided'\n  )\n\n  function GetPrevoutHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeReverse(input.prevTxId)\n      writer.writeUInt32LE(input.outputIndex)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetSequenceHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeUInt32LE(input.sequenceNumber)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetOutputsHash (tx, n) {\n    var writer = new BufferWriter()\n\n    if (_.isUndefined(n)) {\n      _.each(tx.outputs, function (output) {\n        output.toBufferWriter(writer)\n      })\n    } else {\n      tx.outputs[n].toBufferWriter(writer)\n    }\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  var hashPrevouts = Buffer.alloc(32)\n  var hashSequence = Buffer.alloc(32)\n  var hashOutputs = Buffer.alloc(32)\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY)) {\n    hashPrevouts = hashCache.prevoutsHashBuf ? hashCache.prevoutsHashBuf : hashCache.prevoutsHashBuf = GetPrevoutHash(transaction)\n  }\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY) &&\n    (sighashType & 31) !== Signature.SIGHASH_SINGLE &&\n    (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashSequence = hashCache.sequenceHashBuf ? hashCache.sequenceHashBuf : hashCache.sequenceHashBuf = GetSequenceHash(transaction)\n  }\n\n  if ((sighashType & 31) !== Signature.SIGHASH_SINGLE && (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashOutputs = hashCache.outputsHashBuf ? hashCache.outputsHashBuf : hashCache.outputsHashBuf = GetOutputsHash(transaction)\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE && inputNumber < transaction.outputs.length) {\n    hashOutputs = GetOutputsHash(transaction, inputNumber)\n  }\n\n  var writer = new BufferWriter()\n  // Version\n  writer.writeUInt32LE(transaction.version)\n\n  // Input prevouts/nSequence (none/all, depending on flags)\n  writer.write(hashPrevouts)\n  writer.write(hashSequence)\n\n  //  outpoint (32-byte hash + 4-byte little endian)\n  writer.writeReverse(input.prevTxId)\n  writer.writeUInt32LE(input.outputIndex)\n\n  // scriptCode of the input (serialized as scripts inside CTxOuts)\n  var subscriptBuffer = subscript.toBuffer()\n  writer.writeVarintNum(subscriptBuffer.length)\n  writer.write(subscriptBuffer)\n\n  // value of the output spent by this input (8-byte little endian)\n  writer.writeUInt64LEBN(satoshisBN)\n\n  // nSequence of the input (4-byte little endian)\n  var sequenceNumber = input.sequenceNumber\n  writer.writeUInt32LE(sequenceNumber)\n\n  // Outputs (none/one/all, depending on flags)\n  writer.write(hashOutputs)\n\n  // Locktime\n  writer.writeUInt32LE(transaction.nLockTime)\n\n  // sighashType\n  writer.writeUInt32LE(sighashType >>> 0)\n  var buf = writer.toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer with the which is hashed with sighash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighashPreimage = function sighashPreimage (transaction, sighashType, inputNumber, subscript, satoshisBN, flags, hashCache = new HashCache()) {\n  var Transaction = require('./transaction')\n  var Input = require('./input')\n\n  if (_.isUndefined(flags)) {\n    flags = DEFAULT_SIGN_FLAGS\n  }\n\n  if (flags & Interpreter.SCRIPT_ENABLE_REPLAY_PROTECTION) {\n    // Legacy chain's value for fork id must be of the form 0xffxxxx.\n    // By xoring with 0xdead, we ensure that the value will be different\n    // from the original one, even if it already starts with 0xff.\n    var forkValue = sighashType >> 8\n    var newForkValue = 0xff0000 | (forkValue ^ 0xdead)\n    sighashType = (newForkValue << 8) | (sighashType & 0xff)\n  }\n\n  if ((sighashType & Signature.SIGHASH_FORKID) && (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n    return sighashPreimageForForkId(transaction, sighashType, inputNumber, subscript, satoshisBN)\n  }\n\n  // Copy transaction\n  var txcopy = Transaction.shallowCopy(transaction)\n\n  // Copy script\n  subscript = new Script(subscript)\n\n  // For no ForkId sighash, separators need to be removed.\n  subscript.removeCodeseparators()\n\n  var i\n\n  for (i = 0; i < txcopy.inputs.length; i++) {\n    // Blank signatures for other inputs\n    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty())\n  }\n\n  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript)\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE ||\n    (sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // clear all sequenceNumbers\n    for (i = 0; i < txcopy.inputs.length; i++) {\n      if (i !== inputNumber) {\n        txcopy.inputs[i].sequenceNumber = 0\n      }\n    }\n  }\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE) {\n    txcopy.outputs = []\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // The SIGHASH_SINGLE bug.\n    // https://bitcointalk.org/index.php?topic=260595.0\n    if (inputNumber >= txcopy.outputs.length) {\n      return SIGHASH_SINGLE_BUG\n    }\n\n    txcopy.outputs.length = inputNumber + 1\n\n    for (i = 0; i < inputNumber; i++) {\n      txcopy.outputs[i] = new Output({\n        satoshis: BN.fromBuffer(Buffer.from(BITS_64_ON, 'hex')),\n        script: Script.empty()\n      })\n    }\n  }\n\n  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {\n    txcopy.inputs = [txcopy.inputs[inputNumber]]\n  }\n\n  var buf = new BufferWriter()\n    .write(txcopy.toBuffer())\n    .writeInt32LE(sighashType)\n    .toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighash = function sighash (transaction, sighashType, inputNumber, subscript, satoshisBN, flags, hashCache = new HashCache()) {\n  var preimage = sighashPreimage(transaction, sighashType, inputNumber, subscript, satoshisBN, flags, hashCache)\n  if (preimage.compare(SIGHASH_SINGLE_BUG) === 0) return preimage\n  var ret = Hash.sha256sha256(preimage)\n  ret = new BufferReader(ret).readReverse()\n  return ret\n}\n\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @return {Signature}\n */\nfunction sign (transaction, privateKey, sighashType, inputIndex, subscript, satoshisBN, flags, hashCache = new HashCache()) {\n  var hashbuf = sighash(transaction, sighashType, inputIndex, subscript, satoshisBN, flags, hashCache)\n\n  var sig = ECDSA.sign(hashbuf, privateKey, 'little').set({\n    nhashtype: sighashType\n  })\n  return sig\n}\n\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @param {flags} verification flags\n * @return {boolean}\n */\nfunction verify (transaction, signature, publicKey, inputIndex, subscript, satoshisBN, flags, hashCache = new HashCache()) {\n  $.checkArgument(!_.isUndefined(transaction))\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype))\n  var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript, satoshisBN, flags, hashCache)\n  return ECDSA.verify(hashbuf, signature, publicKey, 'little')\n}\n\n/**\n * @namespace Signing\n */\nmodule.exports = {\n  sighashPreimage: sighashPreimage,\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n}\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar JSUtil = require('../util/js')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Script = require('../script')\nvar $ = require('../util/preconditions')\nvar errors = require('../errors')\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff\n\nfunction Output (args) {\n  if (!(this instanceof Output)) {\n    return new Output(args)\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis\n    if (Buffer.isBuffer(args.script)) {\n      this.setScriptFromBuffer(args.script)\n    } else {\n      var script\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = Buffer.from(args.script, 'hex')\n      } else {\n        script = args.script\n      }\n      this.setScript(script)\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output')\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._script\n  }\n})\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshis\n  },\n  set: function (num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num\n      this._satoshis = num.toNumber()\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num)\n      this._satoshisBN = BN.fromNumber(this._satoshis)\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      )\n      this._satoshisBN = BN.fromNumber(num)\n      this._satoshis = num\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer'\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value'\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative'\n  }\n  return false\n}\n\nObject.defineProperty(Output.prototype, 'satoshisBN', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshisBN\n  },\n  set: function (num) {\n    this._satoshisBN = num\n    this._satoshis = num.toNumber()\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject () {\n  var obj = {\n    satoshis: this.satoshis\n  }\n  obj.script = this._script.toBuffer().toString('hex')\n  return obj\n}\n\nOutput.fromObject = function (data) {\n  return new Output(data)\n}\n\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  try {\n    this._script = Script.fromBuffer(buffer)\n    this._script._isOutput = true\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null\n    } else {\n      throw e\n    }\n  }\n}\n\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._script = script\n    this._script._isOutput = true\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script)\n    this._script._isOutput = true\n  } else if (Buffer.isBuffer(script)) {\n    this.setScriptFromBuffer(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\nOutput.prototype.inspect = function () {\n  var scriptStr\n  if (this.script) {\n    scriptStr = this.script.inspect()\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>'\n}\n\nOutput.fromBufferReader = function (br) {\n  var obj = {}\n  obj.satoshis = br.readUInt64LEBN()\n  var size = br.readVarintNum()\n  if (size !== 0) {\n    if (br.remaining() < size) {\n      throw new TypeError('Unrecognized Output')\n    }\n    obj.script = br.read(size)\n  } else {\n    obj.script = Buffer.from([])\n  }\n  return new Output(obj)\n}\n\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeUInt64LEBN(this._satoshisBN)\n  var script = this._script.toBuffer()\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  return writer\n}\n\n// 8    value\n// ???  script size (VARINT)\n// ???  script\nOutput.prototype.getSize = function () {\n  var scriptSize = this.script.toBuffer().length\n  var varintSize = Varint(scriptSize).toBuffer().length\n  return 8 + varintSize + scriptSize\n}\n\nmodule.exports = Output\n","/**\n * Hash Cache\n * ==========\n *\n * For use in sighash.\n */\n'use strict'\n\nclass HashCache {\n  constructor (prevoutsHashBuf, sequenceHashBuf, outputsHashBuf) {\n    this.prevoutsHashBuf = prevoutsHashBuf\n    this.sequenceHashBuf = sequenceHashBuf\n    this.outputsHashBuf = outputsHashBuf\n  }\n\n  static fromBuffer (buf) {\n    return HashCache.fromJSON(JSON.parse(buf.toString()))\n  }\n\n  toBuffer () {\n    return Buffer.from(JSON.stringify(this.toJSON()))\n  }\n\n  static fromJSON (json) {\n    return new HashCache(\n      json.prevoutsHashBuf ? Buffer.from(json.prevoutsHashBuf, 'hex') : undefined,\n      json.sequenceHashBuf ? Buffer.from(json.sequenceHashBuf, 'hex') : undefined,\n      json.outputsHashBuf ? Buffer.from(json.outputsHashBuf, 'hex') : undefined\n    )\n  }\n\n  toJSON () {\n    return {\n      prevoutsHashBuf: this.prevoutsHashBuf ? this.prevoutsHashBuf.toString('hex') : undefined,\n      sequenceHashBuf: this.sequenceHashBuf ? this.sequenceHashBuf.toString('hex') : undefined,\n      outputsHashBuf: this.outputsHashBuf ? this.outputsHashBuf.toString('hex') : undefined\n    }\n  }\n\n  toHex () {\n    return this.toBuffer().toString('hex')\n  }\n\n  static fromHex (hex) {\n    const buf = Buffer.from(hex, 'hex')\n    return HashCache.fromBuffer(buf)\n  }\n}\n\nmodule.exports = HashCache\n","module.exports = require('./input')\n\nmodule.exports.PublicKey = require('./publickey')\nmodule.exports.PublicKeyHash = require('./publickeyhash')\nmodule.exports.MultiSig = require('./multisig.js')\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js')\n","'use strict'\n\nvar _ = require('../../util/_')\nvar $ = require('../../util/preconditions')\nvar errors = require('../../errors')\nvar BufferWriter = require('../../encoding/bufferwriter')\nvar JSUtil = require('../../util/js')\nvar Script = require('../../script')\nvar Sighash = require('../sighash')\nvar Output = require('../output')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\nvar Hash = require('../../crypto/hash')\nvar Interpreter = require('../../script/interpreter')\nvar Opcode = require('../../opcode')\nconst PrivateKey = require('../../privatekey')\n\nvar MAXINT = 0xffffffff // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2\nvar DEFAULT_SEQNUMBER = MAXINT\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1\n\nfunction getLowSPreimage (tx, sigtype, inputIndex, subscript, inputAmount) {\n  var i = 0\n  do {\n    var preimage = Sighash.sighashPreimage(tx, sigtype, inputIndex, subscript, inputAmount)\n\n    var sighash = Hash.sha256sha256(preimage)\n\n    if (_.isPositiveNumber(sighash.readUInt8()) && _.isPositiveNumber(sighash.readUInt8(31))) {\n      return preimage\n    }\n\n    tx.nLockTime++\n  } while (i < Number.MAX_SAFE_INTEGER)\n}\n\nfunction Input (params) {\n  if (!(this instanceof Input)) {\n    return new Input(params)\n  }\n  if (params) {\n    return this._fromObject(params)\n  }\n}\n\nInput.MAXINT = MAXINT\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER\n// txid + output index + sequence number\nInput.BASE_SIZE = 32 + 4 + 4\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    if (this.isNull()) {\n      return null\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer)\n      this._script._isInput = true\n    }\n    return this._script\n  }\n})\n\nInput.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  var input = new Input()\n  return input._fromObject(obj)\n}\n\nInput.prototype._fromObject = function (params) {\n  var prevTxId\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = Buffer.from(params.prevTxId, 'hex')\n  } else {\n    prevTxId = params.prevTxId\n  }\n  this.output = params.output\n    ? (params.output instanceof Output ? params.output : new Output(params.output)) : undefined\n  this.prevTxId = prevTxId || params.txidbuf\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber)\n    ? (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript()\n  }\n  this.setScript(params.scriptBuffer || params.script)\n  return this\n}\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject () {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex')\n  }\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString()\n  }\n  if (this.output) {\n    obj.output = this.output.toObject()\n  }\n  return obj\n}\n\nInput.fromBufferReader = function (br) {\n  var input = new Input()\n  input.prevTxId = br.readReverse(32)\n  input.outputIndex = br.readUInt32LE()\n  input._scriptBuffer = br.readVarLengthBuffer()\n  input.sequenceNumber = br.readUInt32LE()\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input\n}\n\nInput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeReverse(this.prevTxId)\n  writer.writeUInt32LE(this.outputIndex)\n  var script = this._scriptBuffer\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  writer.writeUInt32LE(this.sequenceNumber)\n  return writer\n}\n\nInput.prototype.setScript = function (script) {\n  this._script = null\n  if (script instanceof Script) {\n    this._script = script\n    this._script._isInput = true\n    this._scriptBuffer = script.toBuffer()\n  } else if (script === null) {\n    this._script = Script.empty()\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = Buffer.from(script, 'hex')\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script)\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (Buffer.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = Buffer.from(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey | Array} privateKeys - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID\n * @abstract\n */\nInput.prototype.getSignatures = function (transaction, privateKeys, inputIndex, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var results = []\n  if (privateKeys instanceof PrivateKey) {\n    results.push(new TransactionSignature({\n      publicKey: privateKeys.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: inputIndex,\n      signature: Sighash.sign(transaction, privateKeys, sigtype, inputIndex, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    }))\n  } else if (_.isArray(privateKeys)) {\n    var self = this\n\n    _.each(privateKeys, function (privateKey, index) {\n      var sigtype_ = sigtype\n      if (_.isArray(sigtype)) {\n        sigtype_ = sigtype[index] || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n      }\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: inputIndex,\n        signature: Sighash.sign(transaction, privateKey, sigtype_, inputIndex, self.output.script, self.output.satoshisBN),\n        sigtype: sigtype_\n      }))\n    })\n  }\n  return results\n}\n\n/**\n * Retrieve preimage for the Input.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID\n * @param {boolean} isLowS - true if the sig hash is safe for low s.\n * @param {number} csIdx - the index of OP_CODESEPARATOR\n * @abstract\n */\nInput.prototype.getPreimage = function (transaction, inputIndex, sigtype, isLowS, csIdx) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  isLowS = isLowS || false\n  var subscript = typeof csIdx === 'number' ? this.output.script.subScript(csIdx) : this.output.script\n  return isLowS\n    ? getLowSPreimage(transaction, sigtype, inputIndex, subscript, this.output.satoshisBN)\n    : Sighash.sighashPreimage(transaction, sigtype, inputIndex, subscript, this.output.satoshisBN)\n}\n\nInput.prototype.isFullySigned = function () {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned')\n}\n\nInput.prototype.isFinal = function () {\n  return this.sequenceNumber === Input.MAXINT\n}\n\nInput.prototype.addSignature = function () {\n  // throw new errors.AbstractMethodInvoked('Input#addSignature')\n}\n\nInput.prototype.clearSignatures = function () {\n  // throw new errors.AbstractMethodInvoked('Input#clearSignatures')\n}\n\nInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function () {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff\n}\n\nInput.prototype._estimateSize = function () {\n  return this.toBufferWriter().toBuffer().length\n}\n\nInput.prototype.verify = function (transaction, inputIndex) {\n  $.checkState(this.output instanceof Output)\n  $.checkState(this.script instanceof Script)\n  $.checkState(this.output.script instanceof Script)\n\n  var us = this.script\n  var ls = this.output.script\n  var inputSatoshis = this.output.satoshisBN\n\n  Interpreter.MAX_SCRIPT_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER\n  Interpreter.MAXIMUM_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER\n\n  const bsi = new Interpreter()\n\n  let failedAt = {}\n\n  bsi.stepListener = function (step) {\n    if (step.fExec || (Opcode.OP_IF <= step.opcode.toNumber() && step.opcode.toNumber() <= Opcode.OP_ENDIF)) {\n      if ((Opcode.OP_IF <= step.opcode.toNumber() && step.opcode.toNumber() <= Opcode.OP_ENDIF) || step.opcode.toNumber() === Opcode.OP_RETURN) /** Opreturn */ {\n        failedAt.opcode = step.opcode\n      } else {\n        failedAt = step\n      }\n    }\n  }\n\n  var success = bsi.verify(us, ls, transaction, inputIndex, Interpreter.DEFAULT_FLAGS, inputSatoshis)\n\n  if (failedAt.opcode) {\n    failedAt.opcode = failedAt.opcode.toNumber()\n  }\n\n  return { success, error: bsi.errstr, failedAt: success ? {} : failedAt }\n}\n\nmodule.exports = Input\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar inherits = require('inherits')\nvar JSUtil = require('../util/js')\n\nvar PublicKey = require('../publickey')\nvar errors = require('../errors')\nvar Signature = require('../crypto/signature')\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature (arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg)\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg)\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object')\n}\ninherits(TransactionSignature, Signature)\n\nTransactionSignature.prototype._fromObject = function (arg) {\n  this._checkObjectArgs(arg)\n  this.publicKey = new PublicKey(arg.publicKey)\n  this.prevTxId = Buffer.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex')\n  this.outputIndex = arg.outputIndex\n  this.inputIndex = arg.inputIndex\n  this.signature = (arg.signature instanceof Signature) ? arg.signature\n    : Buffer.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature)\n      : Signature.fromString(arg.signature)\n  this.sigtype = arg.sigtype\n  return this\n}\n\nTransactionSignature.prototype._checkObjectArgs = function (arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey')\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex')\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex')\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number')\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number')\n  $.checkArgument(arg.signature, 'signature')\n  $.checkArgument(arg.prevTxId, 'prevTxId')\n  $.checkState(arg.signature instanceof Signature ||\n               Buffer.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value')\n  $.checkState(Buffer.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value')\n  $.checkArgument(arg.sigtype, 'sigtype')\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number')\n}\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject () {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  }\n}\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function (object) {\n  $.checkArgument(object)\n  return new TransactionSignature(object)\n}\n\nmodule.exports = TransactionSignature\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var publicKey = privateKey.toPublicKey()\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyIn()\n}\n\n// 32   txid\n// 4    output index\n// ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// ---\n// 4    sequence number\nPublicKeyInput.SCRIPT_MAX_SIZE = 74\n\nPublicKeyInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyInput\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Hash = require('../../crypto/hash')\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyHashInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output)\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer())\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  if (hashData.equals(this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyHashIn()\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// 1    public key size (OP_PUSHDATA)\n// 65   uncompressed public key\n//\n// 4    sequence number\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 140\n\nPublicKeyHashInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyHashInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyHashInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigInput, Input)\n\nMultiSigInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n\n  return results\n}\n\nMultiSigInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigInput.prototype._updateScript = function () {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ))\n  return this\n}\n\nMultiSigInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function (transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      })\n\n      signature.signature.nhashtype = signature.sigtype\n      var isMatch = Sighash.verify(\n        transaction,\n        signature.signature,\n        signature.publicKey,\n        signature.inputIndex,\n        input.output.script\n      )\n\n      if (isMatch) {\n        signatureMatch = signature\n        return false\n      }\n\n      return true\n    })\n\n    return signatureMatch || null\n  })\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ??? script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// 4    sequence number\nMultiSigInput.SIGNATURE_SIZE = 73\n\nMultiSigInput.prototype._estimateSize = function () {\n  var scriptSize = 1 + this.threshold * MultiSigInput.SIGNATURE_SIZE\n  return Input.BASE_SIZE + Varint(scriptSize).toBuffer().length + scriptSize\n}\n\nmodule.exports = MultiSigInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold)\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n    'Provided public keys don\\'t hash to the provided output')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigScriptHashInput, Input)\n\nMultiSigScriptHashInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigScriptHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n  return results\n}\n\nMultiSigScriptHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigScriptHashInput.prototype._updateScript = function () {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ))\n  return this\n}\n\nMultiSigScriptHashInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigScriptHashInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigScriptHashInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigScriptHashInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigScriptHashInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.redeemScript,\n    this.output.satoshisBN\n  )\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ???  script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// ???  redeem script size (OP_PUSHDATA)\n// --- redeem script ---\n//      1       OP_2\n//      --- public key list ---\n//      1       public key size (OP_PUSHDATA)\n//      33      compressed public key\n//\n//      1       OP_3\n//      1       OP_CHECKMULTISIG\n//\n// 4    sequence number\nMultiSigScriptHashInput.SIGNATURE_SIZE = 73\nMultiSigScriptHashInput.PUBKEY_SIZE = 34\n\nMultiSigScriptHashInput.prototype._estimateSize = function () {\n  var pubKeysSize = this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE\n  var sigsSize = this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE\n  var redeemScriptSize = 3 + pubKeysSize\n  var redeemScriptPushdataSize = redeemScriptSize <= 75 ? 1 : redeemScriptSize <= 255 ? 2 : 3\n  var scriptLength = sigsSize + 1 + redeemScriptPushdataSize + redeemScriptSize\n  return Input.BASE_SIZE + Varint(scriptLength).toBuffer().length + scriptLength\n}\n\nmodule.exports = MultiSigScriptHashInput\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Script = require('../script')\nvar Address = require('../address')\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BSV = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput (data) {\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data)\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data')\n  var address = data.address ? new Address(data.address) : undefined\n  var txId = data.txid ? data.txid : data.txId\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data)\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex)\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n    'Must provide the scriptPubKey for that output!')\n  var script = new Script(data.scriptPubKey || data.script)\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n    'Must provide an amount for the output')\n  var amount = !_.isUndefined(data.amount) ? Math.round(data.amount * 1e8) : data.satoshis\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number')\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  })\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function () {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>'\n}\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function () {\n  return this.txId + ':' + this.outputIndex\n}\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function (data) {\n  return new UnspentOutput(data)\n}\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject () {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Number.parseFloat((this.satoshis / 1e8).toFixed(8))\n  }\n}\n\nmodule.exports = UnspentOutput\n","if (process.browser) module.exports = require('./random.browser')\nelse module.exports = require('./random.node')\n","'use strict'\n\nfunction Random () {\n}\n\n/* secure random bytes that sometimes throws an error due to lack of entropy */\nRandom.getRandomBuffer = function (size) {\n  if (!window.crypto && !window.msCrypto) {\n    throw new Error('window.crypto not available')\n  }\n  var crypto\n\n  if (window.crypto && window.crypto.getRandomValues) {\n    crypto = window.crypto\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) { // internet explorer\n    crypto = window.msCrypto\n  } else {\n    throw new Error('window.crypto.getRandomValues not available')\n  }\n\n  var bbuf = new Uint8Array(size)\n  crypto.getRandomValues(bbuf)\n  var buf = Buffer.from(bbuf)\n\n  return buf\n}\n\nmodule.exports = Random\n","module.exports = require('./block')\n\nmodule.exports.BlockHeader = require('./blockheader')\nmodule.exports.MerkleBlock = require('./merkleblock')\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a Block from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {Block}\n * @constructor\n */\nfunction Block (arg) {\n  if (!(this instanceof Block)) {\n    return new Block(arg)\n  }\n  _.extend(this, Block._from(arg))\n  return this\n}\n\nBlock.MAX_BLOCK_SIZE = 128000000\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlock._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = Block._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = Block._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for Block')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Object} - An object representing block data\n * @private\n */\nBlock._fromObject = function _fromObject (data) {\n  var transactions = []\n  data.transactions.forEach(function (tx) {\n    if (tx instanceof Transaction) {\n      transactions.push(tx)\n    } else {\n      transactions.push(Transaction().fromObject(tx))\n    }\n  })\n  var info = {\n    header: BlockHeader.fromObject(data.header),\n    transactions: transactions\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nBlock.fromObject = function fromObject (obj) {\n  var info = Block._fromObject(obj)\n  return new Block(info)\n}\n\n/**\n * @param {BufferReader} - Block data\n * @returns {Object} - An object representing the block data\n * @private\n */\nBlock._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  $.checkState(!br.finished(), 'No block data received')\n  info.header = BlockHeader.fromBufferReader(br)\n  var transactions = br.readVarintNum()\n  info.transactions = []\n  for (var i = 0; i < transactions; i++) {\n    info.transactions.push(Transaction().fromBufferReader(br))\n  }\n  return info\n}\n\n/**\n * @param {BufferReader} - A buffer reader of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBufferReader = function fromBufferReader (br) {\n  $.checkArgument(br, 'br is required')\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBuffer = function fromBuffer (buf) {\n  return Block.fromBufferReader(new BufferReader(buf))\n}\n\n/**\n * @param {string} - str - A hex encoded string of the block\n * @returns {Block} - A hex encoded string of the block\n */\nBlock.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Block.fromBuffer(buf)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {Block} - An instance of block\n */\nBlock.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = Block.Values.START_OF_BLOCK\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @returns {Object} - A plain object with the block properties\n */\nBlock.prototype.toObject = Block.prototype.toJSON = function toObject () {\n  var transactions = []\n  this.transactions.forEach(function (tx) {\n    transactions.push(tx.toObject())\n  })\n  return {\n    header: this.header.toObject(),\n    transactions: transactions\n  }\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the block\n */\nBlock.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the Block\n */\nBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeVarintNum(this.transactions.length)\n  for (var i = 0; i < this.transactions.length; i++) {\n    this.transactions[i].toBufferWriter(bw)\n  }\n  return bw\n}\n\n/**\n * Will iterate through each transaction and return an array of hashes\n * @returns {Array} - An array with transaction hashes\n */\nBlock.prototype.getTransactionHashes = function getTransactionHashes () {\n  var hashes = []\n  if (this.transactions.length === 0) {\n    return [Block.Values.NULL_HASH]\n  }\n  for (var t = 0; t < this.transactions.length; t++) {\n    hashes.push(this.transactions[t]._getHash())\n  }\n  return hashes\n}\n\n/**\n * Will build a merkle tree of all the transactions, ultimately arriving at\n * a single point, the merkle root.\n * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees\n * @returns {Array} - An array with each level of the tree after the other.\n */\nBlock.prototype.getMerkleTree = function getMerkleTree () {\n  var tree = this.getTransactionHashes()\n\n  var j = 0\n  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {\n    for (var i = 0; i < size; i += 2) {\n      var i2 = Math.min(i + 1, size - 1)\n      var buf = Buffer.concat([tree[j + i], tree[j + i2]])\n      tree.push(Hash.sha256sha256(buf))\n    }\n    j += size\n  }\n\n  return tree\n}\n\n/**\n * Calculates the merkleRoot from the transactions.\n * @returns {Buffer} - A buffer of the merkle root hash\n */\nBlock.prototype.getMerkleRoot = function getMerkleRoot () {\n  var tree = this.getMerkleTree()\n  return tree[tree.length - 1]\n}\n\n/**\n * Verifies that the transactions in the block match the header merkle root\n * @returns {Boolean} - If the merkle roots match\n */\nBlock.prototype.validMerkleRoot = function validMerkleRoot () {\n  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex')\n  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex')\n\n  if (h.cmp(c) !== 0) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlock.prototype._getHash = function () {\n  return this.header._getHash()\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = this.header.id\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(Block.prototype, 'id', idProperty)\nObject.defineProperty(Block.prototype, 'hash', idProperty)\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlock.prototype.inspect = function inspect () {\n  return '<Block ' + this.id + '>'\n}\n\nBlock.Values = {\n  START_OF_BLOCK: 8, // Start of block in raw block data\n  NULL_HASH: Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = Block\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar $ = require('../util/preconditions')\n\nvar GENESIS_BITS = 0x1d00ffff\n\n/**\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\n * the properties of the BlockHeader\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {BlockHeader} - An instance of block header\n * @constructor\n */\nvar BlockHeader = function BlockHeader (arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg)\n  }\n  var info = BlockHeader._from(arg)\n  this.version = info.version\n  this.prevHash = info.prevHash\n  this.merkleRoot = info.merkleRoot\n  this.time = info.time\n  this.timestamp = info.time\n  this.bits = info.bits\n  this.nonce = info.nonce\n\n  if (info.hash) {\n    $.checkState(\n      this.hash === info.hash,\n      'Argument object hash property does not match block hash.'\n    )\n  }\n\n  return this\n}\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block header data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlockHeader._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A JSON string\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromObject = function _fromObject (data) {\n  $.checkArgument(data, 'data is required')\n  var prevHash = data.prevHash\n  var merkleRoot = data.merkleRoot\n  if (_.isString(data.prevHash)) {\n    prevHash = Buffer.from(data.prevHash, 'hex').reverse()\n  }\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = Buffer.from(data.merkleRoot, 'hex').reverse()\n  }\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: data.nonce\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromObject = function fromObject (obj) {\n  var info = BlockHeader._fromObject(obj)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = BlockHeader.Constants.START_OF_HEADER\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBuffer = function fromBuffer (buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf))\n  return new BlockHeader(info)\n}\n\n/**\n * @param {string} - A hex encoded buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return BlockHeader.fromBuffer(buf)\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  info.version = br.readInt32LE()\n  info.prevHash = br.read(32)\n  info.merkleRoot = br.read(32)\n  info.time = br.readUInt32LE()\n  info.bits = br.readUInt32LE()\n  info.nonce = br.readUInt32LE()\n  return info\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBufferReader = function fromBufferReader (br) {\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @returns {Object} - A plain object of the BlockHeader\n */\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: Buffer.from(this.prevHash).reverse().toString('hex'),\n    merkleRoot: Buffer.from(this.merkleRoot).reverse().toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: this.nonce\n  }\n}\n\n/**\n * @returns {Buffer} - A Buffer of the BlockHeader\n */\nBlockHeader.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the BlockHeader\n */\nBlockHeader.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\n */\nBlockHeader.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.writeInt32LE(this.version)\n  bw.write(this.prevHash)\n  bw.write(this.merkleRoot)\n  bw.writeUInt32LE(this.time)\n  bw.writeUInt32LE(this.bits)\n  bw.writeUInt32LE(this.nonce)\n  return bw\n}\n\n/**\n * Returns the target difficulty for this block\n * @param {Number} bits\n * @returns {BN} An instance of BN with the decoded difficulty bits\n */\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty (bits) {\n  bits = bits || this.bits\n\n  var target = new BN(bits & 0xffffff)\n  var mov = 8 * ((bits >>> 24) - 3)\n  while (mov-- > 0) {\n    target = target.mul(new BN(2))\n  }\n  return target\n}\n\n/**\n * @link https://en.bitcoin.it/wiki/Difficulty\n * @return {Number}\n */\nBlockHeader.prototype.getDifficulty = function getDifficulty () {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)))\n  var currentTargetBN = this.getTargetDifficulty()\n\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10)\n  var decimalPos = difficultyString.length - 8\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos)\n\n  return parseFloat(difficultyString)\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlockHeader.prototype._getHash = function hash () {\n  var buf = this.toBuffer()\n  return Hash.sha256sha256(buf)\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex')\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty)\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty)\n\n/**\n * @returns {Boolean} - If timestamp is not too far in the future\n */\nBlockHeader.prototype.validTimestamp = function validTimestamp () {\n  var currentTime = Math.round(new Date().getTime() / 1000)\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\n */\nBlockHeader.prototype.validProofOfWork = function validProofOfWork () {\n  var pow = new BN(this.id, 'hex')\n  var target = this.getTargetDifficulty()\n\n  if (pow.cmp(target) > 0) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlockHeader.prototype.inspect = function inspect () {\n  return '<BlockHeader ' + this.id + '>'\n}\n\nBlockHeader.Constants = {\n  START_OF_HEADER: 8, // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = BlockHeader\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar errors = require('../errors')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock\n * @returns {MerkleBlock}\n * @constructor\n */\nfunction MerkleBlock (arg) {\n  if (!(this instanceof MerkleBlock)) {\n    return new MerkleBlock(arg)\n  }\n\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = MerkleBlock._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    var header\n    if (arg.header instanceof BlockHeader) {\n      header = arg.header\n    } else {\n      header = BlockHeader.fromObject(arg.header)\n    }\n    info = {\n      /**\n       * @name MerkleBlock#header\n       * @type {BlockHeader}\n       */\n      header: header,\n      /**\n       * @name MerkleBlock#numTransactions\n       * @type {Number}\n       */\n      numTransactions: arg.numTransactions,\n      /**\n       * @name MerkleBlock#hashes\n       * @type {String[]}\n       */\n      hashes: arg.hashes,\n      /**\n       * @name MerkleBlock#flags\n       * @type {Number[]}\n       */\n      flags: arg.flags\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for MerkleBlock')\n  }\n  _.extend(this, info)\n  this._flagBitsUsed = 0\n  this._hashesUsed = 0\n\n  return this\n}\n\n/**\n * @param {Buffer} - MerkleBlock data in a Buffer object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBuffer = function fromBuffer (buf) {\n  return MerkleBlock.fromBufferReader(BufferReader(buf))\n}\n\n/**\n * @param {BufferReader} - MerkleBlock data in a BufferReader object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBufferReader = function fromBufferReader (br) {\n  return new MerkleBlock(MerkleBlock._fromBufferReader(br))\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nMerkleBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock\n */\nMerkleBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeUInt32LE(this.numTransactions)\n  bw.writeVarintNum(this.hashes.length)\n  for (var i = 0; i < this.hashes.length; i++) {\n    bw.write(Buffer.from(this.hashes[i], 'hex'))\n  }\n  bw.writeVarintNum(this.flags.length)\n  for (i = 0; i < this.flags.length; i++) {\n    bw.writeUInt8(this.flags[i])\n  }\n  return bw\n}\n\n/**\n * @returns {Object} - A plain object with the MerkleBlock properties\n */\nMerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject () {\n  return {\n    header: this.header.toObject(),\n    numTransactions: this.numTransactions,\n    hashes: this.hashes,\n    flags: this.flags\n  }\n}\n\n/**\n * Verify that the MerkleBlock is valid\n * @returns {Boolean} - True/False whether this MerkleBlock is Valid\n */\nMerkleBlock.prototype.validMerkleTree = function validMerkleTree () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    return false\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    return false\n  }\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var root = this._traverseMerkleTree(height, 0, opts)\n  if (opts.hashesUsed !== this.hashes.length) {\n    return false\n  }\n  return root.equals(this.header.merkleRoot)\n}\n\n/**\n * WARNING: This method is deprecated. Use filteredTxsHash instead.\n *\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filterdTxsHash = function filterdTxsHash () {\n  throw new Error('filterdTxsHash has been deprecated. use filteredTxsHash.')\n}\n\n/**\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filteredTxsHash = function filteredTxsHash () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // If there is only one hash the filter do not match any txs in the block\n  if (this.hashes.length === 1) {\n    return []\n  };\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var txs = this._traverseMerkleTree(height, 0, opts, true)\n  if (opts.hashesUsed !== this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n  return txs\n}\n\n/**\n * Traverse a the tree in this MerkleBlock, validating it along the way\n * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()\n * @param {Number} - depth - Current height\n * @param {Number} - pos - Current position in the tree\n * @param {Object} - opts - Object with values that need to be mutated throughout the traversal\n * @param {Boolean} - checkForTxs - if true return opts.txs else return the Merkle Hash\n * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0\n * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0\n * @param {Array} - opts.txs - Will finish populated by transactions found during traversal that match the filter\n * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height\n * @returns {Array} - transactions found during traversal that match the filter\n * @private\n */\nMerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree (depth, pos, opts, checkForTxs) {\n  opts = opts || {}\n  opts.txs = opts.txs || []\n  opts.flagBitsUsed = opts.flagBitsUsed || 0\n  opts.hashesUsed = opts.hashesUsed || 0\n  checkForTxs = checkForTxs || false\n\n  if (opts.flagBitsUsed > this.flags.length * 8) {\n    return null\n  }\n  var isParentOfMatch = (this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7)) & 1\n  if (depth === 0 || !isParentOfMatch) {\n    if (opts.hashesUsed >= this.hashes.length) {\n      return null\n    }\n    var hash = this.hashes[opts.hashesUsed++]\n    if (depth === 0 && isParentOfMatch) {\n      opts.txs.push(hash)\n    }\n    return Buffer.from(hash, 'hex')\n  } else {\n    var left = this._traverseMerkleTree(depth - 1, pos * 2, opts)\n    var right = left\n    if (pos * 2 + 1 < this._calcTreeWidth(depth - 1)) {\n      right = this._traverseMerkleTree(depth - 1, pos * 2 + 1, opts)\n    }\n    if (checkForTxs) {\n      return opts.txs\n    } else {\n      return Hash.sha256sha256(Buffer.concat([left, right]))\n    }\n  }\n}\n\n/** Calculates the width of a merkle tree at a given height.\n *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Width of the tree at a given height\n * @private\n */\nMerkleBlock.prototype._calcTreeWidth = function calcTreeWidth (height) {\n  return (this.numTransactions + (1 << height) - 1) >> height\n}\n\n/** Calculates the height of the merkle tree in this MerkleBlock\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Height of the merkle tree in this MerkleBlock\n * @private\n */\nMerkleBlock.prototype._calcTreeHeight = function calcTreeHeight () {\n  var height = 0\n  while (this._calcTreeWidth(height) > 1) {\n    height++\n  }\n  return height\n}\n\n/**\n * @param {Transaction|String} - Transaction or Transaction ID Hash\n * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not\n * @private\n */\nMerkleBlock.prototype.hasTransaction = function hasTransaction (tx) {\n  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined')\n  $.checkArgument(tx instanceof Transaction || typeof tx === 'string',\n    'Invalid tx given, tx must be a \"string\" or \"Transaction\"')\n\n  var hash = tx\n  if (tx instanceof Transaction) {\n    // We need to reverse the id hash for the lookup\n    hash = Buffer.from(tx.id, 'hex').reverse().toString('hex')\n  }\n\n  var txs = []\n  var height = this._calcTreeHeight()\n  this._traverseMerkleTree(height, 0, { txs: txs })\n  return txs.indexOf(hash) !== -1\n}\n\n/**\n * @param {Buffer} - MerkleBlock data\n * @returns {Object} - An Object representing merkleblock data\n * @private\n */\nMerkleBlock._fromBufferReader = function _fromBufferReader (br) {\n  $.checkState(!br.finished(), 'No merkleblock data received')\n  var info = {}\n  info.header = BlockHeader.fromBufferReader(br)\n  info.numTransactions = br.readUInt32LE()\n  var numHashes = br.readVarintNum()\n  info.hashes = []\n  for (var i = 0; i < numHashes; i++) {\n    info.hashes.push(br.read(32).toString('hex'))\n  }\n  var numFlags = br.readVarintNum()\n  info.flags = []\n  for (i = 0; i < numFlags; i++) {\n    info.flags.push(br.readUInt8())\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nMerkleBlock.fromObject = function fromObject (obj) {\n  return new MerkleBlock(obj)\n}\n\nmodule.exports = MerkleBlock\n","'use strict'\n\nvar assert = require('assert')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PrivateKey = require('./privatekey')\nvar Random = require('./crypto/random')\n\nvar errors = require('./errors')\nvar hdErrors = errors.HDPrivateKey\nvar JSUtil = require('./util/js')\n\nvar MINIMUM_ENTROPY_BITS = 128\nvar BITS_TO_BYTES = 1 / 8\nvar MAXIMUM_ENTROPY_BITS = 512\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey (arg) {\n  if (arg instanceof HDPrivateKey) {\n    return arg\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg)\n  }\n  if (!arg) {\n    return this._generateRandomly()\n  }\n\n  if (Network.get(arg)) {\n    return this._generateRandomly(arg)\n  } else if (_.isString(arg) || Buffer.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg)\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg)\n    } else if (Buffer.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString())\n    } else {\n      throw HDPrivateKey.getSerializedError(arg)\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg)\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg)\n  }\n}\n\nHDPrivateKey.fromRandom = function () {\n  return new HDPrivateKey()\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function (arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex\n  }\n\n  return false\n}\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function (path) {\n  var steps = path.split('/')\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return []\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null\n  }\n\n  var indexes = steps.slice(1).map(function (step) {\n    var isHardened = step.slice(-1) === '\\''\n    if (isHardened) {\n      step = step.slice(0, -1)\n    }\n    if (!step || step[0] === '-') {\n      return NaN\n    }\n    var index = +step // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened\n    }\n\n    return index\n  })\n\n  return _.some(indexes, isNaN) ? null : indexes\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPrivateKey.prototype._deriveWithNumber = function (index, hardened, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer()\n    data = Buffer.concat([Buffer.from([0]), nonZeroPadded, indexBuffer])\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({ size: 32 })\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes')\n    data = Buffer.concat([Buffer.from([0]), privateKeyBuffer, indexBuffer])\n  } else {\n    data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  })\n  var chainCode = hash.slice(32, 64)\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  })\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant)\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  })\n\n  return derived\n}\n\nHDPrivateKey.prototype._deriveFromString = function (path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function (data, network) {\n  return !HDPrivateKey.getSerializedError(data, network)\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  return null\n}\n\nHDPrivateKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(0, 4)\n  if (version.readUInt32BE(0) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPrivateKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.prototype._buildFromJSON = function (arg) {\n  return this._buildFromObject(JSON.parse(arg))\n}\n\nHDPrivateKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? Buffer.from(arg.privateKey, 'hex') : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : JSUtil.integerAsBuffer(arg.checksum)) : undefined\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._generateRandomly = function (network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network)\n}\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function (hexa, network) {\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = Buffer.from(hexa, 'hex')\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa)\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa)\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa)\n  }\n  var hash = Hash.sha512hmac(hexa, Buffer.from('Bitcoin seed'))\n\n  return new HDPrivateKey({\n    network: Network.get(network) || Network.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  })\n}\n\nHDPrivateKey.prototype._calcHDPublicKey = function () {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey')\n    this._hdPublicKey = new HDPublicKey(this)\n  }\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function (arg) {\n  HDPrivateKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    Buffer.alloc(1), arg.privateKey\n  ]\n  var concat = Buffer.concat(sequence)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat)\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat)\n    }\n  }\n\n  var network = Network.get(arg.version.readUInt32BE(0))\n  var xprivkey\n  xprivkey = Base58Check.encode(Buffer.concat(sequence))\n  arg.xprivkey = Buffer.from(xprivkey)\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network)\n  var publicKey = privateKey.toPublicKey()\n  var size = HDPrivateKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: arg.depth[0],\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  this._hdPublicKey = null\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey\n    }\n  })\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey.xpubkey\n    }\n  })\n  return this\n}\n\nHDPrivateKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer')\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPrivateKey.VersionSize)\n  checkBuffer('depth', HDPrivateKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize)\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize)\n  }\n}\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function () {\n  return this.xprivkey\n}\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function () {\n  return '<HDPrivateKey: ' + this.xprivkey + '>'\n}\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0), 'xprivkey').name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xprivkey: this.xprivkey\n  }\n}\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function (buf) {\n  return new HDPrivateKey(buf.toString())\n}\n\n/**\n * Build a HDPrivateKey from a hex string\n *\n * @param {string} hex\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromHex = function (hex) {\n  return HDPrivateKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function () {\n  return Buffer.from(this.toString())\n}\n\n/**\n * Returns a hex string representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPrivateKey.DefaultDepth = 0\nHDPrivateKey.DefaultFingerprint = 0\nHDPrivateKey.DefaultChildIndex = 0\nHDPrivateKey.Hardened = 0x80000000\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\'']\n\nHDPrivateKey.VersionSize = 4\nHDPrivateKey.DepthSize = 1\nHDPrivateKey.ParentFingerPrintSize = 4\nHDPrivateKey.ChildIndexSize = 4\nHDPrivateKey.ChainCodeSize = 32\nHDPrivateKey.PrivateKeySize = 32\nHDPrivateKey.CheckSumSize = 4\n\nHDPrivateKey.DataLength = 78\nHDPrivateKey.SerializedByteSize = 82\n\nHDPrivateKey.VersionStart = 0\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize)\n\nmodule.exports = HDPrivateKey\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar HDPrivateKey = require('./hdprivatekey')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\n\nvar bsvErrors = require('./errors')\nvar errors = bsvErrors\nvar hdErrors = bsvErrors.HDPublicKey\nvar assert = require('assert')\n\nvar JSUtil = require('./util/js')\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey (arg) {\n  if (arg instanceof HDPublicKey) {\n    return arg\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg)\n  }\n  if (arg) {\n    if (_.isString(arg) || Buffer.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg)\n      if (!error) {\n        return this._buildFromSerialized(arg)\n      } else if (Buffer.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString())\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey\n        }\n        throw error\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg)\n        } else {\n          return this._buildFromObject(arg)\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg)\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument()\n  }\n}\n\nHDPublicKey.fromHDPrivateKey = function (hdPrivateKey) {\n  return new HDPublicKey(hdPrivateKey)\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function (arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened\n  }\n\n  return false\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPublicKey.prototype._deriveWithNumber = function (index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), { size: 32 })\n  var chainCode = hash.slice(32, 64)\n\n  var publicKey\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point))\n  } catch (e) {\n    return this._deriveWithNumber(index + 1)\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  })\n\n  return derived\n}\n\nHDPublicKey.prototype._deriveFromString = function (path) {\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function (data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network))\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  var version = data.readUInt32BE(0)\n  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey) {\n    return new hdErrors.ArgumentIsPrivateExtended()\n  }\n  return null\n}\n\nHDPublicKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd)\n  if (version.readUInt32BE(0) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers)\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey))\n  args.publicKey = Point.pointToCompressed(point)\n  args.version = JSUtil.integerAsBuffer(Network.get(args.version.readUInt32BE(0)).xpubkey)\n  args.privateKey = undefined\n  args.checksum = undefined\n  args.xprivkey = undefined\n  return this._buildFromBuffers(args)\n}\n\nHDPublicKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? Buffer.from(arg.publicKey, 'hex')\n      : Buffer.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? JSUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPublicKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n      HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function (arg) {\n  HDPublicKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ]\n  var concat = Buffer.concat(sequence)\n  var checksum = Base58Check.checksum(concat)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum)\n    }\n  }\n  var network = Network.get(arg.version.readUInt32BE(0))\n\n  var xpubkey\n  xpubkey = Base58Check.encode(Buffer.concat(sequence))\n  arg.xpubkey = Buffer.from(xpubkey)\n\n  var publicKey = new PublicKey(arg.publicKey, { network: network })\n  var size = HDPublicKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: arg.depth[0],\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  return this\n}\n\nHDPublicKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff)\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPublicKey.VersionSize)\n  checkBuffer('depth', HDPublicKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize)\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize)\n  }\n}\n\nHDPublicKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPublicKey(arg)\n}\n\nHDPublicKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPublicKey(arg)\n}\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function () {\n  return this.xpubkey\n}\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function () {\n  return '<HDPublicKey: ' + this.xpubkey + '>'\n}\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: this._buffers.checksum.readUInt32BE(0),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0)).name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    publicKey: this.publicKey.toString(),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xpubkey: this.xpubkey\n  }\n}\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function (arg) {\n  return new HDPublicKey(arg)\n}\n\n/**\n * Create a HDPublicKey from a hex string argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromHex = function (hex) {\n  return HDPublicKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function () {\n  return Buffer.from(this._buffers.xpubkey)\n}\n\n/**\n * Return a hex string representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPublicKey.Hardened = 0x80000000\nHDPublicKey.RootElementAlias = ['m', 'M']\n\nHDPublicKey.VersionSize = 4\nHDPublicKey.DepthSize = 1\nHDPublicKey.ParentFingerPrintSize = 4\nHDPublicKey.ChildIndexSize = 4\nHDPublicKey.ChainCodeSize = 32\nHDPublicKey.PublicKeySize = 33\nHDPublicKey.CheckSumSize = 4\n\nHDPublicKey.DataSize = 78\nHDPublicKey.SerializedByteSize = 82\n\nHDPublicKey.VersionStart = 0\nHDPublicKey.VersionEnd = HDPublicKey.VersionStart + HDPublicKey.VersionSize\nHDPublicKey.DepthStart = HDPublicKey.VersionEnd\nHDPublicKey.DepthEnd = HDPublicKey.DepthStart + HDPublicKey.DepthSize\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd\nHDPublicKey.ParentFingerPrintEnd = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize\nHDPublicKey.ChildIndexStart = HDPublicKey.ParentFingerPrintEnd\nHDPublicKey.ChildIndexEnd = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize\nHDPublicKey.ChainCodeStart = HDPublicKey.ChildIndexEnd\nHDPublicKey.ChainCodeEnd = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize\nHDPublicKey.PublicKeyStart = HDPublicKey.ChainCodeEnd\nHDPublicKey.PublicKeyEnd = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize\nHDPublicKey.ChecksumStart = HDPublicKey.PublicKeyEnd\nHDPublicKey.ChecksumEnd = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize)\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize)\n\nmodule.exports = HDPublicKey\n","module.exports = require('./electrum-ecies')\n","'use strict'\n\nvar PublicKey = require('../publickey')\nvar PrivateKey = require('../privatekey')\nvar Hash = require('../crypto/hash')\nvar $ = require('../util/preconditions')\nvar bitcoreECIES = require('./bitcore-ecies')\nvar errors = require('../errors')\nvar aesjs = require('aes-js')\nvar CBC = aesjs.ModeOfOperation.cbc\n\nvar AESCBC = function AESCBC () {}\n\nAESCBC.encrypt = function (messagebuf, keybuf, ivbuf) {\n  $.checkArgument(messagebuf)\n  $.checkArgument(keybuf)\n  $.checkArgument(ivbuf)\n  $.checkArgument(keybuf.length === 16, 'keybuf length must be 16')\n  $.checkArgument(ivbuf.length === 16, 'ivbuf length must be 16')\n  messagebuf = aesjs.padding.pkcs7.pad(messagebuf)\n  var aesCbc = new CBC(keybuf, ivbuf)\n  var encryptedBytes = aesCbc.encrypt(messagebuf)\n  return Buffer.from(encryptedBytes)\n}\n\nAESCBC.decrypt = function (encbuf, keybuf, ivbuf) {\n  $.checkArgument(encbuf)\n  $.checkArgument(keybuf)\n  $.checkArgument(ivbuf)\n  $.checkArgument(keybuf.length === 16, 'keybuf length must be 16')\n  $.checkArgument(ivbuf.length === 16, 'ivbuf length must be 16')\n  var aesCbc = new CBC(keybuf, ivbuf)\n  var decryptedBytes = aesCbc.decrypt(encbuf)\n  return Buffer.from(aesjs.padding.pkcs7.strip(decryptedBytes))\n}\n\n// Electrum BIE1 ECIES\n// Difference from Original Bitcore ECIES:\n//  BIE1:\n//      1.Secret S is compressed P(33 bytes), while Bitcore's Secret is Px(32 bytes). See ivkEkM.\n//      2.use AES-128-CBC instead of AES-256-CBC.\n//      3.IV is retrived from first 16 bytes of Hashed Secret Buffer. See iv\n//      4.key Encryption(kE) is retrived from 17-32 bytes of Hashed Secret Buffer, instead of 1-32 bytes. See kE\n//      5.a magic word 'BIE1' is used to identify message type.\n//      6.ephemeral key is introduced, so you can encrypt messages only with public key.\n//      7.HMAC is whole message.\n//  Notice:\n//      Electrum does not support shortTag nor noKey\n//      Do NOT use those 2 options if you are to send a message to Electrum\n//      Encrypted message is NOT recoverable if you use ephemeral key\n//  Security:\n//\n\n// Default algorithm is set to BIE1, however original Bitcore ECIES is still preserved.\nvar ECIES = function ECIES (opts, algorithm = 'BIE1') {\n  if (algorithm !== 'BIE1') throw new errors.ECIES.UnsupportAlgorithm(algorithm)\n  if (!(this instanceof ECIES)) {\n    return new ECIES(opts, algorithm)\n  }\n  // use ephemeral key if privateKey is not set.\n  this._privateKey = new PrivateKey()\n  this.opts = opts || {}\n  this.opts.ephemeralKey = true\n}\n\nECIES.prototype.privateKey = function (privateKey) {\n  $.checkArgument(PrivateKey.isValid(privateKey), 'no private key provided')\n\n  this._privateKey = PrivateKey(privateKey.toHex()) || null\n  this.opts.ephemeralKey = false\n\n  return this\n}\n\nECIES.prototype.publicKey = function (publicKey) {\n  $.checkArgument(PublicKey.isValid(publicKey), 'no public key provided')\n\n  this._publicKey = PublicKey(publicKey.toString()) || null\n  if (this._publicKey != null) this.opts.fixedPublicKey = true\n\n  return this\n}\n\nvar defineProperty = function (name, getter) {\n  var cachedName = '_' + name\n  Object.defineProperty(ECIES.prototype, name, {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      var value = this[cachedName]\n      value = this[cachedName] = getter.apply(this)\n      return value\n    }\n  })\n}\n\ndefineProperty('Rbuf', function () {\n  return this._privateKey.publicKey.toDER(true)\n})\n\ndefineProperty('ivkEkM', function () {\n  var r = this._privateKey.bn\n  var KB = this._publicKey.point\n  var P = KB.mul(r)\n  var S = PublicKey(P)\n  var Sbuf = S.toBuffer()\n  return Hash.sha512(Sbuf)\n})\n\ndefineProperty('iv', function () {\n  return this.ivkEkM.slice(0, 16)\n})\n\ndefineProperty('kE', function () {\n  return this.ivkEkM.slice(16, 32)\n})\n\ndefineProperty('kM', function () {\n  return this.ivkEkM.slice(32, 64)\n})\n\n// Encrypts the message (String or Buffer).\nECIES.prototype.encrypt = function (message) {\n  if (!Buffer.isBuffer(message)) message = Buffer.from(message)\n  var ciphertext = AESCBC.encrypt(message, this.kE, this.iv)\n  var encbuf\n  var BIE1 = Buffer.from('BIE1')\n  if (this.opts.noKey && !this.opts.ephemeralKey) {\n    encbuf = Buffer.concat([BIE1, ciphertext])\n  } else {\n    encbuf = Buffer.concat([BIE1, this.Rbuf, ciphertext])\n  }\n  var hmac = Hash.sha256hmac(encbuf, this.kM)\n  if (this.opts.shortTag) hmac = hmac.slice(0, 4)\n  return Buffer.concat([encbuf, hmac])\n}\n\nECIES.prototype.decrypt = function (encbuf) {\n  $.checkArgument(Buffer.isBuffer(encbuf), 'ciphetext must be a buffer')\n  var tagLength = 32\n  var offset = 4\n  if (this.opts.shortTag) {\n    tagLength = 4\n  }\n  var magic = encbuf.slice(0, 4)\n  if (!magic.equals(Buffer.from('BIE1'))) {\n    throw new errors.DecryptionError('Invalid Magic')\n  }\n  if (!this.opts.noKey) {\n    var pub\n    // BIE1 use compressed public key, length is always 33.\n    pub = encbuf.slice(4, 37)\n    if (this.opts.fixedPublicKey) console.log('Notice: Overriding PublicKey in message. Consider use \"noKey\" option if you are not sending message to electrum and do not want to use ephemeral key')\n    else this._publicKey = PublicKey.fromDER(pub)\n    offset = 37\n  }\n\n  var ciphertext = encbuf.slice(offset, encbuf.length - tagLength)\n  var hmac = encbuf.slice(encbuf.length - tagLength, encbuf.length)\n\n  var hmac2 = Hash.sha256hmac(encbuf.slice(0, encbuf.length - tagLength), this.kM)\n  if (this.opts.shortTag) hmac2 = hmac2.slice(0, 4)\n\n  if (!hmac.equals(hmac2)) {\n    throw new errors.ECIES.DecryptionError('Invalid checksum')\n  }\n\n  return AESCBC.decrypt(ciphertext, this.kE, this.iv)\n}\n\nECIES.bitcoreECIES = bitcoreECIES\n\nmodule.exports = ECIES\n","'use strict'\n\nvar PublicKey = require('../publickey')\nvar Hash = require('../crypto/hash')\nvar $ = require('../util/preconditions')\nvar aesjs = require('aes-js')\nvar CBC = aesjs.ModeOfOperation.cbc\nvar Random = require('../crypto/random')\n\nvar AESCBC = function AESCBC () {}\n\nAESCBC.encrypt = function (messagebuf, cipherkeybuf, ivbuf) {\n  $.checkArgument(messagebuf)\n  $.checkArgument(cipherkeybuf)\n  $.checkArgument(ivbuf)\n  ivbuf = ivbuf || Random.getRandomBuffer(128 / 8)\n  messagebuf = aesjs.padding.pkcs7.pad(messagebuf)\n  var aesCbc = new CBC(cipherkeybuf, ivbuf)\n  var ctbuf = aesCbc.encrypt(messagebuf)\n  var encbuf = Buffer.concat([ivbuf, ctbuf])\n  return encbuf\n}\n\nAESCBC.decrypt = function (encbuf, cipherkeybuf) {\n  $.checkArgument(encbuf)\n  $.checkArgument(cipherkeybuf)\n  var ivbuf = encbuf.slice(0, 128 / 8)\n  var ctbuf = encbuf.slice(128 / 8)\n  var aesCbc = new CBC(cipherkeybuf, ivbuf)\n  var messagebuf = aesCbc.decrypt(ctbuf)\n  messagebuf = aesjs.padding.pkcs7.strip(messagebuf)\n  return Buffer.from(messagebuf)\n}\n\n// http://en.wikipedia.org/wiki/Integrated_Encryption_Scheme\nvar ECIES = function ECIES (opts) {\n  if (!(this instanceof ECIES)) {\n    return new ECIES()\n  }\n  this.opts = opts || {}\n}\n\nECIES.prototype.privateKey = function (privateKey) {\n  $.checkArgument(privateKey, 'no private key provided')\n\n  this._privateKey = privateKey || null\n\n  return this\n}\n\nECIES.prototype.publicKey = function (publicKey) {\n  $.checkArgument(publicKey, 'no public key provided')\n\n  this._publicKey = publicKey || null\n\n  return this\n}\n\nvar cachedProperty = function (name, getter) {\n  var cachedName = '_' + name\n  Object.defineProperty(ECIES.prototype, name, {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      var value = this[cachedName]\n      if (!value) {\n        value = this[cachedName] = getter.apply(this)\n      }\n      return value\n    }\n  })\n}\n\ncachedProperty('Rbuf', function () {\n  return this._privateKey.publicKey.toDER(true)\n})\n\ncachedProperty('kEkM', function () {\n  var r = this._privateKey.bn\n  var KB = this._publicKey.point\n  var P = KB.mul(r)\n  var S = P.getX()\n  var Sbuf = S.toBuffer({ size: 32 })\n  return Hash.sha512(Sbuf)\n})\n\ncachedProperty('kE', function () {\n  return this.kEkM.slice(0, 32)\n})\n\ncachedProperty('kM', function () {\n  return this.kEkM.slice(32, 64)\n})\n\n// Encrypts the message (String or Buffer).\n// Optional `ivbuf` contains 16-byte Buffer to be used in AES-CBC.\n// By default, `ivbuf` is computed deterministically from message and private key using HMAC-SHA256.\n// Deterministic IV enables end-to-end test vectors for alternative implementations.\n// Note that identical messages have identical ciphertexts. If your protocol does not include some\n// kind of a sequence identifier inside the message *and* it is important to not allow attacker to learn\n// that message is repeated, then you should use custom IV.\n// For random IV, pass `Random.getRandomBuffer(16)` for the second argument.\nECIES.prototype.encrypt = function (message, ivbuf) {\n  if (!Buffer.isBuffer(message)) message = Buffer.from(message)\n  if (ivbuf === undefined) {\n    ivbuf = Hash.sha256hmac(message, this._privateKey.toBuffer()).slice(0, 16)\n  }\n  var c = AESCBC.encrypt(message, this.kE, ivbuf)\n  var d = Hash.sha256hmac(c, this.kM)\n  if (this.opts.shortTag) d = d.slice(0, 4)\n  var encbuf\n  if (this.opts.noKey) {\n    encbuf = Buffer.concat([c, d])\n  } else {\n    encbuf = Buffer.concat([this.Rbuf, c, d])\n  }\n  return encbuf\n}\n\nECIES.prototype.decrypt = function (encbuf) {\n  $.checkArgument(encbuf)\n  var offset = 0\n  var tagLength = 32\n  if (this.opts.shortTag) {\n    tagLength = 4\n  }\n  if (!this.opts.noKey) {\n    var pub\n    switch (encbuf[0]) {\n      case 4:\n        pub = encbuf.slice(0, 65)\n        break\n      case 3:\n      case 2:\n        pub = encbuf.slice(0, 33)\n        break\n      default:\n        throw new Error('Invalid type: ' + encbuf[0])\n    }\n    this._publicKey = PublicKey.fromDER(pub)\n    offset += pub.length\n  }\n\n  var c = encbuf.slice(offset, encbuf.length - tagLength)\n  var d = encbuf.slice(encbuf.length - tagLength, encbuf.length)\n\n  var d2 = Hash.sha256hmac(c, this.kM)\n  if (this.opts.shortTag) d2 = d2.slice(0, 4)\n\n  var equal = true\n  for (var i = 0; i < d.length; i++) {\n    equal &= (d[i] === d2[i])\n  }\n  if (!equal) {\n    throw new Error('Invalid checksum')\n  }\n\n  return AESCBC.decrypt(c, this.kE)\n}\n\nmodule.exports = ECIES\n","'use strict'\n\nvar _ = require('../util/_')\nvar PrivateKey = require('../privatekey')\nvar PublicKey = require('../publickey')\nvar Address = require('../address')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar ECDSA = require('../crypto/ecdsa')\nvar Signature = require('../crypto/signature')\nvar sha256sha256 = require('../crypto/hash').sha256sha256\nvar JSUtil = require('../util/js')\nvar $ = require('../util/preconditions')\n\n/**\n * constructs a new message to sign and verify.\n *\n * @param {String} message\n * @returns {Message}\n */\nvar Message = function Message (message) {\n  if (!(this instanceof Message)) {\n    return new Message(message)\n  }\n\n  $.checkArgument(_.isString(message) || Buffer.isBuffer(message), 'First argument should be a string or Buffer')\n\n  if (_.isString(message)) {\n    this.messageBuffer = Buffer.from(message)\n  }\n\n  if (Buffer.isBuffer(message)) {\n    this.messageBuffer = message\n  }\n  return this\n}\n\nMessage.sign = function (message, privateKey) {\n  return new Message(message).sign(privateKey)\n}\n\nMessage.verify = function (message, address, signature) {\n  return new Message(message).verify(address, signature)\n}\n\nMessage.MAGIC_BYTES = Buffer.from('Bitcoin Signed Message:\\n')\n\nMessage.prototype.magicHash = function magicHash () {\n  var prefix1 = BufferWriter.varintBufNum(Message.MAGIC_BYTES.length)\n  var prefix2 = BufferWriter.varintBufNum(this.messageBuffer.length)\n  var buf = Buffer.concat([prefix1, Message.MAGIC_BYTES, prefix2, this.messageBuffer])\n  var hash = sha256sha256(buf)\n  return hash\n}\n\nMessage.prototype._sign = function _sign (privateKey) {\n  $.checkArgument(privateKey instanceof PrivateKey,\n    'First argument should be an instance of PrivateKey')\n  var hash = this.magicHash()\n  return ECDSA.signWithCalcI(hash, privateKey)\n}\n\n/**\n * Will sign a message with a given bitcoin private key.\n *\n * @param {PrivateKey} privateKey - An instance of PrivateKey\n * @returns {String} A base64 encoded compact signature\n */\nMessage.prototype.sign = function sign (privateKey) {\n  var signature = this._sign(privateKey)\n  return signature.toCompact().toString('base64')\n}\n\nMessage.prototype._verify = function _verify (publicKey, signature) {\n  $.checkArgument(publicKey instanceof PublicKey, 'First argument should be an instance of PublicKey')\n  $.checkArgument(signature instanceof Signature, 'Second argument should be an instance of Signature')\n  var hash = this.magicHash()\n  var verified = ECDSA.verify(hash, signature, publicKey)\n  if (!verified) {\n    this.error = 'The signature was invalid'\n  }\n  return verified\n}\n\n/**\n * Will return a boolean of the signature is valid for a given bitcoin address.\n * If it isn't the specific reason is accessible via the \"error\" member.\n *\n * @param {Address|String} bitcoinAddress - A bitcoin address\n * @param {String} signatureString - A base64 encoded compact signature\n * @returns {Boolean}\n */\nMessage.prototype.verify = function verify (bitcoinAddress, signatureString) {\n  $.checkArgument(bitcoinAddress)\n  $.checkArgument(signatureString && _.isString(signatureString))\n\n  if (_.isString(bitcoinAddress)) {\n    bitcoinAddress = Address.fromString(bitcoinAddress)\n  }\n  var signature = Signature.fromCompact(Buffer.from(signatureString, 'base64'))\n\n  // recover the public key\n  var ecdsa = new ECDSA()\n  ecdsa.hashbuf = this.magicHash()\n  ecdsa.sig = signature\n  var publicKey = ecdsa.toPublicKey()\n\n  var signatureAddress = Address.fromPublicKey(publicKey, bitcoinAddress.network)\n\n  // check that the recovered address and specified address match\n  if (bitcoinAddress.toString() !== signatureAddress.toString()) {\n    this.error = 'The signature did not match the message digest'\n    return false\n  }\n\n  return this._verify(publicKey, signature)\n}\n\n/**\n * Instantiate a message from a message string\n *\n * @param {String} str - A string of the message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromString = function (str) {\n  return new Message(str)\n}\n\n/**\n * Instantiate a message from JSON\n *\n * @param {String} json - An JSON string or Object with keys: message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromJSON = function fromJSON (json) {\n  if (JSUtil.isValidJSON(json)) {\n    json = JSON.parse(json)\n  }\n  return Message.fromObject(json)\n}\n\n/**\n * @returns {Object} A plain object with the message information\n */\nMessage.prototype.toObject = function toObject () {\n  return {\n    messageHex: this.messageBuffer.toString('hex')\n  }\n}\n\nMessage.fromObject = function (obj) {\n  let messageBuffer = Buffer.from(obj.messageHex, 'hex')\n  return new Message(messageBuffer)\n}\n\n/**\n * @returns {String} A JSON representation of the message information\n */\nMessage.prototype.toJSON = function toJSON () {\n  return JSON.stringify(this.toObject())\n}\n\n/**\n * Will return a the string representation of the message\n *\n * @returns {String} Message\n */\nMessage.prototype.toString = function () {\n  return this.messageBuffer.toString()\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {String} Message\n */\nMessage.prototype.inspect = function () {\n  return '<Message: ' + this.toString() + '>'\n}\n\nmodule.exports = Message\n","'use strict'\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar Random = require('../crypto/random')\nvar unorm = require('unorm')\nvar _ = require('../util/_')\n\nvar pbkdf2 = require('./pbkdf2')\nvar errors = require('../errors')\n\nvar $ = require('../util/preconditions')\nvar HDPrivateKey = require('../hdprivatekey')\n\n/**\n * This is an immutable class that represents a BIP39 Mnemonic code.\n * See BIP39 specification for more info: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n * A Mnemonic code is a a group of easy to remember words used for the generation\n * of deterministic wallets. A Mnemonic can be used to generate a seed using\n * an optional passphrase, for later generate a HDPrivateKey.\n *\n * @example\n * // generate a random mnemonic\n * var mnemonic = new Mnemonic();\n * var phrase = mnemonic.phrase;\n *\n * // use a different language\n * var mnemonic = new Mnemonic(Mnemonic.Words.SPANISH);\n * var xprivkey = mnemonic.toHDPrivateKey();\n *\n * @param {*=} data - a seed, phrase, or entropy to initialize (can be skipped)\n * @param {Array=} wordlist - the wordlist to generate mnemonics from\n * @returns {Mnemonic} A new instance of Mnemonic\n * @constructor\n */\nvar Mnemonic = function (data, wordlist) {\n  if (!(this instanceof Mnemonic)) {\n    return new Mnemonic(data, wordlist)\n  }\n\n  if (_.isArray(data)) {\n    wordlist = data\n    data = null\n  }\n\n  // handle data overloading\n  var ent, phrase, seed\n  if (Buffer.isBuffer(data)) {\n    seed = data\n  } else if (_.isString(data)) {\n    phrase = unorm.nfkd(data)\n  } else if (_.isNumber(data)) {\n    ent = data\n  } else if (data) {\n    throw new errors.InvalidArgument('data', 'Must be a Buffer, a string or an integer')\n  }\n  ent = ent || 128\n\n  // check and detect wordlist\n  wordlist = wordlist || Mnemonic._getDictionary(phrase)\n  if (phrase && !wordlist) {\n    throw new errors.Mnemonic.UnknownWordlist(phrase)\n  }\n  wordlist = wordlist || Mnemonic.Words.ENGLISH\n\n  if (seed) {\n    phrase = Mnemonic._entropy2mnemonic(seed, wordlist)\n  }\n\n  // validate phrase and ent\n  if (phrase && !Mnemonic.isValid(phrase, wordlist)) {\n    throw new errors.Mnemonic.InvalidMnemonic(phrase)\n  }\n  if (ent % 32 !== 0 || ent < 128) {\n    throw new errors.InvalidArgument('ENT', 'Values must be ENT > 128 and ENT % 32 == 0')\n  }\n\n  phrase = phrase || Mnemonic._mnemonic(ent, wordlist)\n\n  Object.defineProperty(this, 'wordlist', {\n    configurable: false,\n    value: wordlist\n  })\n\n  Object.defineProperty(this, 'phrase', {\n    configurable: false,\n    value: phrase\n  })\n}\n\nMnemonic.fromRandom = function (wordlist = Mnemonic.Words.ENGLISH) {\n  return new Mnemonic(wordlist)\n}\n\nMnemonic.fromString = function (mnemonic, wordlist = Mnemonic.Words.ENGLISH) {\n  return new Mnemonic(mnemonic, wordlist)\n}\n\nMnemonic.Words = require('./words')\n\n/**\n * Will return a boolean if the mnemonic is valid\n *\n * @example\n *\n * var valid = Mnemonic.isValid('lab rescue lunch elbow recall phrase perfect donkey biology guess moment husband');\n * // true\n *\n * @param {String} mnemonic - The mnemonic string\n * @param {String} [wordlist] - The wordlist used\n * @returns {boolean}\n */\nMnemonic.isValid = function (mnemonic, wordlist) {\n  mnemonic = unorm.nfkd(mnemonic)\n  wordlist = wordlist || Mnemonic._getDictionary(mnemonic)\n\n  if (!wordlist) {\n    return false\n  }\n\n  var words = mnemonic.split(' ')\n  var bin = ''\n  for (var i = 0; i < words.length; i++) {\n    var ind = wordlist.indexOf(words[i])\n    if (ind < 0) return false\n    bin = bin + ('00000000000' + ind.toString(2)).slice(-11)\n  }\n\n  var cs = bin.length / 33\n  var hashBits = bin.slice(-cs)\n  var nonhashBits = bin.slice(0, bin.length - cs)\n  var buf = Buffer.alloc(nonhashBits.length / 8)\n  for (i = 0; i < nonhashBits.length / 8; i++) {\n    buf.writeUInt8(parseInt(bin.slice(i * 8, (i + 1) * 8), 2), i)\n  }\n  var expectedHashBits = Mnemonic._entropyChecksum(buf)\n  return expectedHashBits === hashBits\n}\n\n/**\n * Internal function to check if a mnemonic belongs to a wordlist.\n *\n * @param {String} mnemonic - The mnemonic string\n * @param {String} wordlist - The wordlist\n * @returns {boolean}\n */\nMnemonic._belongsToWordlist = function (mnemonic, wordlist) {\n  var words = unorm.nfkd(mnemonic).split(' ')\n  for (var i = 0; i < words.length; i++) {\n    var ind = wordlist.indexOf(words[i])\n    if (ind < 0) return false\n  }\n  return true\n}\n\n/**\n * Internal function to detect the wordlist used to generate the mnemonic.\n *\n * @param {String} mnemonic - The mnemonic string\n * @returns {Array} the wordlist or null\n */\nMnemonic._getDictionary = function (mnemonic) {\n  if (!mnemonic) return null\n\n  var dicts = Object.keys(Mnemonic.Words)\n  for (var i = 0; i < dicts.length; i++) {\n    var key = dicts[i]\n    if (Mnemonic._belongsToWordlist(mnemonic, Mnemonic.Words[key])) {\n      return Mnemonic.Words[key]\n    }\n  }\n  return null\n}\n\n/**\n * Will generate a seed based on the mnemonic and optional passphrase. Note that\n * this seed is absolutely NOT the seed that is output by .toSeed(). These are\n * two different seeds. The seed you want to put in here, if any, is just some\n * random byte string. Normally you should rely on the .fromRandom() method.\n *\n * @param {String} [passphrase]\n * @returns {Buffer}\n */\nMnemonic.prototype.toSeed = function (passphrase) {\n  passphrase = passphrase || ''\n  return pbkdf2(unorm.nfkd(this.phrase), unorm.nfkd('mnemonic' + passphrase), 2048, 64)\n}\n\n/**\n * Will generate a Mnemonic object based on a seed.\n *\n * @param {Buffer} [seed]\n * @param {string} [wordlist]\n * @returns {Mnemonic}\n */\nMnemonic.fromSeed = function (seed, wordlist) {\n  $.checkArgument(Buffer.isBuffer(seed), 'seed must be a Buffer.')\n  $.checkArgument(_.isArray(wordlist) || _.isString(wordlist), 'wordlist must be a string or an array.')\n  return new Mnemonic(seed, wordlist)\n}\n\n/**\n *\n * Generates a HD Private Key from a Mnemonic.\n * Optionally receive a passphrase and bitcoin network.\n *\n * @param {String=} [passphrase]\n * @param {Network|String|number=} [network] - The network: 'livenet' or 'testnet'\n * @returns {HDPrivateKey}\n */\nMnemonic.prototype.toHDPrivateKey = function (passphrase, network) {\n  var seed = this.toSeed(passphrase)\n  return HDPrivateKey.fromSeed(seed, network)\n}\n\n/**\n * Will return a the string representation of the mnemonic\n *\n * @returns {String} Mnemonic\n */\nMnemonic.prototype.toString = function () {\n  return this.phrase\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {String} Mnemonic\n */\nMnemonic.prototype.inspect = function () {\n  return '<Mnemonic: ' + this.toString() + ' >'\n}\n\n/**\n * Internal function to generate a random mnemonic\n *\n * @param {Number} ENT - Entropy size, defaults to 128\n * @param {Array} wordlist - Array of words to generate the mnemonic\n * @returns {String} Mnemonic string\n */\nMnemonic._mnemonic = function (ENT, wordlist) {\n  var buf = Random.getRandomBuffer(ENT / 8)\n  return Mnemonic._entropy2mnemonic(buf, wordlist)\n}\n\n/**\n * Internal function to generate mnemonic based on entropy\n *\n * @param {Number} entropy - Entropy buffer\n * @param {Array} wordlist - Array of words to generate the mnemonic\n * @returns {String} Mnemonic string\n */\nMnemonic._entropy2mnemonic = function (entropy, wordlist) {\n  var bin = ''\n  for (var i = 0; i < entropy.length; i++) {\n    bin = bin + ('00000000' + entropy[i].toString(2)).slice(-8)\n  }\n\n  bin = bin + Mnemonic._entropyChecksum(entropy)\n  if (bin.length % 11 !== 0) {\n    throw new errors.InvalidEntropy(bin)\n  }\n  var mnemonic = []\n  for (i = 0; i < bin.length / 11; i++) {\n    var wi = parseInt(bin.slice(i * 11, (i + 1) * 11), 2)\n    mnemonic.push(wordlist[wi])\n  }\n  var ret\n  if (wordlist === Mnemonic.Words.JAPANESE) {\n    ret = mnemonic.join('\\u3000')\n  } else {\n    ret = mnemonic.join(' ')\n  }\n  return ret\n}\n\n/**\n * Internal function to create checksum of entropy\n *\n * @param entropy\n * @returns {string} Checksum of entropy length / 32\n * @private\n */\nMnemonic._entropyChecksum = function (entropy) {\n  var hash = Hash.sha256(entropy)\n  var bits = entropy.length * 8\n  var cs = bits / 32\n\n  var hashbits = new BN(hash.toString('hex'), 16).toString(2)\n\n  // zero pad the hash bits\n  while (hashbits.length % 256 !== 0) {\n    hashbits = '0' + hashbits\n  }\n\n  var checksum = hashbits.slice(0, cs)\n\n  return checksum\n}\n\nmodule.exports = Mnemonic\n","if (process.browser) module.exports = require('./pbkdf2.browser')\nelse module.exports = require('./pbkdf2.node')\n","'use strict'\n\nvar hash = require('hash.js')\n\n/**\n * PDKBF2\n * Credit to: https://github.com/stayradiated/pbkdf2-sha512\n * Copyright (c) 2014, JP Richardson Copyright (c) 2010-2011 Intalio Pte, All Rights Reserved\n */\nfunction pbkdf2 (key, salt, iterations, dkLen) {\n  var hLen = 64 // SHA512 Mac length\n  if (dkLen > (Math.pow(2, 32) - 1) * hLen) {\n    throw Error('Requested key length too long')\n  }\n\n  if (typeof key !== 'string' && !Buffer.isBuffer(key)) {\n    throw new TypeError('key must a string or Buffer')\n  }\n\n  if (typeof salt !== 'string' && !Buffer.isBuffer(salt)) {\n    throw new TypeError('salt must a string or Buffer')\n  }\n\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  if (typeof salt === 'string') {\n    salt = Buffer.from(salt)\n  }\n\n  var DK = Buffer.alloc(dkLen)\n\n  var U = Buffer.alloc(hLen)\n  var T = Buffer.alloc(hLen)\n  var block1 = Buffer.alloc(salt.length + 4)\n\n  var l = Math.ceil(dkLen / hLen)\n  var r = dkLen - (l - 1) * hLen\n\n  salt.copy(block1, 0, 0, salt.length)\n  for (var i = 1; i <= l; i++) {\n    block1[salt.length + 0] = (i >> 24 & 0xff)\n    block1[salt.length + 1] = (i >> 16 & 0xff)\n    block1[salt.length + 2] = (i >> 8 & 0xff)\n    block1[salt.length + 3] = (i >> 0 & 0xff)\n\n    U = hash.hmac(hash.sha512, key).update(block1).digest()\n\n    U.copy(T, 0, 0, hLen)\n\n    for (var j = 1; j < iterations; j++) {\n      U = hash.hmac(hash.sha512, key).update(U).digest()\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k]\n      }\n    }\n\n    var destPos = (i - 1) * hLen\n    var len = (i === l ? r : hLen)\n    T.copy(DK, destPos, 0, len)\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","module.exports = {\n  'CHINESE': require('./chinese'),\n  'ENGLISH': require('./english'),\n  'FRENCH': require('./french'),\n  'ITALIAN': require('./italian'),\n  'JAPANESE': require('./japanese'),\n  'SPANISH': require('./spanish')\n}\n","'use strict'\n\nvar chinese = ['的', '一', '是', '在', '不', '了', '有', '和', '人', '这', '中', '大', '为', '上', '个', '国', '我', '以', '要', '他', '时', '来', '用', '们', '生', '到', '作', '地', '于', '出', '就', '分', '对', '成', '会', '可', '主', '发', '年', '动', '同', '工', '也', '能', '下', '过', '子', '说', '产', '种', '面', '而', '方', '后', '多', '定', '行', '学', '法', '所', '民', '得', '经', '十', '三', '之', '进', '着', '等', '部', '度', '家', '电', '力', '里', '如', '水', '化', '高', '自', '二', '理', '起', '小', '物', '现', '实', '加', '量', '都', '两', '体', '制', '机', '当', '使', '点', '从', '业', '本', '去', '把', '性', '好', '应', '开', '它', '合', '还', '因', '由', '其', '些', '然', '前', '外', '天', '政', '四', '日', '那', '社', '义', '事', '平', '形', '相', '全', '表', '间', '样', '与', '关', '各', '重', '新', '线', '内', '数', '正', '心', '反', '你', '明', '看', '原', '又', '么', '利', '比', '或', '但', '质', '气', '第', '向', '道', '命', '此', '变', '条', '只', '没', '结', '解', '问', '意', '建', '月', '公', '无', '系', '军', '很', '情', '者', '最', '立', '代', '想', '已', '通', '并', '提', '直', '题', '党', '程', '展', '五', '果', '料', '象', '员', '革', '位', '入', '常', '文', '总', '次', '品', '式', '活', '设', '及', '管', '特', '件', '长', '求', '老', '头', '基', '资', '边', '流', '路', '级', '少', '图', '山', '统', '接', '知', '较', '将', '组', '见', '计', '别', '她', '手', '角', '期', '根', '论', '运', '农', '指', '几', '九', '区', '强', '放', '决', '西', '被', '干', '做', '必', '战', '先', '回', '则', '任', '取', '据', '处', '队', '南', '给', '色', '光', '门', '即', '保', '治', '北', '造', '百', '规', '热', '领', '七', '海', '口', '东', '导', '器', '压', '志', '世', '金', '增', '争', '济', '阶', '油', '思', '术', '极', '交', '受', '联', '什', '认', '六', '共', '权', '收', '证', '改', '清', '美', '再', '采', '转', '更', '单', '风', '切', '打', '白', '教', '速', '花', '带', '安', '场', '身', '车', '例', '真', '务', '具', '万', '每', '目', '至', '达', '走', '积', '示', '议', '声', '报', '斗', '完', '类', '八', '离', '华', '名', '确', '才', '科', '张', '信', '马', '节', '话', '米', '整', '空', '元', '况', '今', '集', '温', '传', '土', '许', '步', '群', '广', '石', '记', '需', '段', '研', '界', '拉', '林', '律', '叫', '且', '究', '观', '越', '织', '装', '影', '算', '低', '持', '音', '众', '书', '布', '复', '容', '儿', '须', '际', '商', '非', '验', '连', '断', '深', '难', '近', '矿', '千', '周', '委', '素', '技', '备', '半', '办', '青', '省', '列', '习', '响', '约', '支', '般', '史', '感', '劳', '便', '团', '往', '酸', '历', '市', '克', '何', '除', '消', '构', '府', '称', '太', '准', '精', '值', '号', '率', '族', '维', '划', '选', '标', '写', '存', '候', '毛', '亲', '快', '效', '斯', '院', '查', '江', '型', '眼', '王', '按', '格', '养', '易', '置', '派', '层', '片', '始', '却', '专', '状', '育', '厂', '京', '识', '适', '属', '圆', '包', '火', '住', '调', '满', '县', '局', '照', '参', '红', '细', '引', '听', '该', '铁', '价', '严', '首', '底', '液', '官', '德', '随', '病', '苏', '失', '尔', '死', '讲', '配', '女', '黄', '推', '显', '谈', '罪', '神', '艺', '呢', '席', '含', '企', '望', '密', '批', '营', '项', '防', '举', '球', '英', '氧', '势', '告', '李', '台', '落', '木', '帮', '轮', '破', '亚', '师', '围', '注', '远', '字', '材', '排', '供', '河', '态', '封', '另', '施', '减', '树', '溶', '怎', '止', '案', '言', '士', '均', '武', '固', '叶', '鱼', '波', '视', '仅', '费', '紧', '爱', '左', '章', '早', '朝', '害', '续', '轻', '服', '试', '食', '充', '兵', '源', '判', '护', '司', '足', '某', '练', '差', '致', '板', '田', '降', '黑', '犯', '负', '击', '范', '继', '兴', '似', '余', '坚', '曲', '输', '修', '故', '城', '夫', '够', '送', '笔', '船', '占', '右', '财', '吃', '富', '春', '职', '觉', '汉', '画', '功', '巴', '跟', '虽', '杂', '飞', '检', '吸', '助', '升', '阳', '互', '初', '创', '抗', '考', '投', '坏', '策', '古', '径', '换', '未', '跑', '留', '钢', '曾', '端', '责', '站', '简', '述', '钱', '副', '尽', '帝', '射', '草', '冲', '承', '独', '令', '限', '阿', '宣', '环', '双', '请', '超', '微', '让', '控', '州', '良', '轴', '找', '否', '纪', '益', '依', '优', '顶', '础', '载', '倒', '房', '突', '坐', '粉', '敌', '略', '客', '袁', '冷', '胜', '绝', '析', '块', '剂', '测', '丝', '协', '诉', '念', '陈', '仍', '罗', '盐', '友', '洋', '错', '苦', '夜', '刑', '移', '频', '逐', '靠', '混', '母', '短', '皮', '终', '聚', '汽', '村', '云', '哪', '既', '距', '卫', '停', '烈', '央', '察', '烧', '迅', '境', '若', '印', '洲', '刻', '括', '激', '孔', '搞', '甚', '室', '待', '核', '校', '散', '侵', '吧', '甲', '游', '久', '菜', '味', '旧', '模', '湖', '货', '损', '预', '阻', '毫', '普', '稳', '乙', '妈', '植', '息', '扩', '银', '语', '挥', '酒', '守', '拿', '序', '纸', '医', '缺', '雨', '吗', '针', '刘', '啊', '急', '唱', '误', '训', '愿', '审', '附', '获', '茶', '鲜', '粮', '斤', '孩', '脱', '硫', '肥', '善', '龙', '演', '父', '渐', '血', '欢', '械', '掌', '歌', '沙', '刚', '攻', '谓', '盾', '讨', '晚', '粒', '乱', '燃', '矛', '乎', '杀', '药', '宁', '鲁', '贵', '钟', '煤', '读', '班', '伯', '香', '介', '迫', '句', '丰', '培', '握', '兰', '担', '弦', '蛋', '沉', '假', '穿', '执', '答', '乐', '谁', '顺', '烟', '缩', '征', '脸', '喜', '松', '脚', '困', '异', '免', '背', '星', '福', '买', '染', '井', '概', '慢', '怕', '磁', '倍', '祖', '皇', '促', '静', '补', '评', '翻', '肉', '践', '尼', '衣', '宽', '扬', '棉', '希', '伤', '操', '垂', '秋', '宜', '氢', '套', '督', '振', '架', '亮', '末', '宪', '庆', '编', '牛', '触', '映', '雷', '销', '诗', '座', '居', '抓', '裂', '胞', '呼', '娘', '景', '威', '绿', '晶', '厚', '盟', '衡', '鸡', '孙', '延', '危', '胶', '屋', '乡', '临', '陆', '顾', '掉', '呀', '灯', '岁', '措', '束', '耐', '剧', '玉', '赵', '跳', '哥', '季', '课', '凯', '胡', '额', '款', '绍', '卷', '齐', '伟', '蒸', '殖', '永', '宗', '苗', '川', '炉', '岩', '弱', '零', '杨', '奏', '沿', '露', '杆', '探', '滑', '镇', '饭', '浓', '航', '怀', '赶', '库', '夺', '伊', '灵', '税', '途', '灭', '赛', '归', '召', '鼓', '播', '盘', '裁', '险', '康', '唯', '录', '菌', '纯', '借', '糖', '盖', '横', '符', '私', '努', '堂', '域', '枪', '润', '幅', '哈', '竟', '熟', '虫', '泽', '脑', '壤', '碳', '欧', '遍', '侧', '寨', '敢', '彻', '虑', '斜', '薄', '庭', '纳', '弹', '饲', '伸', '折', '麦', '湿', '暗', '荷', '瓦', '塞', '床', '筑', '恶', '户', '访', '塔', '奇', '透', '梁', '刀', '旋', '迹', '卡', '氯', '遇', '份', '毒', '泥', '退', '洗', '摆', '灰', '彩', '卖', '耗', '夏', '择', '忙', '铜', '献', '硬', '予', '繁', '圈', '雪', '函', '亦', '抽', '篇', '阵', '阴', '丁', '尺', '追', '堆', '雄', '迎', '泛', '爸', '楼', '避', '谋', '吨', '野', '猪', '旗', '累', '偏', '典', '馆', '索', '秦', '脂', '潮', '爷', '豆', '忽', '托', '惊', '塑', '遗', '愈', '朱', '替', '纤', '粗', '倾', '尚', '痛', '楚', '谢', '奋', '购', '磨', '君', '池', '旁', '碎', '骨', '监', '捕', '弟', '暴', '割', '贯', '殊', '释', '词', '亡', '壁', '顿', '宝', '午', '尘', '闻', '揭', '炮', '残', '冬', '桥', '妇', '警', '综', '招', '吴', '付', '浮', '遭', '徐', '您', '摇', '谷', '赞', '箱', '隔', '订', '男', '吹', '园', '纷', '唐', '败', '宋', '玻', '巨', '耕', '坦', '荣', '闭', '湾', '键', '凡', '驻', '锅', '救', '恩', '剥', '凝', '碱', '齿', '截', '炼', '麻', '纺', '禁', '废', '盛', '版', '缓', '净', '睛', '昌', '婚', '涉', '筒', '嘴', '插', '岸', '朗', '庄', '街', '藏', '姑', '贸', '腐', '奴', '啦', '惯', '乘', '伙', '恢', '匀', '纱', '扎', '辩', '耳', '彪', '臣', '亿', '璃', '抵', '脉', '秀', '萨', '俄', '网', '舞', '店', '喷', '纵', '寸', '汗', '挂', '洪', '贺', '闪', '柬', '爆', '烯', '津', '稻', '墙', '软', '勇', '像', '滚', '厘', '蒙', '芳', '肯', '坡', '柱', '荡', '腿', '仪', '旅', '尾', '轧', '冰', '贡', '登', '黎', '削', '钻', '勒', '逃', '障', '氨', '郭', '峰', '币', '港', '伏', '轨', '亩', '毕', '擦', '莫', '刺', '浪', '秘', '援', '株', '健', '售', '股', '岛', '甘', '泡', '睡', '童', '铸', '汤', '阀', '休', '汇', '舍', '牧', '绕', '炸', '哲', '磷', '绩', '朋', '淡', '尖', '启', '陷', '柴', '呈', '徒', '颜', '泪', '稍', '忘', '泵', '蓝', '拖', '洞', '授', '镜', '辛', '壮', '锋', '贫', '虚', '弯', '摩', '泰', '幼', '廷', '尊', '窗', '纲', '弄', '隶', '疑', '氏', '宫', '姐', '震', '瑞', '怪', '尤', '琴', '循', '描', '膜', '违', '夹', '腰', '缘', '珠', '穷', '森', '枝', '竹', '沟', '催', '绳', '忆', '邦', '剩', '幸', '浆', '栏', '拥', '牙', '贮', '礼', '滤', '钠', '纹', '罢', '拍', '咱', '喊', '袖', '埃', '勤', '罚', '焦', '潜', '伍', '墨', '欲', '缝', '姓', '刊', '饱', '仿', '奖', '铝', '鬼', '丽', '跨', '默', '挖', '链', '扫', '喝', '袋', '炭', '污', '幕', '诸', '弧', '励', '梅', '奶', '洁', '灾', '舟', '鉴', '苯', '讼', '抱', '毁', '懂', '寒', '智', '埔', '寄', '届', '跃', '渡', '挑', '丹', '艰', '贝', '碰', '拔', '爹', '戴', '码', '梦', '芽', '熔', '赤', '渔', '哭', '敬', '颗', '奔', '铅', '仲', '虎', '稀', '妹', '乏', '珍', '申', '桌', '遵', '允', '隆', '螺', '仓', '魏', '锐', '晓', '氮', '兼', '隐', '碍', '赫', '拨', '忠', '肃', '缸', '牵', '抢', '博', '巧', '壳', '兄', '杜', '讯', '诚', '碧', '祥', '柯', '页', '巡', '矩', '悲', '灌', '龄', '伦', '票', '寻', '桂', '铺', '圣', '恐', '恰', '郑', '趣', '抬', '荒', '腾', '贴', '柔', '滴', '猛', '阔', '辆', '妻', '填', '撤', '储', '签', '闹', '扰', '紫', '砂', '递', '戏', '吊', '陶', '伐', '喂', '疗', '瓶', '婆', '抚', '臂', '摸', '忍', '虾', '蜡', '邻', '胸', '巩', '挤', '偶', '弃', '槽', '劲', '乳', '邓', '吉', '仁', '烂', '砖', '租', '乌', '舰', '伴', '瓜', '浅', '丙', '暂', '燥', '橡', '柳', '迷', '暖', '牌', '秧', '胆', '详', '簧', '踏', '瓷', '谱', '呆', '宾', '糊', '洛', '辉', '愤', '竞', '隙', '怒', '粘', '乃', '绪', '肩', '籍', '敏', '涂', '熙', '皆', '侦', '悬', '掘', '享', '纠', '醒', '狂', '锁', '淀', '恨', '牲', '霸', '爬', '赏', '逆', '玩', '陵', '祝', '秒', '浙', '貌', '役', '彼', '悉', '鸭', '趋', '凤', '晨', '畜', '辈', '秩', '卵', '署', '梯', '炎', '滩', '棋', '驱', '筛', '峡', '冒', '啥', '寿', '译', '浸', '泉', '帽', '迟', '硅', '疆', '贷', '漏', '稿', '冠', '嫩', '胁', '芯', '牢', '叛', '蚀', '奥', '鸣', '岭', '羊', '凭', '串', '塘', '绘', '酵', '融', '盆', '锡', '庙', '筹', '冻', '辅', '摄', '袭', '筋', '拒', '僚', '旱', '钾', '鸟', '漆', '沈', '眉', '疏', '添', '棒', '穗', '硝', '韩', '逼', '扭', '侨', '凉', '挺', '碗', '栽', '炒', '杯', '患', '馏', '劝', '豪', '辽', '勃', '鸿', '旦', '吏', '拜', '狗', '埋', '辊', '掩', '饮', '搬', '骂', '辞', '勾', '扣', '估', '蒋', '绒', '雾', '丈', '朵', '姆', '拟', '宇', '辑', '陕', '雕', '偿', '蓄', '崇', '剪', '倡', '厅', '咬', '驶', '薯', '刷', '斥', '番', '赋', '奉', '佛', '浇', '漫', '曼', '扇', '钙', '桃', '扶', '仔', '返', '俗', '亏', '腔', '鞋', '棱', '覆', '框', '悄', '叔', '撞', '骗', '勘', '旺', '沸', '孤', '吐', '孟', '渠', '屈', '疾', '妙', '惜', '仰', '狠', '胀', '谐', '抛', '霉', '桑', '岗', '嘛', '衰', '盗', '渗', '脏', '赖', '涌', '甜', '曹', '阅', '肌', '哩', '厉', '烃', '纬', '毅', '昨', '伪', '症', '煮', '叹', '钉', '搭', '茎', '笼', '酷', '偷', '弓', '锥', '恒', '杰', '坑', '鼻', '翼', '纶', '叙', '狱', '逮', '罐', '络', '棚', '抑', '膨', '蔬', '寺', '骤', '穆', '冶', '枯', '册', '尸', '凸', '绅', '坯', '牺', '焰', '轰', '欣', '晋', '瘦', '御', '锭', '锦', '丧', '旬', '锻', '垄', '搜', '扑', '邀', '亭', '酯', '迈', '舒', '脆', '酶', '闲', '忧', '酚', '顽', '羽', '涨', '卸', '仗', '陪', '辟', '惩', '杭', '姚', '肚', '捉', '飘', '漂', '昆', '欺', '吾', '郎', '烷', '汁', '呵', '饰', '萧', '雅', '邮', '迁', '燕', '撒', '姻', '赴', '宴', '烦', '债', '帐', '斑', '铃', '旨', '醇', '董', '饼', '雏', '姿', '拌', '傅', '腹', '妥', '揉', '贤', '拆', '歪', '葡', '胺', '丢', '浩', '徽', '昂', '垫', '挡', '览', '贪', '慰', '缴', '汪', '慌', '冯', '诺', '姜', '谊', '凶', '劣', '诬', '耀', '昏', '躺', '盈', '骑', '乔', '溪', '丛', '卢', '抹', '闷', '咨', '刮', '驾', '缆', '悟', '摘', '铒', '掷', '颇', '幻', '柄', '惠', '惨', '佳', '仇', '腊', '窝', '涤', '剑', '瞧', '堡', '泼', '葱', '罩', '霍', '捞', '胎', '苍', '滨', '俩', '捅', '湘', '砍', '霞', '邵', '萄', '疯', '淮', '遂', '熊', '粪', '烘', '宿', '档', '戈', '驳', '嫂', '裕', '徙', '箭', '捐', '肠', '撑', '晒', '辨', '殿', '莲', '摊', '搅', '酱', '屏', '疫', '哀', '蔡', '堵', '沫', '皱', '畅', '叠', '阁', '莱', '敲', '辖', '钩', '痕', '坝', '巷', '饿', '祸', '丘', '玄', '溜', '曰', '逻', '彭', '尝', '卿', '妨', '艇', '吞', '韦', '怨', '矮', '歇']\n\nmodule.exports = chinese\n","'use strict'\n\nvar english = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis', 'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz', 'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle', 'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic', 'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow', 'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future', 'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym', 'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid', 'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory', 'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just', 'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know', 'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics', 'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth', 'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut', 'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone', 'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid', 'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote', 'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural', 'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system', 'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical', 'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility', 'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage', 'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong', 'yard', 'year', 'yellow', 'you', 'young', 'youth', 'zebra', 'zero', 'zone', 'zoo']\n\nmodule.exports = english\n","'use string'\n\nvar french = ['abaisser', 'abandon', 'abdiquer', 'abeille', 'abolir', 'aborder', 'aboutir', 'aboyer', 'abrasif', 'abreuver', 'abriter', 'abroger', 'abrupt', 'absence', 'absolu', 'absurde', 'abusif', 'abyssal', 'académie', 'acajou', 'acarien', 'accabler', 'accepter', 'acclamer', 'accolade', 'accroche', 'accuser', 'acerbe', 'achat', 'acheter', 'aciduler', 'acier', 'acompte', 'acquérir', 'acronyme', 'acteur', 'actif', 'actuel', 'adepte', 'adéquat', 'adhésif', 'adjectif', 'adjuger', 'admettre', 'admirer', 'adopter', 'adorer', 'adoucir', 'adresse', 'adroit', 'adulte', 'adverbe', 'aérer', 'aéronef', 'affaire', 'affecter', 'affiche', 'affreux', 'affubler', 'agacer', 'agencer', 'agile', 'agiter', 'agrafer', 'agréable', 'agrume', 'aider', 'aiguille', 'ailier', 'aimable', 'aisance', 'ajouter', 'ajuster', 'alarmer', 'alchimie', 'alerte', 'algèbre', 'algue', 'aliéner', 'aliment', 'alléger', 'alliage', 'allouer', 'allumer', 'alourdir', 'alpaga', 'altesse', 'alvéole', 'amateur', 'ambigu', 'ambre', 'aménager', 'amertume', 'amidon', 'amiral', 'amorcer', 'amour', 'amovible', 'amphibie', 'ampleur', 'amusant', 'analyse', 'anaphore', 'anarchie', 'anatomie', 'ancien', 'anéantir', 'angle', 'angoisse', 'anguleux', 'animal', 'annexer', 'annonce', 'annuel', 'anodin', 'anomalie', 'anonyme', 'anormal', 'antenne', 'antidote', 'anxieux', 'apaiser', 'apéritif', 'aplanir', 'apologie', 'appareil', 'appeler', 'apporter', 'appuyer', 'aquarium', 'aqueduc', 'arbitre', 'arbuste', 'ardeur', 'ardoise', 'argent', 'arlequin', 'armature', 'armement', 'armoire', 'armure', 'arpenter', 'arracher', 'arriver', 'arroser', 'arsenic', 'artériel', 'article', 'aspect', 'asphalte', 'aspirer', 'assaut', 'asservir', 'assiette', 'associer', 'assurer', 'asticot', 'astre', 'astuce', 'atelier', 'atome', 'atrium', 'atroce', 'attaque', 'attentif', 'attirer', 'attraper', 'aubaine', 'auberge', 'audace', 'audible', 'augurer', 'aurore', 'automne', 'autruche', 'avaler', 'avancer', 'avarice', 'avenir', 'averse', 'aveugle', 'aviateur', 'avide', 'avion', 'aviser', 'avoine', 'avouer', 'avril', 'axial', 'axiome', 'badge', 'bafouer', 'bagage', 'baguette', 'baignade', 'balancer', 'balcon', 'baleine', 'balisage', 'bambin', 'bancaire', 'bandage', 'banlieue', 'bannière', 'banquier', 'barbier', 'baril', 'baron', 'barque', 'barrage', 'bassin', 'bastion', 'bataille', 'bateau', 'batterie', 'baudrier', 'bavarder', 'belette', 'bélier', 'belote', 'bénéfice', 'berceau', 'berger', 'berline', 'bermuda', 'besace', 'besogne', 'bétail', 'beurre', 'biberon', 'bicycle', 'bidule', 'bijou', 'bilan', 'bilingue', 'billard', 'binaire', 'biologie', 'biopsie', 'biotype', 'biscuit', 'bison', 'bistouri', 'bitume', 'bizarre', 'blafard', 'blague', 'blanchir', 'blessant', 'blinder', 'blond', 'bloquer', 'blouson', 'bobard', 'bobine', 'boire', 'boiser', 'bolide', 'bonbon', 'bondir', 'bonheur', 'bonifier', 'bonus', 'bordure', 'borne', 'botte', 'boucle', 'boueux', 'bougie', 'boulon', 'bouquin', 'bourse', 'boussole', 'boutique', 'boxeur', 'branche', 'brasier', 'brave', 'brebis', 'brèche', 'breuvage', 'bricoler', 'brigade', 'brillant', 'brioche', 'brique', 'brochure', 'broder', 'bronzer', 'brousse', 'broyeur', 'brume', 'brusque', 'brutal', 'bruyant', 'buffle', 'buisson', 'bulletin', 'bureau', 'burin', 'bustier', 'butiner', 'butoir', 'buvable', 'buvette', 'cabanon', 'cabine', 'cachette', 'cadeau', 'cadre', 'caféine', 'caillou', 'caisson', 'calculer', 'calepin', 'calibre', 'calmer', 'calomnie', 'calvaire', 'camarade', 'caméra', 'camion', 'campagne', 'canal', 'caneton', 'canon', 'cantine', 'canular', 'capable', 'caporal', 'caprice', 'capsule', 'capter', 'capuche', 'carabine', 'carbone', 'caresser', 'caribou', 'carnage', 'carotte', 'carreau', 'carton', 'cascade', 'casier', 'casque', 'cassure', 'causer', 'caution', 'cavalier', 'caverne', 'caviar', 'cédille', 'ceinture', 'céleste', 'cellule', 'cendrier', 'censurer', 'central', 'cercle', 'cérébral', 'cerise', 'cerner', 'cerveau', 'cesser', 'chagrin', 'chaise', 'chaleur', 'chambre', 'chance', 'chapitre', 'charbon', 'chasseur', 'chaton', 'chausson', 'chavirer', 'chemise', 'chenille', 'chéquier', 'chercher', 'cheval', 'chien', 'chiffre', 'chignon', 'chimère', 'chiot', 'chlorure', 'chocolat', 'choisir', 'chose', 'chouette', 'chrome', 'chute', 'cigare', 'cigogne', 'cimenter', 'cinéma', 'cintrer', 'circuler', 'cirer', 'cirque', 'citerne', 'citoyen', 'citron', 'civil', 'clairon', 'clameur', 'claquer', 'classe', 'clavier', 'client', 'cligner', 'climat', 'clivage', 'cloche', 'clonage', 'cloporte', 'cobalt', 'cobra', 'cocasse', 'cocotier', 'coder', 'codifier', 'coffre', 'cogner', 'cohésion', 'coiffer', 'coincer', 'colère', 'colibri', 'colline', 'colmater', 'colonel', 'combat', 'comédie', 'commande', 'compact', 'concert', 'conduire', 'confier', 'congeler', 'connoter', 'consonne', 'contact', 'convexe', 'copain', 'copie', 'corail', 'corbeau', 'cordage', 'corniche', 'corpus', 'correct', 'cortège', 'cosmique', 'costume', 'coton', 'coude', 'coupure', 'courage', 'couteau', 'couvrir', 'coyote', 'crabe', 'crainte', 'cravate', 'crayon', 'créature', 'créditer', 'crémeux', 'creuser', 'crevette', 'cribler', 'crier', 'cristal', 'critère', 'croire', 'croquer', 'crotale', 'crucial', 'cruel', 'crypter', 'cubique', 'cueillir', 'cuillère', 'cuisine', 'cuivre', 'culminer', 'cultiver', 'cumuler', 'cupide', 'curatif', 'curseur', 'cyanure', 'cycle', 'cylindre', 'cynique', 'daigner', 'damier', 'danger', 'danseur', 'dauphin', 'débattre', 'débiter', 'déborder', 'débrider', 'débutant', 'décaler', 'décembre', 'déchirer', 'décider', 'déclarer', 'décorer', 'décrire', 'décupler', 'dédale', 'déductif', 'déesse', 'défensif', 'défiler', 'défrayer', 'dégager', 'dégivrer', 'déglutir', 'dégrafer', 'déjeuner', 'délice', 'déloger', 'demander', 'demeurer', 'démolir', 'dénicher', 'dénouer', 'dentelle', 'dénuder', 'départ', 'dépenser', 'déphaser', 'déplacer', 'déposer', 'déranger', 'dérober', 'désastre', 'descente', 'désert', 'désigner', 'désobéir', 'dessiner', 'destrier', 'détacher', 'détester', 'détourer', 'détresse', 'devancer', 'devenir', 'deviner', 'devoir', 'diable', 'dialogue', 'diamant', 'dicter', 'différer', 'digérer', 'digital', 'digne', 'diluer', 'dimanche', 'diminuer', 'dioxyde', 'directif', 'diriger', 'discuter', 'disposer', 'dissiper', 'distance', 'divertir', 'diviser', 'docile', 'docteur', 'dogme', 'doigt', 'domaine', 'domicile', 'dompter', 'donateur', 'donjon', 'donner', 'dopamine', 'dortoir', 'dorure', 'dosage', 'doseur', 'dossier', 'dotation', 'douanier', 'double', 'douceur', 'douter', 'doyen', 'dragon', 'draper', 'dresser', 'dribbler', 'droiture', 'duperie', 'duplexe', 'durable', 'durcir', 'dynastie', 'éblouir', 'écarter', 'écharpe', 'échelle', 'éclairer', 'éclipse', 'éclore', 'écluse', 'école', 'économie', 'écorce', 'écouter', 'écraser', 'écrémer', 'écrivain', 'écrou', 'écume', 'écureuil', 'édifier', 'éduquer', 'effacer', 'effectif', 'effigie', 'effort', 'effrayer', 'effusion', 'égaliser', 'égarer', 'éjecter', 'élaborer', 'élargir', 'électron', 'élégant', 'éléphant', 'élève', 'éligible', 'élitisme', 'éloge', 'élucider', 'éluder', 'emballer', 'embellir', 'embryon', 'émeraude', 'émission', 'emmener', 'émotion', 'émouvoir', 'empereur', 'employer', 'emporter', 'emprise', 'émulsion', 'encadrer', 'enchère', 'enclave', 'encoche', 'endiguer', 'endosser', 'endroit', 'enduire', 'énergie', 'enfance', 'enfermer', 'enfouir', 'engager', 'engin', 'englober', 'énigme', 'enjamber', 'enjeu', 'enlever', 'ennemi', 'ennuyeux', 'enrichir', 'enrobage', 'enseigne', 'entasser', 'entendre', 'entier', 'entourer', 'entraver', 'énumérer', 'envahir', 'enviable', 'envoyer', 'enzyme', 'éolien', 'épaissir', 'épargne', 'épatant', 'épaule', 'épicerie', 'épidémie', 'épier', 'épilogue', 'épine', 'épisode', 'épitaphe', 'époque', 'épreuve', 'éprouver', 'épuisant', 'équerre', 'équipe', 'ériger', 'érosion', 'erreur', 'éruption', 'escalier', 'espadon', 'espèce', 'espiègle', 'espoir', 'esprit', 'esquiver', 'essayer', 'essence', 'essieu', 'essorer', 'estime', 'estomac', 'estrade', 'étagère', 'étaler', 'étanche', 'étatique', 'éteindre', 'étendoir', 'éternel', 'éthanol', 'éthique', 'ethnie', 'étirer', 'étoffer', 'étoile', 'étonnant', 'étourdir', 'étrange', 'étroit', 'étude', 'euphorie', 'évaluer', 'évasion', 'éventail', 'évidence', 'éviter', 'évolutif', 'évoquer', 'exact', 'exagérer', 'exaucer', 'exceller', 'excitant', 'exclusif', 'excuse', 'exécuter', 'exemple', 'exercer', 'exhaler', 'exhorter', 'exigence', 'exiler', 'exister', 'exotique', 'expédier', 'explorer', 'exposer', 'exprimer', 'exquis', 'extensif', 'extraire', 'exulter', 'fable', 'fabuleux', 'facette', 'facile', 'facture', 'faiblir', 'falaise', 'fameux', 'famille', 'farceur', 'farfelu', 'farine', 'farouche', 'fasciner', 'fatal', 'fatigue', 'faucon', 'fautif', 'faveur', 'favori', 'fébrile', 'féconder', 'fédérer', 'félin', 'femme', 'fémur', 'fendoir', 'féodal', 'fermer', 'féroce', 'ferveur', 'festival', 'feuille', 'feutre', 'février', 'fiasco', 'ficeler', 'fictif', 'fidèle', 'figure', 'filature', 'filetage', 'filière', 'filleul', 'filmer', 'filou', 'filtrer', 'financer', 'finir', 'fiole', 'firme', 'fissure', 'fixer', 'flairer', 'flamme', 'flasque', 'flatteur', 'fléau', 'flèche', 'fleur', 'flexion', 'flocon', 'flore', 'fluctuer', 'fluide', 'fluvial', 'folie', 'fonderie', 'fongible', 'fontaine', 'forcer', 'forgeron', 'formuler', 'fortune', 'fossile', 'foudre', 'fougère', 'fouiller', 'foulure', 'fourmi', 'fragile', 'fraise', 'franchir', 'frapper', 'frayeur', 'frégate', 'freiner', 'frelon', 'frémir', 'frénésie', 'frère', 'friable', 'friction', 'frisson', 'frivole', 'froid', 'fromage', 'frontal', 'frotter', 'fruit', 'fugitif', 'fuite', 'fureur', 'furieux', 'furtif', 'fusion', 'futur', 'gagner', 'galaxie', 'galerie', 'gambader', 'garantir', 'gardien', 'garnir', 'garrigue', 'gazelle', 'gazon', 'géant', 'gélatine', 'gélule', 'gendarme', 'général', 'génie', 'genou', 'gentil', 'géologie', 'géomètre', 'géranium', 'germe', 'gestuel', 'geyser', 'gibier', 'gicler', 'girafe', 'givre', 'glace', 'glaive', 'glisser', 'globe', 'gloire', 'glorieux', 'golfeur', 'gomme', 'gonfler', 'gorge', 'gorille', 'goudron', 'gouffre', 'goulot', 'goupille', 'gourmand', 'goutte', 'graduel', 'graffiti', 'graine', 'grand', 'grappin', 'gratuit', 'gravir', 'grenat', 'griffure', 'griller', 'grimper', 'grogner', 'gronder', 'grotte', 'groupe', 'gruger', 'grutier', 'gruyère', 'guépard', 'guerrier', 'guide', 'guimauve', 'guitare', 'gustatif', 'gymnaste', 'gyrostat', 'habitude', 'hachoir', 'halte', 'hameau', 'hangar', 'hanneton', 'haricot', 'harmonie', 'harpon', 'hasard', 'hélium', 'hématome', 'herbe', 'hérisson', 'hermine', 'héron', 'hésiter', 'heureux', 'hiberner', 'hibou', 'hilarant', 'histoire', 'hiver', 'homard', 'hommage', 'homogène', 'honneur', 'honorer', 'honteux', 'horde', 'horizon', 'horloge', 'hormone', 'horrible', 'houleux', 'housse', 'hublot', 'huileux', 'humain', 'humble', 'humide', 'humour', 'hurler', 'hydromel', 'hygiène', 'hymne', 'hypnose', 'idylle', 'ignorer', 'iguane', 'illicite', 'illusion', 'image', 'imbiber', 'imiter', 'immense', 'immobile', 'immuable', 'impact', 'impérial', 'implorer', 'imposer', 'imprimer', 'imputer', 'incarner', 'incendie', 'incident', 'incliner', 'incolore', 'indexer', 'indice', 'inductif', 'inédit', 'ineptie', 'inexact', 'infini', 'infliger', 'informer', 'infusion', 'ingérer', 'inhaler', 'inhiber', 'injecter', 'injure', 'innocent', 'inoculer', 'inonder', 'inscrire', 'insecte', 'insigne', 'insolite', 'inspirer', 'instinct', 'insulter', 'intact', 'intense', 'intime', 'intrigue', 'intuitif', 'inutile', 'invasion', 'inventer', 'inviter', 'invoquer', 'ironique', 'irradier', 'irréel', 'irriter', 'isoler', 'ivoire', 'ivresse', 'jaguar', 'jaillir', 'jambe', 'janvier', 'jardin', 'jauger', 'jaune', 'javelot', 'jetable', 'jeton', 'jeudi', 'jeunesse', 'joindre', 'joncher', 'jongler', 'joueur', 'jouissif', 'journal', 'jovial', 'joyau', 'joyeux', 'jubiler', 'jugement', 'junior', 'jupon', 'juriste', 'justice', 'juteux', 'juvénile', 'kayak', 'kimono', 'kiosque', 'label', 'labial', 'labourer', 'lacérer', 'lactose', 'lagune', 'laine', 'laisser', 'laitier', 'lambeau', 'lamelle', 'lampe', 'lanceur', 'langage', 'lanterne', 'lapin', 'largeur', 'larme', 'laurier', 'lavabo', 'lavoir', 'lecture', 'légal', 'léger', 'légume', 'lessive', 'lettre', 'levier', 'lexique', 'lézard', 'liasse', 'libérer', 'libre', 'licence', 'licorne', 'liège', 'lièvre', 'ligature', 'ligoter', 'ligue', 'limer', 'limite', 'limonade', 'limpide', 'linéaire', 'lingot', 'lionceau', 'liquide', 'lisière', 'lister', 'lithium', 'litige', 'littoral', 'livreur', 'logique', 'lointain', 'loisir', 'lombric', 'loterie', 'louer', 'lourd', 'loutre', 'louve', 'loyal', 'lubie', 'lucide', 'lucratif', 'lueur', 'lugubre', 'luisant', 'lumière', 'lunaire', 'lundi', 'luron', 'lutter', 'luxueux', 'machine', 'magasin', 'magenta', 'magique', 'maigre', 'maillon', 'maintien', 'mairie', 'maison', 'majorer', 'malaxer', 'maléfice', 'malheur', 'malice', 'mallette', 'mammouth', 'mandater', 'maniable', 'manquant', 'manteau', 'manuel', 'marathon', 'marbre', 'marchand', 'mardi', 'maritime', 'marqueur', 'marron', 'marteler', 'mascotte', 'massif', 'matériel', 'matière', 'matraque', 'maudire', 'maussade', 'mauve', 'maximal', 'méchant', 'méconnu', 'médaille', 'médecin', 'méditer', 'méduse', 'meilleur', 'mélange', 'mélodie', 'membre', 'mémoire', 'menacer', 'mener', 'menhir', 'mensonge', 'mentor', 'mercredi', 'mérite', 'merle', 'messager', 'mesure', 'métal', 'météore', 'méthode', 'métier', 'meuble', 'miauler', 'microbe', 'miette', 'mignon', 'migrer', 'milieu', 'million', 'mimique', 'mince', 'minéral', 'minimal', 'minorer', 'minute', 'miracle', 'miroiter', 'missile', 'mixte', 'mobile', 'moderne', 'moelleux', 'mondial', 'moniteur', 'monnaie', 'monotone', 'monstre', 'montagne', 'monument', 'moqueur', 'morceau', 'morsure', 'mortier', 'moteur', 'motif', 'mouche', 'moufle', 'moulin', 'mousson', 'mouton', 'mouvant', 'multiple', 'munition', 'muraille', 'murène', 'murmure', 'muscle', 'muséum', 'musicien', 'mutation', 'muter', 'mutuel', 'myriade', 'myrtille', 'mystère', 'mythique', 'nageur', 'nappe', 'narquois', 'narrer', 'natation', 'nation', 'nature', 'naufrage', 'nautique', 'navire', 'nébuleux', 'nectar', 'néfaste', 'négation', 'négliger', 'négocier', 'neige', 'nerveux', 'nettoyer', 'neurone', 'neutron', 'neveu', 'niche', 'nickel', 'nitrate', 'niveau', 'noble', 'nocif', 'nocturne', 'noirceur', 'noisette', 'nomade', 'nombreux', 'nommer', 'normatif', 'notable', 'notifier', 'notoire', 'nourrir', 'nouveau', 'novateur', 'novembre', 'novice', 'nuage', 'nuancer', 'nuire', 'nuisible', 'numéro', 'nuptial', 'nuque', 'nutritif', 'obéir', 'objectif', 'obliger', 'obscur', 'observer', 'obstacle', 'obtenir', 'obturer', 'occasion', 'occuper', 'océan', 'octobre', 'octroyer', 'octupler', 'oculaire', 'odeur', 'odorant', 'offenser', 'officier', 'offrir', 'ogive', 'oiseau', 'oisillon', 'olfactif', 'olivier', 'ombrage', 'omettre', 'onctueux', 'onduler', 'onéreux', 'onirique', 'opale', 'opaque', 'opérer', 'opinion', 'opportun', 'opprimer', 'opter', 'optique', 'orageux', 'orange', 'orbite', 'ordonner', 'oreille', 'organe', 'orgueil', 'orifice', 'ornement', 'orque', 'ortie', 'osciller', 'osmose', 'ossature', 'otarie', 'ouragan', 'ourson', 'outil', 'outrager', 'ouvrage', 'ovation', 'oxyde', 'oxygène', 'ozone', 'paisible', 'palace', 'palmarès', 'palourde', 'palper', 'panache', 'panda', 'pangolin', 'paniquer', 'panneau', 'panorama', 'pantalon', 'papaye', 'papier', 'papoter', 'papyrus', 'paradoxe', 'parcelle', 'paresse', 'parfumer', 'parler', 'parole', 'parrain', 'parsemer', 'partager', 'parure', 'parvenir', 'passion', 'pastèque', 'paternel', 'patience', 'patron', 'pavillon', 'pavoiser', 'payer', 'paysage', 'peigne', 'peintre', 'pelage', 'pélican', 'pelle', 'pelouse', 'peluche', 'pendule', 'pénétrer', 'pénible', 'pensif', 'pénurie', 'pépite', 'péplum', 'perdrix', 'perforer', 'période', 'permuter', 'perplexe', 'persil', 'perte', 'peser', 'pétale', 'petit', 'pétrir', 'peuple', 'pharaon', 'phobie', 'phoque', 'photon', 'phrase', 'physique', 'piano', 'pictural', 'pièce', 'pierre', 'pieuvre', 'pilote', 'pinceau', 'pipette', 'piquer', 'pirogue', 'piscine', 'piston', 'pivoter', 'pixel', 'pizza', 'placard', 'plafond', 'plaisir', 'planer', 'plaque', 'plastron', 'plateau', 'pleurer', 'plexus', 'pliage', 'plomb', 'plonger', 'pluie', 'plumage', 'pochette', 'poésie', 'poète', 'pointe', 'poirier', 'poisson', 'poivre', 'polaire', 'policier', 'pollen', 'polygone', 'pommade', 'pompier', 'ponctuel', 'pondérer', 'poney', 'portique', 'position', 'posséder', 'posture', 'potager', 'poteau', 'potion', 'pouce', 'poulain', 'poumon', 'pourpre', 'poussin', 'pouvoir', 'prairie', 'pratique', 'précieux', 'prédire', 'préfixe', 'prélude', 'prénom', 'présence', 'prétexte', 'prévoir', 'primitif', 'prince', 'prison', 'priver', 'problème', 'procéder', 'prodige', 'profond', 'progrès', 'proie', 'projeter', 'prologue', 'promener', 'propre', 'prospère', 'protéger', 'prouesse', 'proverbe', 'prudence', 'pruneau', 'psychose', 'public', 'puceron', 'puiser', 'pulpe', 'pulsar', 'punaise', 'punitif', 'pupitre', 'purifier', 'puzzle', 'pyramide', 'quasar', 'querelle', 'question', 'quiétude', 'quitter', 'quotient', 'racine', 'raconter', 'radieux', 'ragondin', 'raideur', 'raisin', 'ralentir', 'rallonge', 'ramasser', 'rapide', 'rasage', 'ratisser', 'ravager', 'ravin', 'rayonner', 'réactif', 'réagir', 'réaliser', 'réanimer', 'recevoir', 'réciter', 'réclamer', 'récolter', 'recruter', 'reculer', 'recycler', 'rédiger', 'redouter', 'refaire', 'réflexe', 'réformer', 'refrain', 'refuge', 'régalien', 'région', 'réglage', 'régulier', 'réitérer', 'rejeter', 'rejouer', 'relatif', 'relever', 'relief', 'remarque', 'remède', 'remise', 'remonter', 'remplir', 'remuer', 'renard', 'renfort', 'renifler', 'renoncer', 'rentrer', 'renvoi', 'replier', 'reporter', 'reprise', 'reptile', 'requin', 'réserve', 'résineux', 'résoudre', 'respect', 'rester', 'résultat', 'rétablir', 'retenir', 'réticule', 'retomber', 'retracer', 'réunion', 'réussir', 'revanche', 'revivre', 'révolte', 'révulsif', 'richesse', 'rideau', 'rieur', 'rigide', 'rigoler', 'rincer', 'riposter', 'risible', 'risque', 'rituel', 'rival', 'rivière', 'rocheux', 'romance', 'rompre', 'ronce', 'rondin', 'roseau', 'rosier', 'rotatif', 'rotor', 'rotule', 'rouge', 'rouille', 'rouleau', 'routine', 'royaume', 'ruban', 'rubis', 'ruche', 'ruelle', 'rugueux', 'ruiner', 'ruisseau', 'ruser', 'rustique', 'rythme', 'sabler', 'saboter', 'sabre', 'sacoche', 'safari', 'sagesse', 'saisir', 'salade', 'salive', 'salon', 'saluer', 'samedi', 'sanction', 'sanglier', 'sarcasme', 'sardine', 'saturer', 'saugrenu', 'saumon', 'sauter', 'sauvage', 'savant', 'savonner', 'scalpel', 'scandale', 'scélérat', 'scénario', 'sceptre', 'schéma', 'science', 'scinder', 'score', 'scrutin', 'sculpter', 'séance', 'sécable', 'sécher', 'secouer', 'sécréter', 'sédatif', 'séduire', 'seigneur', 'séjour', 'sélectif', 'semaine', 'sembler', 'semence', 'séminal', 'sénateur', 'sensible', 'sentence', 'séparer', 'séquence', 'serein', 'sergent', 'sérieux', 'serrure', 'sérum', 'service', 'sésame', 'sévir', 'sevrage', 'sextuple', 'sidéral', 'siècle', 'siéger', 'siffler', 'sigle', 'signal', 'silence', 'silicium', 'simple', 'sincère', 'sinistre', 'siphon', 'sirop', 'sismique', 'situer', 'skier', 'social', 'socle', 'sodium', 'soigneux', 'soldat', 'soleil', 'solitude', 'soluble', 'sombre', 'sommeil', 'somnoler', 'sonde', 'songeur', 'sonnette', 'sonore', 'sorcier', 'sortir', 'sosie', 'sottise', 'soucieux', 'soudure', 'souffle', 'soulever', 'soupape', 'source', 'soutirer', 'souvenir', 'spacieux', 'spatial', 'spécial', 'sphère', 'spiral', 'stable', 'station', 'sternum', 'stimulus', 'stipuler', 'strict', 'studieux', 'stupeur', 'styliste', 'sublime', 'substrat', 'subtil', 'subvenir', 'succès', 'sucre', 'suffixe', 'suggérer', 'suiveur', 'sulfate', 'superbe', 'supplier', 'surface', 'suricate', 'surmener', 'surprise', 'sursaut', 'survie', 'suspect', 'syllabe', 'symbole', 'symétrie', 'synapse', 'syntaxe', 'système', 'tabac', 'tablier', 'tactile', 'tailler', 'talent', 'talisman', 'talonner', 'tambour', 'tamiser', 'tangible', 'tapis', 'taquiner', 'tarder', 'tarif', 'tartine', 'tasse', 'tatami', 'tatouage', 'taupe', 'taureau', 'taxer', 'témoin', 'temporel', 'tenaille', 'tendre', 'teneur', 'tenir', 'tension', 'terminer', 'terne', 'terrible', 'tétine', 'texte', 'thème', 'théorie', 'thérapie', 'thorax', 'tibia', 'tiède', 'timide', 'tirelire', 'tiroir', 'tissu', 'titane', 'titre', 'tituber', 'toboggan', 'tolérant', 'tomate', 'tonique', 'tonneau', 'toponyme', 'torche', 'tordre', 'tornade', 'torpille', 'torrent', 'torse', 'tortue', 'totem', 'toucher', 'tournage', 'tousser', 'toxine', 'traction', 'trafic', 'tragique', 'trahir', 'train', 'trancher', 'travail', 'trèfle', 'tremper', 'trésor', 'treuil', 'triage', 'tribunal', 'tricoter', 'trilogie', 'triomphe', 'tripler', 'triturer', 'trivial', 'trombone', 'tronc', 'tropical', 'troupeau', 'tuile', 'tulipe', 'tumulte', 'tunnel', 'turbine', 'tuteur', 'tutoyer', 'tuyau', 'tympan', 'typhon', 'typique', 'tyran', 'ubuesque', 'ultime', 'ultrason', 'unanime', 'unifier', 'union', 'unique', 'unitaire', 'univers', 'uranium', 'urbain', 'urticant', 'usage', 'usine', 'usuel', 'usure', 'utile', 'utopie', 'vacarme', 'vaccin', 'vagabond', 'vague', 'vaillant', 'vaincre', 'vaisseau', 'valable', 'valise', 'vallon', 'valve', 'vampire', 'vanille', 'vapeur', 'varier', 'vaseux', 'vassal', 'vaste', 'vecteur', 'vedette', 'végétal', 'véhicule', 'veinard', 'véloce', 'vendredi', 'vénérer', 'venger', 'venimeux', 'ventouse', 'verdure', 'vérin', 'vernir', 'verrou', 'verser', 'vertu', 'veston', 'vétéran', 'vétuste', 'vexant', 'vexer', 'viaduc', 'viande', 'victoire', 'vidange', 'vidéo', 'vignette', 'vigueur', 'vilain', 'village', 'vinaigre', 'violon', 'vipère', 'virement', 'virtuose', 'virus', 'visage', 'viseur', 'vision', 'visqueux', 'visuel', 'vital', 'vitesse', 'viticole', 'vitrine', 'vivace', 'vivipare', 'vocation', 'voguer', 'voile', 'voisin', 'voiture', 'volaille', 'volcan', 'voltiger', 'volume', 'vorace', 'vortex', 'voter', 'vouloir', 'voyage', 'voyelle', 'wagon', 'xénon', 'yacht', 'zèbre', 'zénith', 'zeste', 'zoologie']\n\nmodule.exports = french\n","'use strict'\n\nvar italian = ['abaco', 'abbaglio', 'abbinato', 'abete', 'abisso', 'abolire', 'abrasivo', 'abrogato', 'accadere', 'accenno', 'accusato', 'acetone', 'achille', 'acido', 'acqua', 'acre', 'acrilico', 'acrobata', 'acuto', 'adagio', 'addebito', 'addome', 'adeguato', 'aderire', 'adipe', 'adottare', 'adulare', 'affabile', 'affetto', 'affisso', 'affranto', 'aforisma', 'afoso', 'africano', 'agave', 'agente', 'agevole', 'aggancio', 'agire', 'agitare', 'agonismo', 'agricolo', 'agrumeto', 'aguzzo', 'alabarda', 'alato', 'albatro', 'alberato', 'albo', 'albume', 'alce', 'alcolico', 'alettone', 'alfa', 'algebra', 'aliante', 'alibi', 'alimento', 'allagato', 'allegro', 'allievo', 'allodola', 'allusivo', 'almeno', 'alogeno', 'alpaca', 'alpestre', 'altalena', 'alterno', 'alticcio', 'altrove', 'alunno', 'alveolo', 'alzare', 'amalgama', 'amanita', 'amarena', 'ambito', 'ambrato', 'ameba', 'america', 'ametista', 'amico', 'ammasso', 'ammenda', 'ammirare', 'ammonito', 'amore', 'ampio', 'ampliare', 'amuleto', 'anacardo', 'anagrafe', 'analista', 'anarchia', 'anatra', 'anca', 'ancella', 'ancora', 'andare', 'andrea', 'anello', 'angelo', 'angolare', 'angusto', 'anima', 'annegare', 'annidato', 'anno', 'annuncio', 'anonimo', 'anticipo', 'anzi', 'apatico', 'apertura', 'apode', 'apparire', 'appetito', 'appoggio', 'approdo', 'appunto', 'aprile', 'arabica', 'arachide', 'aragosta', 'araldica', 'arancio', 'aratura', 'arazzo', 'arbitro', 'archivio', 'ardito', 'arenile', 'argento', 'argine', 'arguto', 'aria', 'armonia', 'arnese', 'arredato', 'arringa', 'arrosto', 'arsenico', 'arso', 'artefice', 'arzillo', 'asciutto', 'ascolto', 'asepsi', 'asettico', 'asfalto', 'asino', 'asola', 'aspirato', 'aspro', 'assaggio', 'asse', 'assoluto', 'assurdo', 'asta', 'astenuto', 'astice', 'astratto', 'atavico', 'ateismo', 'atomico', 'atono', 'attesa', 'attivare', 'attorno', 'attrito', 'attuale', 'ausilio', 'austria', 'autista', 'autonomo', 'autunno', 'avanzato', 'avere', 'avvenire', 'avviso', 'avvolgere', 'azione', 'azoto', 'azzimo', 'azzurro', 'babele', 'baccano', 'bacino', 'baco', 'badessa', 'badilata', 'bagnato', 'baita', 'balcone', 'baldo', 'balena', 'ballata', 'balzano', 'bambino', 'bandire', 'baraonda', 'barbaro', 'barca', 'baritono', 'barlume', 'barocco', 'basilico', 'basso', 'batosta', 'battuto', 'baule', 'bava', 'bavosa', 'becco', 'beffa', 'belgio', 'belva', 'benda', 'benevole', 'benigno', 'benzina', 'bere', 'berlina', 'beta', 'bibita', 'bici', 'bidone', 'bifido', 'biga', 'bilancia', 'bimbo', 'binocolo', 'biologo', 'bipede', 'bipolare', 'birbante', 'birra', 'biscotto', 'bisesto', 'bisnonno', 'bisonte', 'bisturi', 'bizzarro', 'blando', 'blatta', 'bollito', 'bonifico', 'bordo', 'bosco', 'botanico', 'bottino', 'bozzolo', 'braccio', 'bradipo', 'brama', 'branca', 'bravura', 'bretella', 'brevetto', 'brezza', 'briglia', 'brillante', 'brindare', 'broccolo', 'brodo', 'bronzina', 'brullo', 'bruno', 'bubbone', 'buca', 'budino', 'buffone', 'buio', 'bulbo', 'buono', 'burlone', 'burrasca', 'bussola', 'busta', 'cadetto', 'caduco', 'calamaro', 'calcolo', 'calesse', 'calibro', 'calmo', 'caloria', 'cambusa', 'camerata', 'camicia', 'cammino', 'camola', 'campale', 'canapa', 'candela', 'cane', 'canino', 'canotto', 'cantina', 'capace', 'capello', 'capitolo', 'capogiro', 'cappero', 'capra', 'capsula', 'carapace', 'carcassa', 'cardo', 'carisma', 'carovana', 'carretto', 'cartolina', 'casaccio', 'cascata', 'caserma', 'caso', 'cassone', 'castello', 'casuale', 'catasta', 'catena', 'catrame', 'cauto', 'cavillo', 'cedibile', 'cedrata', 'cefalo', 'celebre', 'cellulare', 'cena', 'cenone', 'centesimo', 'ceramica', 'cercare', 'certo', 'cerume', 'cervello', 'cesoia', 'cespo', 'ceto', 'chela', 'chiaro', 'chicca', 'chiedere', 'chimera', 'china', 'chirurgo', 'chitarra', 'ciao', 'ciclismo', 'cifrare', 'cigno', 'cilindro', 'ciottolo', 'circa', 'cirrosi', 'citrico', 'cittadino', 'ciuffo', 'civetta', 'civile', 'classico', 'clinica', 'cloro', 'cocco', 'codardo', 'codice', 'coerente', 'cognome', 'collare', 'colmato', 'colore', 'colposo', 'coltivato', 'colza', 'coma', 'cometa', 'commando', 'comodo', 'computer', 'comune', 'conciso', 'condurre', 'conferma', 'congelare', 'coniuge', 'connesso', 'conoscere', 'consumo', 'continuo', 'convegno', 'coperto', 'copione', 'coppia', 'copricapo', 'corazza', 'cordata', 'coricato', 'cornice', 'corolla', 'corpo', 'corredo', 'corsia', 'cortese', 'cosmico', 'costante', 'cottura', 'covato', 'cratere', 'cravatta', 'creato', 'credere', 'cremoso', 'crescita', 'creta', 'criceto', 'crinale', 'crisi', 'critico', 'croce', 'cronaca', 'crostata', 'cruciale', 'crusca', 'cucire', 'cuculo', 'cugino', 'cullato', 'cupola', 'curatore', 'cursore', 'curvo', 'cuscino', 'custode', 'dado', 'daino', 'dalmata', 'damerino', 'daniela', 'dannoso', 'danzare', 'datato', 'davanti', 'davvero', 'debutto', 'decennio', 'deciso', 'declino', 'decollo', 'decreto', 'dedicato', 'definito', 'deforme', 'degno', 'delegare', 'delfino', 'delirio', 'delta', 'demenza', 'denotato', 'dentro', 'deposito', 'derapata', 'derivare', 'deroga', 'descritto', 'deserto', 'desiderio', 'desumere', 'detersivo', 'devoto', 'diametro', 'dicembre', 'diedro', 'difeso', 'diffuso', 'digerire', 'digitale', 'diluvio', 'dinamico', 'dinnanzi', 'dipinto', 'diploma', 'dipolo', 'diradare', 'dire', 'dirotto', 'dirupo', 'disagio', 'discreto', 'disfare', 'disgelo', 'disposto', 'distanza', 'disumano', 'dito', 'divano', 'divelto', 'dividere', 'divorato', 'doblone', 'docente', 'doganale', 'dogma', 'dolce', 'domato', 'domenica', 'dominare', 'dondolo', 'dono', 'dormire', 'dote', 'dottore', 'dovuto', 'dozzina', 'drago', 'druido', 'dubbio', 'dubitare', 'ducale', 'duna', 'duomo', 'duplice', 'duraturo', 'ebano', 'eccesso', 'ecco', 'eclissi', 'economia', 'edera', 'edicola', 'edile', 'editoria', 'educare', 'egemonia', 'egli', 'egoismo', 'egregio', 'elaborato', 'elargire', 'elegante', 'elencato', 'eletto', 'elevare', 'elfico', 'elica', 'elmo', 'elsa', 'eluso', 'emanato', 'emblema', 'emesso', 'emiro', 'emotivo', 'emozione', 'empirico', 'emulo', 'endemico', 'enduro', 'energia', 'enfasi', 'enoteca', 'entrare', 'enzima', 'epatite', 'epilogo', 'episodio', 'epocale', 'eppure', 'equatore', 'erario', 'erba', 'erboso', 'erede', 'eremita', 'erigere', 'ermetico', 'eroe', 'erosivo', 'errante', 'esagono', 'esame', 'esanime', 'esaudire', 'esca', 'esempio', 'esercito', 'esibito', 'esigente', 'esistere', 'esito', 'esofago', 'esortato', 'esoso', 'espanso', 'espresso', 'essenza', 'esso', 'esteso', 'estimare', 'estonia', 'estroso', 'esultare', 'etilico', 'etnico', 'etrusco', 'etto', 'euclideo', 'europa', 'evaso', 'evidenza', 'evitato', 'evoluto', 'evviva', 'fabbrica', 'faccenda', 'fachiro', 'falco', 'famiglia', 'fanale', 'fanfara', 'fango', 'fantasma', 'fare', 'farfalla', 'farinoso', 'farmaco', 'fascia', 'fastoso', 'fasullo', 'faticare', 'fato', 'favoloso', 'febbre', 'fecola', 'fede', 'fegato', 'felpa', 'feltro', 'femmina', 'fendere', 'fenomeno', 'fermento', 'ferro', 'fertile', 'fessura', 'festivo', 'fetta', 'feudo', 'fiaba', 'fiducia', 'fifa', 'figurato', 'filo', 'finanza', 'finestra', 'finire', 'fiore', 'fiscale', 'fisico', 'fiume', 'flacone', 'flamenco', 'flebo', 'flemma', 'florido', 'fluente', 'fluoro', 'fobico', 'focaccia', 'focoso', 'foderato', 'foglio', 'folata', 'folclore', 'folgore', 'fondente', 'fonetico', 'fonia', 'fontana', 'forbito', 'forchetta', 'foresta', 'formica', 'fornaio', 'foro', 'fortezza', 'forzare', 'fosfato', 'fosso', 'fracasso', 'frana', 'frassino', 'fratello', 'freccetta', 'frenata', 'fresco', 'frigo', 'frollino', 'fronde', 'frugale', 'frutta', 'fucilata', 'fucsia', 'fuggente', 'fulmine', 'fulvo', 'fumante', 'fumetto', 'fumoso', 'fune', 'funzione', 'fuoco', 'furbo', 'furgone', 'furore', 'fuso', 'futile', 'gabbiano', 'gaffe', 'galateo', 'gallina', 'galoppo', 'gambero', 'gamma', 'garanzia', 'garbo', 'garofano', 'garzone', 'gasdotto', 'gasolio', 'gastrico', 'gatto', 'gaudio', 'gazebo', 'gazzella', 'geco', 'gelatina', 'gelso', 'gemello', 'gemmato', 'gene', 'genitore', 'gennaio', 'genotipo', 'gergo', 'ghepardo', 'ghiaccio', 'ghisa', 'giallo', 'gilda', 'ginepro', 'giocare', 'gioiello', 'giorno', 'giove', 'girato', 'girone', 'gittata', 'giudizio', 'giurato', 'giusto', 'globulo', 'glutine', 'gnomo', 'gobba', 'golf', 'gomito', 'gommone', 'gonfio', 'gonna', 'governo', 'gracile', 'grado', 'grafico', 'grammo', 'grande', 'grattare', 'gravoso', 'grazia', 'greca', 'gregge', 'grifone', 'grigio', 'grinza', 'grotta', 'gruppo', 'guadagno', 'guaio', 'guanto', 'guardare', 'gufo', 'guidare', 'ibernato', 'icona', 'identico', 'idillio', 'idolo', 'idra', 'idrico', 'idrogeno', 'igiene', 'ignaro', 'ignorato', 'ilare', 'illeso', 'illogico', 'illudere', 'imballo', 'imbevuto', 'imbocco', 'imbuto', 'immane', 'immerso', 'immolato', 'impacco', 'impeto', 'impiego', 'importo', 'impronta', 'inalare', 'inarcare', 'inattivo', 'incanto', 'incendio', 'inchino', 'incisivo', 'incluso', 'incontro', 'incrocio', 'incubo', 'indagine', 'india', 'indole', 'inedito', 'infatti', 'infilare', 'inflitto', 'ingaggio', 'ingegno', 'inglese', 'ingordo', 'ingrosso', 'innesco', 'inodore', 'inoltrare', 'inondato', 'insano', 'insetto', 'insieme', 'insonnia', 'insulina', 'intasato', 'intero', 'intonaco', 'intuito', 'inumidire', 'invalido', 'invece', 'invito', 'iperbole', 'ipnotico', 'ipotesi', 'ippica', 'iride', 'irlanda', 'ironico', 'irrigato', 'irrorare', 'isolato', 'isotopo', 'isterico', 'istituto', 'istrice', 'italia', 'iterare', 'labbro', 'labirinto', 'lacca', 'lacerato', 'lacrima', 'lacuna', 'laddove', 'lago', 'lampo', 'lancetta', 'lanterna', 'lardoso', 'larga', 'laringe', 'lastra', 'latenza', 'latino', 'lattuga', 'lavagna', 'lavoro', 'legale', 'leggero', 'lembo', 'lentezza', 'lenza', 'leone', 'lepre', 'lesivo', 'lessato', 'lesto', 'letterale', 'leva', 'levigato', 'libero', 'lido', 'lievito', 'lilla', 'limatura', 'limitare', 'limpido', 'lineare', 'lingua', 'liquido', 'lira', 'lirica', 'lisca', 'lite', 'litigio', 'livrea', 'locanda', 'lode', 'logica', 'lombare', 'londra', 'longevo', 'loquace', 'lorenzo', 'loto', 'lotteria', 'luce', 'lucidato', 'lumaca', 'luminoso', 'lungo', 'lupo', 'luppolo', 'lusinga', 'lusso', 'lutto', 'macabro', 'macchina', 'macero', 'macinato', 'madama', 'magico', 'maglia', 'magnete', 'magro', 'maiolica', 'malafede', 'malgrado', 'malinteso', 'malsano', 'malto', 'malumore', 'mana', 'mancia', 'mandorla', 'mangiare', 'manifesto', 'mannaro', 'manovra', 'mansarda', 'mantide', 'manubrio', 'mappa', 'maratona', 'marcire', 'maretta', 'marmo', 'marsupio', 'maschera', 'massaia', 'mastino', 'materasso', 'matricola', 'mattone', 'maturo', 'mazurca', 'meandro', 'meccanico', 'mecenate', 'medesimo', 'meditare', 'mega', 'melassa', 'melis', 'melodia', 'meninge', 'meno', 'mensola', 'mercurio', 'merenda', 'merlo', 'meschino', 'mese', 'messere', 'mestolo', 'metallo', 'metodo', 'mettere', 'miagolare', 'mica', 'micelio', 'michele', 'microbo', 'midollo', 'miele', 'migliore', 'milano', 'milite', 'mimosa', 'minerale', 'mini', 'minore', 'mirino', 'mirtillo', 'miscela', 'missiva', 'misto', 'misurare', 'mitezza', 'mitigare', 'mitra', 'mittente', 'mnemonico', 'modello', 'modifica', 'modulo', 'mogano', 'mogio', 'mole', 'molosso', 'monastero', 'monco', 'mondina', 'monetario', 'monile', 'monotono', 'monsone', 'montato', 'monviso', 'mora', 'mordere', 'morsicato', 'mostro', 'motivato', 'motosega', 'motto', 'movenza', 'movimento', 'mozzo', 'mucca', 'mucosa', 'muffa', 'mughetto', 'mugnaio', 'mulatto', 'mulinello', 'multiplo', 'mummia', 'munto', 'muovere', 'murale', 'musa', 'muscolo', 'musica', 'mutevole', 'muto', 'nababbo', 'nafta', 'nanometro', 'narciso', 'narice', 'narrato', 'nascere', 'nastrare', 'naturale', 'nautica', 'naviglio', 'nebulosa', 'necrosi', 'negativo', 'negozio', 'nemmeno', 'neofita', 'neretto', 'nervo', 'nessuno', 'nettuno', 'neutrale', 'neve', 'nevrotico', 'nicchia', 'ninfa', 'nitido', 'nobile', 'nocivo', 'nodo', 'nome', 'nomina', 'nordico', 'normale', 'norvegese', 'nostrano', 'notare', 'notizia', 'notturno', 'novella', 'nucleo', 'nulla', 'numero', 'nuovo', 'nutrire', 'nuvola', 'nuziale', 'oasi', 'obbedire', 'obbligo', 'obelisco', 'oblio', 'obolo', 'obsoleto', 'occasione', 'occhio', 'occidente', 'occorrere', 'occultare', 'ocra', 'oculato', 'odierno', 'odorare', 'offerta', 'offrire', 'offuscato', 'oggetto', 'oggi', 'ognuno', 'olandese', 'olfatto', 'oliato', 'oliva', 'ologramma', 'oltre', 'omaggio', 'ombelico', 'ombra', 'omega', 'omissione', 'ondoso', 'onere', 'onice', 'onnivoro', 'onorevole', 'onta', 'operato', 'opinione', 'opposto', 'oracolo', 'orafo', 'ordine', 'orecchino', 'orefice', 'orfano', 'organico', 'origine', 'orizzonte', 'orma', 'ormeggio', 'ornativo', 'orologio', 'orrendo', 'orribile', 'ortensia', 'ortica', 'orzata', 'orzo', 'osare', 'oscurare', 'osmosi', 'ospedale', 'ospite', 'ossa', 'ossidare', 'ostacolo', 'oste', 'otite', 'otre', 'ottagono', 'ottimo', 'ottobre', 'ovale', 'ovest', 'ovino', 'oviparo', 'ovocito', 'ovunque', 'ovviare', 'ozio', 'pacchetto', 'pace', 'pacifico', 'padella', 'padrone', 'paese', 'paga', 'pagina', 'palazzina', 'palesare', 'pallido', 'palo', 'palude', 'pandoro', 'pannello', 'paolo', 'paonazzo', 'paprica', 'parabola', 'parcella', 'parere', 'pargolo', 'pari', 'parlato', 'parola', 'partire', 'parvenza', 'parziale', 'passivo', 'pasticca', 'patacca', 'patologia', 'pattume', 'pavone', 'peccato', 'pedalare', 'pedonale', 'peggio', 'peloso', 'penare', 'pendice', 'penisola', 'pennuto', 'penombra', 'pensare', 'pentola', 'pepe', 'pepita', 'perbene', 'percorso', 'perdonato', 'perforare', 'pergamena', 'periodo', 'permesso', 'perno', 'perplesso', 'persuaso', 'pertugio', 'pervaso', 'pesatore', 'pesista', 'peso', 'pestifero', 'petalo', 'pettine', 'petulante', 'pezzo', 'piacere', 'pianta', 'piattino', 'piccino', 'picozza', 'piega', 'pietra', 'piffero', 'pigiama', 'pigolio', 'pigro', 'pila', 'pilifero', 'pillola', 'pilota', 'pimpante', 'pineta', 'pinna', 'pinolo', 'pioggia', 'piombo', 'piramide', 'piretico', 'pirite', 'pirolisi', 'pitone', 'pizzico', 'placebo', 'planare', 'plasma', 'platano', 'plenario', 'pochezza', 'poderoso', 'podismo', 'poesia', 'poggiare', 'polenta', 'poligono', 'pollice', 'polmonite', 'polpetta', 'polso', 'poltrona', 'polvere', 'pomice', 'pomodoro', 'ponte', 'popoloso', 'porfido', 'poroso', 'porpora', 'porre', 'portata', 'posa', 'positivo', 'possesso', 'postulato', 'potassio', 'potere', 'pranzo', 'prassi', 'pratica', 'precluso', 'predica', 'prefisso', 'pregiato', 'prelievo', 'premere', 'prenotare', 'preparato', 'presenza', 'pretesto', 'prevalso', 'prima', 'principe', 'privato', 'problema', 'procura', 'produrre', 'profumo', 'progetto', 'prolunga', 'promessa', 'pronome', 'proposta', 'proroga', 'proteso', 'prova', 'prudente', 'prugna', 'prurito', 'psiche', 'pubblico', 'pudica', 'pugilato', 'pugno', 'pulce', 'pulito', 'pulsante', 'puntare', 'pupazzo', 'pupilla', 'puro', 'quadro', 'qualcosa', 'quasi', 'querela', 'quota', 'raccolto', 'raddoppio', 'radicale', 'radunato', 'raffica', 'ragazzo', 'ragione', 'ragno', 'ramarro', 'ramingo', 'ramo', 'randagio', 'rantolare', 'rapato', 'rapina', 'rappreso', 'rasatura', 'raschiato', 'rasente', 'rassegna', 'rastrello', 'rata', 'ravveduto', 'reale', 'recepire', 'recinto', 'recluta', 'recondito', 'recupero', 'reddito', 'redimere', 'regalato', 'registro', 'regola', 'regresso', 'relazione', 'remare', 'remoto', 'renna', 'replica', 'reprimere', 'reputare', 'resa', 'residente', 'responso', 'restauro', 'rete', 'retina', 'retorica', 'rettifica', 'revocato', 'riassunto', 'ribadire', 'ribelle', 'ribrezzo', 'ricarica', 'ricco', 'ricevere', 'riciclato', 'ricordo', 'ricreduto', 'ridicolo', 'ridurre', 'rifasare', 'riflesso', 'riforma', 'rifugio', 'rigare', 'rigettato', 'righello', 'rilassato', 'rilevato', 'rimanere', 'rimbalzo', 'rimedio', 'rimorchio', 'rinascita', 'rincaro', 'rinforzo', 'rinnovo', 'rinomato', 'rinsavito', 'rintocco', 'rinuncia', 'rinvenire', 'riparato', 'ripetuto', 'ripieno', 'riportare', 'ripresa', 'ripulire', 'risata', 'rischio', 'riserva', 'risibile', 'riso', 'rispetto', 'ristoro', 'risultato', 'risvolto', 'ritardo', 'ritegno', 'ritmico', 'ritrovo', 'riunione', 'riva', 'riverso', 'rivincita', 'rivolto', 'rizoma', 'roba', 'robotico', 'robusto', 'roccia', 'roco', 'rodaggio', 'rodere', 'roditore', 'rogito', 'rollio', 'romantico', 'rompere', 'ronzio', 'rosolare', 'rospo', 'rotante', 'rotondo', 'rotula', 'rovescio', 'rubizzo', 'rubrica', 'ruga', 'rullino', 'rumine', 'rumoroso', 'ruolo', 'rupe', 'russare', 'rustico', 'sabato', 'sabbiare', 'sabotato', 'sagoma', 'salasso', 'saldatura', 'salgemma', 'salivare', 'salmone', 'salone', 'saltare', 'saluto', 'salvo', 'sapere', 'sapido', 'saporito', 'saraceno', 'sarcasmo', 'sarto', 'sassoso', 'satellite', 'satira', 'satollo', 'saturno', 'savana', 'savio', 'saziato', 'sbadiglio', 'sbalzo', 'sbancato', 'sbarra', 'sbattere', 'sbavare', 'sbendare', 'sbirciare', 'sbloccato', 'sbocciato', 'sbrinare', 'sbruffone', 'sbuffare', 'scabroso', 'scadenza', 'scala', 'scambiare', 'scandalo', 'scapola', 'scarso', 'scatenare', 'scavato', 'scelto', 'scenico', 'scettro', 'scheda', 'schiena', 'sciarpa', 'scienza', 'scindere', 'scippo', 'sciroppo', 'scivolo', 'sclerare', 'scodella', 'scolpito', 'scomparto', 'sconforto', 'scoprire', 'scorta', 'scossone', 'scozzese', 'scriba', 'scrollare', 'scrutinio', 'scuderia', 'scultore', 'scuola', 'scuro', 'scusare', 'sdebitare', 'sdoganare', 'seccatura', 'secondo', 'sedano', 'seggiola', 'segnalato', 'segregato', 'seguito', 'selciato', 'selettivo', 'sella', 'selvaggio', 'semaforo', 'sembrare', 'seme', 'seminato', 'sempre', 'senso', 'sentire', 'sepolto', 'sequenza', 'serata', 'serbato', 'sereno', 'serio', 'serpente', 'serraglio', 'servire', 'sestina', 'setola', 'settimana', 'sfacelo', 'sfaldare', 'sfamato', 'sfarzoso', 'sfaticato', 'sfera', 'sfida', 'sfilato', 'sfinge', 'sfocato', 'sfoderare', 'sfogo', 'sfoltire', 'sforzato', 'sfratto', 'sfruttato', 'sfuggito', 'sfumare', 'sfuso', 'sgabello', 'sgarbato', 'sgonfiare', 'sgorbio', 'sgrassato', 'sguardo', 'sibilo', 'siccome', 'sierra', 'sigla', 'signore', 'silenzio', 'sillaba', 'simbolo', 'simpatico', 'simulato', 'sinfonia', 'singolo', 'sinistro', 'sino', 'sintesi', 'sinusoide', 'sipario', 'sisma', 'sistole', 'situato', 'slitta', 'slogatura', 'sloveno', 'smarrito', 'smemorato', 'smentito', 'smeraldo', 'smilzo', 'smontare', 'smottato', 'smussato', 'snellire', 'snervato', 'snodo', 'sobbalzo', 'sobrio', 'soccorso', 'sociale', 'sodale', 'soffitto', 'sogno', 'soldato', 'solenne', 'solido', 'sollazzo', 'solo', 'solubile', 'solvente', 'somatico', 'somma', 'sonda', 'sonetto', 'sonnifero', 'sopire', 'soppeso', 'sopra', 'sorgere', 'sorpasso', 'sorriso', 'sorso', 'sorteggio', 'sorvolato', 'sospiro', 'sosta', 'sottile', 'spada', 'spalla', 'spargere', 'spatola', 'spavento', 'spazzola', 'specie', 'spedire', 'spegnere', 'spelatura', 'speranza', 'spessore', 'spettrale', 'spezzato', 'spia', 'spigoloso', 'spillato', 'spinoso', 'spirale', 'splendido', 'sportivo', 'sposo', 'spranga', 'sprecare', 'spronato', 'spruzzo', 'spuntino', 'squillo', 'sradicare', 'srotolato', 'stabile', 'stacco', 'staffa', 'stagnare', 'stampato', 'stantio', 'starnuto', 'stasera', 'statuto', 'stelo', 'steppa', 'sterzo', 'stiletto', 'stima', 'stirpe', 'stivale', 'stizzoso', 'stonato', 'storico', 'strappo', 'stregato', 'stridulo', 'strozzare', 'strutto', 'stuccare', 'stufo', 'stupendo', 'subentro', 'succoso', 'sudore', 'suggerito', 'sugo', 'sultano', 'suonare', 'superbo', 'supporto', 'surgelato', 'surrogato', 'sussurro', 'sutura', 'svagare', 'svedese', 'sveglio', 'svelare', 'svenuto', 'svezia', 'sviluppo', 'svista', 'svizzera', 'svolta', 'svuotare', 'tabacco', 'tabulato', 'tacciare', 'taciturno', 'tale', 'talismano', 'tampone', 'tannino', 'tara', 'tardivo', 'targato', 'tariffa', 'tarpare', 'tartaruga', 'tasto', 'tattico', 'taverna', 'tavolata', 'tazza', 'teca', 'tecnico', 'telefono', 'temerario', 'tempo', 'temuto', 'tendone', 'tenero', 'tensione', 'tentacolo', 'teorema', 'terme', 'terrazzo', 'terzetto', 'tesi', 'tesserato', 'testato', 'tetro', 'tettoia', 'tifare', 'tigella', 'timbro', 'tinto', 'tipico', 'tipografo', 'tiraggio', 'tiro', 'titanio', 'titolo', 'titubante', 'tizio', 'tizzone', 'toccare', 'tollerare', 'tolto', 'tombola', 'tomo', 'tonfo', 'tonsilla', 'topazio', 'topologia', 'toppa', 'torba', 'tornare', 'torrone', 'tortora', 'toscano', 'tossire', 'tostatura', 'totano', 'trabocco', 'trachea', 'trafila', 'tragedia', 'tralcio', 'tramonto', 'transito', 'trapano', 'trarre', 'trasloco', 'trattato', 'trave', 'treccia', 'tremolio', 'trespolo', 'tributo', 'tricheco', 'trifoglio', 'trillo', 'trincea', 'trio', 'tristezza', 'triturato', 'trivella', 'tromba', 'trono', 'troppo', 'trottola', 'trovare', 'truccato', 'tubatura', 'tuffato', 'tulipano', 'tumulto', 'tunisia', 'turbare', 'turchino', 'tuta', 'tutela', 'ubicato', 'uccello', 'uccisore', 'udire', 'uditivo', 'uffa', 'ufficio', 'uguale', 'ulisse', 'ultimato', 'umano', 'umile', 'umorismo', 'uncinetto', 'ungere', 'ungherese', 'unicorno', 'unificato', 'unisono', 'unitario', 'unte', 'uovo', 'upupa', 'uragano', 'urgenza', 'urlo', 'usanza', 'usato', 'uscito', 'usignolo', 'usuraio', 'utensile', 'utilizzo', 'utopia', 'vacante', 'vaccinato', 'vagabondo', 'vagliato', 'valanga', 'valgo', 'valico', 'valletta', 'valoroso', 'valutare', 'valvola', 'vampata', 'vangare', 'vanitoso', 'vano', 'vantaggio', 'vanvera', 'vapore', 'varano', 'varcato', 'variante', 'vasca', 'vedetta', 'vedova', 'veduto', 'vegetale', 'veicolo', 'velcro', 'velina', 'velluto', 'veloce', 'venato', 'vendemmia', 'vento', 'verace', 'verbale', 'vergogna', 'verifica', 'vero', 'verruca', 'verticale', 'vescica', 'vessillo', 'vestale', 'veterano', 'vetrina', 'vetusto', 'viandante', 'vibrante', 'vicenda', 'vichingo', 'vicinanza', 'vidimare', 'vigilia', 'vigneto', 'vigore', 'vile', 'villano', 'vimini', 'vincitore', 'viola', 'vipera', 'virgola', 'virologo', 'virulento', 'viscoso', 'visione', 'vispo', 'vissuto', 'visura', 'vita', 'vitello', 'vittima', 'vivanda', 'vivido', 'viziare', 'voce', 'voga', 'volatile', 'volere', 'volpe', 'voragine', 'vulcano', 'zampogna', 'zanna', 'zappato', 'zattera', 'zavorra', 'zefiro', 'zelante', 'zelo', 'zenzero', 'zerbino', 'zibetto', 'zinco', 'zircone', 'zitto', 'zolla', 'zotico', 'zucchero', 'zufolo', 'zulu', 'zuppa']\n\nmodule.exports = italian\n","'use strict'\n\nvar japanese = ['あいこくしん', 'あいさつ', 'あいだ', 'あおぞら', 'あかちゃん', 'あきる', 'あけがた', 'あける', 'あこがれる', 'あさい', 'あさひ', 'あしあと', 'あじわう', 'あずかる', 'あずき', 'あそぶ', 'あたえる', 'あたためる', 'あたりまえ', 'あたる', 'あつい', 'あつかう', 'あっしゅく', 'あつまり', 'あつめる', 'あてな', 'あてはまる', 'あひる', 'あぶら', 'あぶる', 'あふれる', 'あまい', 'あまど', 'あまやかす', 'あまり', 'あみもの', 'あめりか', 'あやまる', 'あゆむ', 'あらいぐま', 'あらし', 'あらすじ', 'あらためる', 'あらゆる', 'あらわす', 'ありがとう', 'あわせる', 'あわてる', 'あんい', 'あんがい', 'あんこ', 'あんぜん', 'あんてい', 'あんない', 'あんまり', 'いいだす', 'いおん', 'いがい', 'いがく', 'いきおい', 'いきなり', 'いきもの', 'いきる', 'いくじ', 'いくぶん', 'いけばな', 'いけん', 'いこう', 'いこく', 'いこつ', 'いさましい', 'いさん', 'いしき', 'いじゅう', 'いじょう', 'いじわる', 'いずみ', 'いずれ', 'いせい', 'いせえび', 'いせかい', 'いせき', 'いぜん', 'いそうろう', 'いそがしい', 'いだい', 'いだく', 'いたずら', 'いたみ', 'いたりあ', 'いちおう', 'いちじ', 'いちど', 'いちば', 'いちぶ', 'いちりゅう', 'いつか', 'いっしゅん', 'いっせい', 'いっそう', 'いったん', 'いっち', 'いってい', 'いっぽう', 'いてざ', 'いてん', 'いどう', 'いとこ', 'いない', 'いなか', 'いねむり', 'いのち', 'いのる', 'いはつ', 'いばる', 'いはん', 'いびき', 'いひん', 'いふく', 'いへん', 'いほう', 'いみん', 'いもうと', 'いもたれ', 'いもり', 'いやがる', 'いやす', 'いよかん', 'いよく', 'いらい', 'いらすと', 'いりぐち', 'いりょう', 'いれい', 'いれもの', 'いれる', 'いろえんぴつ', 'いわい', 'いわう', 'いわかん', 'いわば', 'いわゆる', 'いんげんまめ', 'いんさつ', 'いんしょう', 'いんよう', 'うえき', 'うえる', 'うおざ', 'うがい', 'うかぶ', 'うかべる', 'うきわ', 'うくらいな', 'うくれれ', 'うけたまわる', 'うけつけ', 'うけとる', 'うけもつ', 'うける', 'うごかす', 'うごく', 'うこん', 'うさぎ', 'うしなう', 'うしろがみ', 'うすい', 'うすぎ', 'うすぐらい', 'うすめる', 'うせつ', 'うちあわせ', 'うちがわ', 'うちき', 'うちゅう', 'うっかり', 'うつくしい', 'うったえる', 'うつる', 'うどん', 'うなぎ', 'うなじ', 'うなずく', 'うなる', 'うねる', 'うのう', 'うぶげ', 'うぶごえ', 'うまれる', 'うめる', 'うもう', 'うやまう', 'うよく', 'うらがえす', 'うらぐち', 'うらない', 'うりあげ', 'うりきれ', 'うるさい', 'うれしい', 'うれゆき', 'うれる', 'うろこ', 'うわき', 'うわさ', 'うんこう', 'うんちん', 'うんてん', 'うんどう', 'えいえん', 'えいが', 'えいきょう', 'えいご', 'えいせい', 'えいぶん', 'えいよう', 'えいわ', 'えおり', 'えがお', 'えがく', 'えきたい', 'えくせる', 'えしゃく', 'えすて', 'えつらん', 'えのぐ', 'えほうまき', 'えほん', 'えまき', 'えもじ', 'えもの', 'えらい', 'えらぶ', 'えりあ', 'えんえん', 'えんかい', 'えんぎ', 'えんげき', 'えんしゅう', 'えんぜつ', 'えんそく', 'えんちょう', 'えんとつ', 'おいかける', 'おいこす', 'おいしい', 'おいつく', 'おうえん', 'おうさま', 'おうじ', 'おうせつ', 'おうたい', 'おうふく', 'おうべい', 'おうよう', 'おえる', 'おおい', 'おおう', 'おおどおり', 'おおや', 'おおよそ', 'おかえり', 'おかず', 'おがむ', 'おかわり', 'おぎなう', 'おきる', 'おくさま', 'おくじょう', 'おくりがな', 'おくる', 'おくれる', 'おこす', 'おこなう', 'おこる', 'おさえる', 'おさない', 'おさめる', 'おしいれ', 'おしえる', 'おじぎ', 'おじさん', 'おしゃれ', 'おそらく', 'おそわる', 'おたがい', 'おたく', 'おだやか', 'おちつく', 'おっと', 'おつり', 'おでかけ', 'おとしもの', 'おとなしい', 'おどり', 'おどろかす', 'おばさん', 'おまいり', 'おめでとう', 'おもいで', 'おもう', 'おもたい', 'おもちゃ', 'おやつ', 'おやゆび', 'およぼす', 'おらんだ', 'おろす', 'おんがく', 'おんけい', 'おんしゃ', 'おんせん', 'おんだん', 'おんちゅう', 'おんどけい', 'かあつ', 'かいが', 'がいき', 'がいけん', 'がいこう', 'かいさつ', 'かいしゃ', 'かいすいよく', 'かいぜん', 'かいぞうど', 'かいつう', 'かいてん', 'かいとう', 'かいふく', 'がいへき', 'かいほう', 'かいよう', 'がいらい', 'かいわ', 'かえる', 'かおり', 'かかえる', 'かがく', 'かがし', 'かがみ', 'かくご', 'かくとく', 'かざる', 'がぞう', 'かたい', 'かたち', 'がちょう', 'がっきゅう', 'がっこう', 'がっさん', 'がっしょう', 'かなざわし', 'かのう', 'がはく', 'かぶか', 'かほう', 'かほご', 'かまう', 'かまぼこ', 'かめれおん', 'かゆい', 'かようび', 'からい', 'かるい', 'かろう', 'かわく', 'かわら', 'がんか', 'かんけい', 'かんこう', 'かんしゃ', 'かんそう', 'かんたん', 'かんち', 'がんばる', 'きあい', 'きあつ', 'きいろ', 'ぎいん', 'きうい', 'きうん', 'きえる', 'きおう', 'きおく', 'きおち', 'きおん', 'きかい', 'きかく', 'きかんしゃ', 'ききて', 'きくばり', 'きくらげ', 'きけんせい', 'きこう', 'きこえる', 'きこく', 'きさい', 'きさく', 'きさま', 'きさらぎ', 'ぎじかがく', 'ぎしき', 'ぎじたいけん', 'ぎじにってい', 'ぎじゅつしゃ', 'きすう', 'きせい', 'きせき', 'きせつ', 'きそう', 'きぞく', 'きぞん', 'きたえる', 'きちょう', 'きつえん', 'ぎっちり', 'きつつき', 'きつね', 'きてい', 'きどう', 'きどく', 'きない', 'きなが', 'きなこ', 'きぬごし', 'きねん', 'きのう', 'きのした', 'きはく', 'きびしい', 'きひん', 'きふく', 'きぶん', 'きぼう', 'きほん', 'きまる', 'きみつ', 'きむずかしい', 'きめる', 'きもだめし', 'きもち', 'きもの', 'きゃく', 'きやく', 'ぎゅうにく', 'きよう', 'きょうりゅう', 'きらい', 'きらく', 'きりん', 'きれい', 'きれつ', 'きろく', 'ぎろん', 'きわめる', 'ぎんいろ', 'きんかくじ', 'きんじょ', 'きんようび', 'ぐあい', 'くいず', 'くうかん', 'くうき', 'くうぐん', 'くうこう', 'ぐうせい', 'くうそう', 'ぐうたら', 'くうふく', 'くうぼ', 'くかん', 'くきょう', 'くげん', 'ぐこう', 'くさい', 'くさき', 'くさばな', 'くさる', 'くしゃみ', 'くしょう', 'くすのき', 'くすりゆび', 'くせげ', 'くせん', 'ぐたいてき', 'くださる', 'くたびれる', 'くちこみ', 'くちさき', 'くつした', 'ぐっすり', 'くつろぐ', 'くとうてん', 'くどく', 'くなん', 'くねくね', 'くのう', 'くふう', 'くみあわせ', 'くみたてる', 'くめる', 'くやくしょ', 'くらす', 'くらべる', 'くるま', 'くれる', 'くろう', 'くわしい', 'ぐんかん', 'ぐんしょく', 'ぐんたい', 'ぐんて', 'けあな', 'けいかく', 'けいけん', 'けいこ', 'けいさつ', 'げいじゅつ', 'けいたい', 'げいのうじん', 'けいれき', 'けいろ', 'けおとす', 'けおりもの', 'げきか', 'げきげん', 'げきだん', 'げきちん', 'げきとつ', 'げきは', 'げきやく', 'げこう', 'げこくじょう', 'げざい', 'けさき', 'げざん', 'けしき', 'けしごむ', 'けしょう', 'げすと', 'けたば', 'けちゃっぷ', 'けちらす', 'けつあつ', 'けつい', 'けつえき', 'けっこん', 'けつじょ', 'けっせき', 'けってい', 'けつまつ', 'げつようび', 'げつれい', 'けつろん', 'げどく', 'けとばす', 'けとる', 'けなげ', 'けなす', 'けなみ', 'けぬき', 'げねつ', 'けねん', 'けはい', 'げひん', 'けぶかい', 'げぼく', 'けまり', 'けみかる', 'けむし', 'けむり', 'けもの', 'けらい', 'けろけろ', 'けわしい', 'けんい', 'けんえつ', 'けんお', 'けんか', 'げんき', 'けんげん', 'けんこう', 'けんさく', 'けんしゅう', 'けんすう', 'げんそう', 'けんちく', 'けんてい', 'けんとう', 'けんない', 'けんにん', 'げんぶつ', 'けんま', 'けんみん', 'けんめい', 'けんらん', 'けんり', 'こあくま', 'こいぬ', 'こいびと', 'ごうい', 'こうえん', 'こうおん', 'こうかん', 'ごうきゅう', 'ごうけい', 'こうこう', 'こうさい', 'こうじ', 'こうすい', 'ごうせい', 'こうそく', 'こうたい', 'こうちゃ', 'こうつう', 'こうてい', 'こうどう', 'こうない', 'こうはい', 'ごうほう', 'ごうまん', 'こうもく', 'こうりつ', 'こえる', 'こおり', 'ごかい', 'ごがつ', 'ごかん', 'こくご', 'こくさい', 'こくとう', 'こくない', 'こくはく', 'こぐま', 'こけい', 'こける', 'ここのか', 'こころ', 'こさめ', 'こしつ', 'こすう', 'こせい', 'こせき', 'こぜん', 'こそだて', 'こたい', 'こたえる', 'こたつ', 'こちょう', 'こっか', 'こつこつ', 'こつばん', 'こつぶ', 'こてい', 'こてん', 'ことがら', 'ことし', 'ことば', 'ことり', 'こなごな', 'こねこね', 'このまま', 'このみ', 'このよ', 'ごはん', 'こひつじ', 'こふう', 'こふん', 'こぼれる', 'ごまあぶら', 'こまかい', 'ごますり', 'こまつな', 'こまる', 'こむぎこ', 'こもじ', 'こもち', 'こもの', 'こもん', 'こやく', 'こやま', 'こゆう', 'こゆび', 'こよい', 'こよう', 'こりる', 'これくしょん', 'ころっけ', 'こわもて', 'こわれる', 'こんいん', 'こんかい', 'こんき', 'こんしゅう', 'こんすい', 'こんだて', 'こんとん', 'こんなん', 'こんびに', 'こんぽん', 'こんまけ', 'こんや', 'こんれい', 'こんわく', 'ざいえき', 'さいかい', 'さいきん', 'ざいげん', 'ざいこ', 'さいしょ', 'さいせい', 'ざいたく', 'ざいちゅう', 'さいてき', 'ざいりょう', 'さうな', 'さかいし', 'さがす', 'さかな', 'さかみち', 'さがる', 'さぎょう', 'さくし', 'さくひん', 'さくら', 'さこく', 'さこつ', 'さずかる', 'ざせき', 'さたん', 'さつえい', 'ざつおん', 'ざっか', 'ざつがく', 'さっきょく', 'ざっし', 'さつじん', 'ざっそう', 'さつたば', 'さつまいも', 'さてい', 'さといも', 'さとう', 'さとおや', 'さとし', 'さとる', 'さのう', 'さばく', 'さびしい', 'さべつ', 'さほう', 'さほど', 'さます', 'さみしい', 'さみだれ', 'さむけ', 'さめる', 'さやえんどう', 'さゆう', 'さよう', 'さよく', 'さらだ', 'ざるそば', 'さわやか', 'さわる', 'さんいん', 'さんか', 'さんきゃく', 'さんこう', 'さんさい', 'ざんしょ', 'さんすう', 'さんせい', 'さんそ', 'さんち', 'さんま', 'さんみ', 'さんらん', 'しあい', 'しあげ', 'しあさって', 'しあわせ', 'しいく', 'しいん', 'しうち', 'しえい', 'しおけ', 'しかい', 'しかく', 'じかん', 'しごと', 'しすう', 'じだい', 'したうけ', 'したぎ', 'したて', 'したみ', 'しちょう', 'しちりん', 'しっかり', 'しつじ', 'しつもん', 'してい', 'してき', 'してつ', 'じてん', 'じどう', 'しなぎれ', 'しなもの', 'しなん', 'しねま', 'しねん', 'しのぐ', 'しのぶ', 'しはい', 'しばかり', 'しはつ', 'しはらい', 'しはん', 'しひょう', 'しふく', 'じぶん', 'しへい', 'しほう', 'しほん', 'しまう', 'しまる', 'しみん', 'しむける', 'じむしょ', 'しめい', 'しめる', 'しもん', 'しゃいん', 'しゃうん', 'しゃおん', 'じゃがいも', 'しやくしょ', 'しゃくほう', 'しゃけん', 'しゃこ', 'しゃざい', 'しゃしん', 'しゃせん', 'しゃそう', 'しゃたい', 'しゃちょう', 'しゃっきん', 'じゃま', 'しゃりん', 'しゃれい', 'じゆう', 'じゅうしょ', 'しゅくはく', 'じゅしん', 'しゅっせき', 'しゅみ', 'しゅらば', 'じゅんばん', 'しょうかい', 'しょくたく', 'しょっけん', 'しょどう', 'しょもつ', 'しらせる', 'しらべる', 'しんか', 'しんこう', 'じんじゃ', 'しんせいじ', 'しんちく', 'しんりん', 'すあげ', 'すあし', 'すあな', 'ずあん', 'すいえい', 'すいか', 'すいとう', 'ずいぶん', 'すいようび', 'すうがく', 'すうじつ', 'すうせん', 'すおどり', 'すきま', 'すくう', 'すくない', 'すける', 'すごい', 'すこし', 'ずさん', 'すずしい', 'すすむ', 'すすめる', 'すっかり', 'ずっしり', 'ずっと', 'すてき', 'すてる', 'すねる', 'すのこ', 'すはだ', 'すばらしい', 'ずひょう', 'ずぶぬれ', 'すぶり', 'すふれ', 'すべて', 'すべる', 'ずほう', 'すぼん', 'すまい', 'すめし', 'すもう', 'すやき', 'すらすら', 'するめ', 'すれちがう', 'すろっと', 'すわる', 'すんぜん', 'すんぽう', 'せあぶら', 'せいかつ', 'せいげん', 'せいじ', 'せいよう', 'せおう', 'せかいかん', 'せきにん', 'せきむ', 'せきゆ', 'せきらんうん', 'せけん', 'せこう', 'せすじ', 'せたい', 'せたけ', 'せっかく', 'せっきゃく', 'ぜっく', 'せっけん', 'せっこつ', 'せっさたくま', 'せつぞく', 'せつだん', 'せつでん', 'せっぱん', 'せつび', 'せつぶん', 'せつめい', 'せつりつ', 'せなか', 'せのび', 'せはば', 'せびろ', 'せぼね', 'せまい', 'せまる', 'せめる', 'せもたれ', 'せりふ', 'ぜんあく', 'せんい', 'せんえい', 'せんか', 'せんきょ', 'せんく', 'せんげん', 'ぜんご', 'せんさい', 'せんしゅ', 'せんすい', 'せんせい', 'せんぞ', 'せんたく', 'せんちょう', 'せんてい', 'せんとう', 'せんぬき', 'せんねん', 'せんぱい', 'ぜんぶ', 'ぜんぽう', 'せんむ', 'せんめんじょ', 'せんもん', 'せんやく', 'せんゆう', 'せんよう', 'ぜんら', 'ぜんりゃく', 'せんれい', 'せんろ', 'そあく', 'そいとげる', 'そいね', 'そうがんきょう', 'そうき', 'そうご', 'そうしん', 'そうだん', 'そうなん', 'そうび', 'そうめん', 'そうり', 'そえもの', 'そえん', 'そがい', 'そげき', 'そこう', 'そこそこ', 'そざい', 'そしな', 'そせい', 'そせん', 'そそぐ', 'そだてる', 'そつう', 'そつえん', 'そっかん', 'そつぎょう', 'そっけつ', 'そっこう', 'そっせん', 'そっと', 'そとがわ', 'そとづら', 'そなえる', 'そなた', 'そふぼ', 'そぼく', 'そぼろ', 'そまつ', 'そまる', 'そむく', 'そむりえ', 'そめる', 'そもそも', 'そよかぜ', 'そらまめ', 'そろう', 'そんかい', 'そんけい', 'そんざい', 'そんしつ', 'そんぞく', 'そんちょう', 'ぞんび', 'ぞんぶん', 'そんみん', 'たあい', 'たいいん', 'たいうん', 'たいえき', 'たいおう', 'だいがく', 'たいき', 'たいぐう', 'たいけん', 'たいこ', 'たいざい', 'だいじょうぶ', 'だいすき', 'たいせつ', 'たいそう', 'だいたい', 'たいちょう', 'たいてい', 'だいどころ', 'たいない', 'たいねつ', 'たいのう', 'たいはん', 'だいひょう', 'たいふう', 'たいへん', 'たいほ', 'たいまつばな', 'たいみんぐ', 'たいむ', 'たいめん', 'たいやき', 'たいよう', 'たいら', 'たいりょく', 'たいる', 'たいわん', 'たうえ', 'たえる', 'たおす', 'たおる', 'たおれる', 'たかい', 'たかね', 'たきび', 'たくさん', 'たこく', 'たこやき', 'たさい', 'たしざん', 'だじゃれ', 'たすける', 'たずさわる', 'たそがれ', 'たたかう', 'たたく', 'ただしい', 'たたみ', 'たちばな', 'だっかい', 'だっきゃく', 'だっこ', 'だっしゅつ', 'だったい', 'たてる', 'たとえる', 'たなばた', 'たにん', 'たぬき', 'たのしみ', 'たはつ', 'たぶん', 'たべる', 'たぼう', 'たまご', 'たまる', 'だむる', 'ためいき', 'ためす', 'ためる', 'たもつ', 'たやすい', 'たよる', 'たらす', 'たりきほんがん', 'たりょう', 'たりる', 'たると', 'たれる', 'たれんと', 'たろっと', 'たわむれる', 'だんあつ', 'たんい', 'たんおん', 'たんか', 'たんき', 'たんけん', 'たんご', 'たんさん', 'たんじょうび', 'だんせい', 'たんそく', 'たんたい', 'だんち', 'たんてい', 'たんとう', 'だんな', 'たんにん', 'だんねつ', 'たんのう', 'たんぴん', 'だんぼう', 'たんまつ', 'たんめい', 'だんれつ', 'だんろ', 'だんわ', 'ちあい', 'ちあん', 'ちいき', 'ちいさい', 'ちえん', 'ちかい', 'ちから', 'ちきゅう', 'ちきん', 'ちけいず', 'ちけん', 'ちこく', 'ちさい', 'ちしき', 'ちしりょう', 'ちせい', 'ちそう', 'ちたい', 'ちたん', 'ちちおや', 'ちつじょ', 'ちてき', 'ちてん', 'ちぬき', 'ちぬり', 'ちのう', 'ちひょう', 'ちへいせん', 'ちほう', 'ちまた', 'ちみつ', 'ちみどろ', 'ちめいど', 'ちゃんこなべ', 'ちゅうい', 'ちゆりょく', 'ちょうし', 'ちょさくけん', 'ちらし', 'ちらみ', 'ちりがみ', 'ちりょう', 'ちるど', 'ちわわ', 'ちんたい', 'ちんもく', 'ついか', 'ついたち', 'つうか', 'つうじょう', 'つうはん', 'つうわ', 'つかう', 'つかれる', 'つくね', 'つくる', 'つけね', 'つける', 'つごう', 'つたえる', 'つづく', 'つつじ', 'つつむ', 'つとめる', 'つながる', 'つなみ', 'つねづね', 'つのる', 'つぶす', 'つまらない', 'つまる', 'つみき', 'つめたい', 'つもり', 'つもる', 'つよい', 'つるぼ', 'つるみく', 'つわもの', 'つわり', 'てあし', 'てあて', 'てあみ', 'ていおん', 'ていか', 'ていき', 'ていけい', 'ていこく', 'ていさつ', 'ていし', 'ていせい', 'ていたい', 'ていど', 'ていねい', 'ていひょう', 'ていへん', 'ていぼう', 'てうち', 'ておくれ', 'てきとう', 'てくび', 'でこぼこ', 'てさぎょう', 'てさげ', 'てすり', 'てそう', 'てちがい', 'てちょう', 'てつがく', 'てつづき', 'でっぱ', 'てつぼう', 'てつや', 'でぬかえ', 'てぬき', 'てぬぐい', 'てのひら', 'てはい', 'てぶくろ', 'てふだ', 'てほどき', 'てほん', 'てまえ', 'てまきずし', 'てみじか', 'てみやげ', 'てらす', 'てれび', 'てわけ', 'てわたし', 'でんあつ', 'てんいん', 'てんかい', 'てんき', 'てんぐ', 'てんけん', 'てんごく', 'てんさい', 'てんし', 'てんすう', 'でんち', 'てんてき', 'てんとう', 'てんない', 'てんぷら', 'てんぼうだい', 'てんめつ', 'てんらんかい', 'でんりょく', 'でんわ', 'どあい', 'といれ', 'どうかん', 'とうきゅう', 'どうぐ', 'とうし', 'とうむぎ', 'とおい', 'とおか', 'とおく', 'とおす', 'とおる', 'とかい', 'とかす', 'ときおり', 'ときどき', 'とくい', 'とくしゅう', 'とくてん', 'とくに', 'とくべつ', 'とけい', 'とける', 'とこや', 'とさか', 'としょかん', 'とそう', 'とたん', 'とちゅう', 'とっきゅう', 'とっくん', 'とつぜん', 'とつにゅう', 'とどける', 'ととのえる', 'とない', 'となえる', 'となり', 'とのさま', 'とばす', 'どぶがわ', 'とほう', 'とまる', 'とめる', 'ともだち', 'ともる', 'どようび', 'とらえる', 'とんかつ', 'どんぶり', 'ないかく', 'ないこう', 'ないしょ', 'ないす', 'ないせん', 'ないそう', 'なおす', 'ながい', 'なくす', 'なげる', 'なこうど', 'なさけ', 'なたでここ', 'なっとう', 'なつやすみ', 'ななおし', 'なにごと', 'なにもの', 'なにわ', 'なのか', 'なふだ', 'なまいき', 'なまえ', 'なまみ', 'なみだ', 'なめらか', 'なめる', 'なやむ', 'ならう', 'ならび', 'ならぶ', 'なれる', 'なわとび', 'なわばり', 'にあう', 'にいがた', 'にうけ', 'におい', 'にかい', 'にがて', 'にきび', 'にくしみ', 'にくまん', 'にげる', 'にさんかたんそ', 'にしき', 'にせもの', 'にちじょう', 'にちようび', 'にっか', 'にっき', 'にっけい', 'にっこう', 'にっさん', 'にっしょく', 'にっすう', 'にっせき', 'にってい', 'になう', 'にほん', 'にまめ', 'にもつ', 'にやり', 'にゅういん', 'にりんしゃ', 'にわとり', 'にんい', 'にんか', 'にんき', 'にんげん', 'にんしき', 'にんずう', 'にんそう', 'にんたい', 'にんち', 'にんてい', 'にんにく', 'にんぷ', 'にんまり', 'にんむ', 'にんめい', 'にんよう', 'ぬいくぎ', 'ぬかす', 'ぬぐいとる', 'ぬぐう', 'ぬくもり', 'ぬすむ', 'ぬまえび', 'ぬめり', 'ぬらす', 'ぬんちゃく', 'ねあげ', 'ねいき', 'ねいる', 'ねいろ', 'ねぐせ', 'ねくたい', 'ねくら', 'ねこぜ', 'ねこむ', 'ねさげ', 'ねすごす', 'ねそべる', 'ねだん', 'ねつい', 'ねっしん', 'ねつぞう', 'ねったいぎょ', 'ねぶそく', 'ねふだ', 'ねぼう', 'ねほりはほり', 'ねまき', 'ねまわし', 'ねみみ', 'ねむい', 'ねむたい', 'ねもと', 'ねらう', 'ねわざ', 'ねんいり', 'ねんおし', 'ねんかん', 'ねんきん', 'ねんぐ', 'ねんざ', 'ねんし', 'ねんちゃく', 'ねんど', 'ねんぴ', 'ねんぶつ', 'ねんまつ', 'ねんりょう', 'ねんれい', 'のいず', 'のおづま', 'のがす', 'のきなみ', 'のこぎり', 'のこす', 'のこる', 'のせる', 'のぞく', 'のぞむ', 'のたまう', 'のちほど', 'のっく', 'のばす', 'のはら', 'のべる', 'のぼる', 'のみもの', 'のやま', 'のらいぬ', 'のらねこ', 'のりもの', 'のりゆき', 'のれん', 'のんき', 'ばあい', 'はあく', 'ばあさん', 'ばいか', 'ばいく', 'はいけん', 'はいご', 'はいしん', 'はいすい', 'はいせん', 'はいそう', 'はいち', 'ばいばい', 'はいれつ', 'はえる', 'はおる', 'はかい', 'ばかり', 'はかる', 'はくしゅ', 'はけん', 'はこぶ', 'はさみ', 'はさん', 'はしご', 'ばしょ', 'はしる', 'はせる', 'ぱそこん', 'はそん', 'はたん', 'はちみつ', 'はつおん', 'はっかく', 'はづき', 'はっきり', 'はっくつ', 'はっけん', 'はっこう', 'はっさん', 'はっしん', 'はったつ', 'はっちゅう', 'はってん', 'はっぴょう', 'はっぽう', 'はなす', 'はなび', 'はにかむ', 'はぶらし', 'はみがき', 'はむかう', 'はめつ', 'はやい', 'はやし', 'はらう', 'はろうぃん', 'はわい', 'はんい', 'はんえい', 'はんおん', 'はんかく', 'はんきょう', 'ばんぐみ', 'はんこ', 'はんしゃ', 'はんすう', 'はんだん', 'ぱんち', 'ぱんつ', 'はんてい', 'はんとし', 'はんのう', 'はんぱ', 'はんぶん', 'はんぺん', 'はんぼうき', 'はんめい', 'はんらん', 'はんろん', 'ひいき', 'ひうん', 'ひえる', 'ひかく', 'ひかり', 'ひかる', 'ひかん', 'ひくい', 'ひけつ', 'ひこうき', 'ひこく', 'ひさい', 'ひさしぶり', 'ひさん', 'びじゅつかん', 'ひしょ', 'ひそか', 'ひそむ', 'ひたむき', 'ひだり', 'ひたる', 'ひつぎ', 'ひっこし', 'ひっし', 'ひつじゅひん', 'ひっす', 'ひつぜん', 'ぴったり', 'ぴっちり', 'ひつよう', 'ひてい', 'ひとごみ', 'ひなまつり', 'ひなん', 'ひねる', 'ひはん', 'ひびく', 'ひひょう', 'ひほう', 'ひまわり', 'ひまん', 'ひみつ', 'ひめい', 'ひめじし', 'ひやけ', 'ひやす', 'ひよう', 'びょうき', 'ひらがな', 'ひらく', 'ひりつ', 'ひりょう', 'ひるま', 'ひるやすみ', 'ひれい', 'ひろい', 'ひろう', 'ひろき', 'ひろゆき', 'ひんかく', 'ひんけつ', 'ひんこん', 'ひんしゅ', 'ひんそう', 'ぴんち', 'ひんぱん', 'びんぼう', 'ふあん', 'ふいうち', 'ふうけい', 'ふうせん', 'ぷうたろう', 'ふうとう', 'ふうふ', 'ふえる', 'ふおん', 'ふかい', 'ふきん', 'ふくざつ', 'ふくぶくろ', 'ふこう', 'ふさい', 'ふしぎ', 'ふじみ', 'ふすま', 'ふせい', 'ふせぐ', 'ふそく', 'ぶたにく', 'ふたん', 'ふちょう', 'ふつう', 'ふつか', 'ふっかつ', 'ふっき', 'ふっこく', 'ぶどう', 'ふとる', 'ふとん', 'ふのう', 'ふはい', 'ふひょう', 'ふへん', 'ふまん', 'ふみん', 'ふめつ', 'ふめん', 'ふよう', 'ふりこ', 'ふりる', 'ふるい', 'ふんいき', 'ぶんがく', 'ぶんぐ', 'ふんしつ', 'ぶんせき', 'ふんそう', 'ぶんぽう', 'へいあん', 'へいおん', 'へいがい', 'へいき', 'へいげん', 'へいこう', 'へいさ', 'へいしゃ', 'へいせつ', 'へいそ', 'へいたく', 'へいてん', 'へいねつ', 'へいわ', 'へきが', 'へこむ', 'べにいろ', 'べにしょうが', 'へらす', 'へんかん', 'べんきょう', 'べんごし', 'へんさい', 'へんたい', 'べんり', 'ほあん', 'ほいく', 'ぼうぎょ', 'ほうこく', 'ほうそう', 'ほうほう', 'ほうもん', 'ほうりつ', 'ほえる', 'ほおん', 'ほかん', 'ほきょう', 'ぼきん', 'ほくろ', 'ほけつ', 'ほけん', 'ほこう', 'ほこる', 'ほしい', 'ほしつ', 'ほしゅ', 'ほしょう', 'ほせい', 'ほそい', 'ほそく', 'ほたて', 'ほたる', 'ぽちぶくろ', 'ほっきょく', 'ほっさ', 'ほったん', 'ほとんど', 'ほめる', 'ほんい', 'ほんき', 'ほんけ', 'ほんしつ', 'ほんやく', 'まいにち', 'まかい', 'まかせる', 'まがる', 'まける', 'まこと', 'まさつ', 'まじめ', 'ますく', 'まぜる', 'まつり', 'まとめ', 'まなぶ', 'まぬけ', 'まねく', 'まほう', 'まもる', 'まゆげ', 'まよう', 'まろやか', 'まわす', 'まわり', 'まわる', 'まんが', 'まんきつ', 'まんぞく', 'まんなか', 'みいら', 'みうち', 'みえる', 'みがく', 'みかた', 'みかん', 'みけん', 'みこん', 'みじかい', 'みすい', 'みすえる', 'みせる', 'みっか', 'みつかる', 'みつける', 'みてい', 'みとめる', 'みなと', 'みなみかさい', 'みねらる', 'みのう', 'みのがす', 'みほん', 'みもと', 'みやげ', 'みらい', 'みりょく', 'みわく', 'みんか', 'みんぞく', 'むいか', 'むえき', 'むえん', 'むかい', 'むかう', 'むかえ', 'むかし', 'むぎちゃ', 'むける', 'むげん', 'むさぼる', 'むしあつい', 'むしば', 'むじゅん', 'むしろ', 'むすう', 'むすこ', 'むすぶ', 'むすめ', 'むせる', 'むせん', 'むちゅう', 'むなしい', 'むのう', 'むやみ', 'むよう', 'むらさき', 'むりょう', 'むろん', 'めいあん', 'めいうん', 'めいえん', 'めいかく', 'めいきょく', 'めいさい', 'めいし', 'めいそう', 'めいぶつ', 'めいれい', 'めいわく', 'めぐまれる', 'めざす', 'めした', 'めずらしい', 'めだつ', 'めまい', 'めやす', 'めんきょ', 'めんせき', 'めんどう', 'もうしあげる', 'もうどうけん', 'もえる', 'もくし', 'もくてき', 'もくようび', 'もちろん', 'もどる', 'もらう', 'もんく', 'もんだい', 'やおや', 'やける', 'やさい', 'やさしい', 'やすい', 'やすたろう', 'やすみ', 'やせる', 'やそう', 'やたい', 'やちん', 'やっと', 'やっぱり', 'やぶる', 'やめる', 'ややこしい', 'やよい', 'やわらかい', 'ゆうき', 'ゆうびんきょく', 'ゆうべ', 'ゆうめい', 'ゆけつ', 'ゆしゅつ', 'ゆせん', 'ゆそう', 'ゆたか', 'ゆちゃく', 'ゆでる', 'ゆにゅう', 'ゆびわ', 'ゆらい', 'ゆれる', 'ようい', 'ようか', 'ようきゅう', 'ようじ', 'ようす', 'ようちえん', 'よかぜ', 'よかん', 'よきん', 'よくせい', 'よくぼう', 'よけい', 'よごれる', 'よさん', 'よしゅう', 'よそう', 'よそく', 'よっか', 'よてい', 'よどがわく', 'よねつ', 'よやく', 'よゆう', 'よろこぶ', 'よろしい', 'らいう', 'らくがき', 'らくご', 'らくさつ', 'らくだ', 'らしんばん', 'らせん', 'らぞく', 'らたい', 'らっか', 'られつ', 'りえき', 'りかい', 'りきさく', 'りきせつ', 'りくぐん', 'りくつ', 'りけん', 'りこう', 'りせい', 'りそう', 'りそく', 'りてん', 'りねん', 'りゆう', 'りゅうがく', 'りよう', 'りょうり', 'りょかん', 'りょくちゃ', 'りょこう', 'りりく', 'りれき', 'りろん', 'りんご', 'るいけい', 'るいさい', 'るいじ', 'るいせき', 'るすばん', 'るりがわら', 'れいかん', 'れいぎ', 'れいせい', 'れいぞうこ', 'れいとう', 'れいぼう', 'れきし', 'れきだい', 'れんあい', 'れんけい', 'れんこん', 'れんさい', 'れんしゅう', 'れんぞく', 'れんらく', 'ろうか', 'ろうご', 'ろうじん', 'ろうそく', 'ろくが', 'ろこつ', 'ろじうら', 'ろしゅつ', 'ろせん', 'ろてん', 'ろめん', 'ろれつ', 'ろんぎ', 'ろんぱ', 'ろんぶん', 'ろんり', 'わかす', 'わかめ', 'わかやま', 'わかれる', 'わしつ', 'わじまし', 'わすれもの', 'わらう', 'われる']\n\nmodule.exports = japanese\n","'use strict'\n\nvar spanish = ['ábaco', 'abdomen', 'abeja', 'abierto', 'abogado', 'abono', 'aborto', 'abrazo', 'abrir', 'abuelo', 'abuso', 'acabar', 'academia', 'acceso', 'acción', 'aceite', 'acelga', 'acento', 'aceptar', 'ácido', 'aclarar', 'acné', 'acoger', 'acoso', 'activo', 'acto', 'actriz', 'actuar', 'acudir', 'acuerdo', 'acusar', 'adicto', 'admitir', 'adoptar', 'adorno', 'aduana', 'adulto', 'aéreo', 'afectar', 'afición', 'afinar', 'afirmar', 'ágil', 'agitar', 'agonía', 'agosto', 'agotar', 'agregar', 'agrio', 'agua', 'agudo', 'águila', 'aguja', 'ahogo', 'ahorro', 'aire', 'aislar', 'ajedrez', 'ajeno', 'ajuste', 'alacrán', 'alambre', 'alarma', 'alba', 'álbum', 'alcalde', 'aldea', 'alegre', 'alejar', 'alerta', 'aleta', 'alfiler', 'alga', 'algodón', 'aliado', 'aliento', 'alivio', 'alma', 'almeja', 'almíbar', 'altar', 'alteza', 'altivo', 'alto', 'altura', 'alumno', 'alzar', 'amable', 'amante', 'amapola', 'amargo', 'amasar', 'ámbar', 'ámbito', 'ameno', 'amigo', 'amistad', 'amor', 'amparo', 'amplio', 'ancho', 'anciano', 'ancla', 'andar', 'andén', 'anemia', 'ángulo', 'anillo', 'ánimo', 'anís', 'anotar', 'antena', 'antiguo', 'antojo', 'anual', 'anular', 'anuncio', 'añadir', 'añejo', 'año', 'apagar', 'aparato', 'apetito', 'apio', 'aplicar', 'apodo', 'aporte', 'apoyo', 'aprender', 'aprobar', 'apuesta', 'apuro', 'arado', 'araña', 'arar', 'árbitro', 'árbol', 'arbusto', 'archivo', 'arco', 'arder', 'ardilla', 'arduo', 'área', 'árido', 'aries', 'armonía', 'arnés', 'aroma', 'arpa', 'arpón', 'arreglo', 'arroz', 'arruga', 'arte', 'artista', 'asa', 'asado', 'asalto', 'ascenso', 'asegurar', 'aseo', 'asesor', 'asiento', 'asilo', 'asistir', 'asno', 'asombro', 'áspero', 'astilla', 'astro', 'astuto', 'asumir', 'asunto', 'atajo', 'ataque', 'atar', 'atento', 'ateo', 'ático', 'atleta', 'átomo', 'atraer', 'atroz', 'atún', 'audaz', 'audio', 'auge', 'aula', 'aumento', 'ausente', 'autor', 'aval', 'avance', 'avaro', 'ave', 'avellana', 'avena', 'avestruz', 'avión', 'aviso', 'ayer', 'ayuda', 'ayuno', 'azafrán', 'azar', 'azote', 'azúcar', 'azufre', 'azul', 'baba', 'babor', 'bache', 'bahía', 'baile', 'bajar', 'balanza', 'balcón', 'balde', 'bambú', 'banco', 'banda', 'baño', 'barba', 'barco', 'barniz', 'barro', 'báscula', 'bastón', 'basura', 'batalla', 'batería', 'batir', 'batuta', 'baúl', 'bazar', 'bebé', 'bebida', 'bello', 'besar', 'beso', 'bestia', 'bicho', 'bien', 'bingo', 'blanco', 'bloque', 'blusa', 'boa', 'bobina', 'bobo', 'boca', 'bocina', 'boda', 'bodega', 'boina', 'bola', 'bolero', 'bolsa', 'bomba', 'bondad', 'bonito', 'bono', 'bonsái', 'borde', 'borrar', 'bosque', 'bote', 'botín', 'bóveda', 'bozal', 'bravo', 'brazo', 'brecha', 'breve', 'brillo', 'brinco', 'brisa', 'broca', 'broma', 'bronce', 'brote', 'bruja', 'brusco', 'bruto', 'buceo', 'bucle', 'bueno', 'buey', 'bufanda', 'bufón', 'búho', 'buitre', 'bulto', 'burbuja', 'burla', 'burro', 'buscar', 'butaca', 'buzón', 'caballo', 'cabeza', 'cabina', 'cabra', 'cacao', 'cadáver', 'cadena', 'caer', 'café', 'caída', 'caimán', 'caja', 'cajón', 'cal', 'calamar', 'calcio', 'caldo', 'calidad', 'calle', 'calma', 'calor', 'calvo', 'cama', 'cambio', 'camello', 'camino', 'campo', 'cáncer', 'candil', 'canela', 'canguro', 'canica', 'canto', 'caña', 'cañón', 'caoba', 'caos', 'capaz', 'capitán', 'capote', 'captar', 'capucha', 'cara', 'carbón', 'cárcel', 'careta', 'carga', 'cariño', 'carne', 'carpeta', 'carro', 'carta', 'casa', 'casco', 'casero', 'caspa', 'castor', 'catorce', 'catre', 'caudal', 'causa', 'cazo', 'cebolla', 'ceder', 'cedro', 'celda', 'célebre', 'celoso', 'célula', 'cemento', 'ceniza', 'centro', 'cerca', 'cerdo', 'cereza', 'cero', 'cerrar', 'certeza', 'césped', 'cetro', 'chacal', 'chaleco', 'champú', 'chancla', 'chapa', 'charla', 'chico', 'chiste', 'chivo', 'choque', 'choza', 'chuleta', 'chupar', 'ciclón', 'ciego', 'cielo', 'cien', 'cierto', 'cifra', 'cigarro', 'cima', 'cinco', 'cine', 'cinta', 'ciprés', 'circo', 'ciruela', 'cisne', 'cita', 'ciudad', 'clamor', 'clan', 'claro', 'clase', 'clave', 'cliente', 'clima', 'clínica', 'cobre', 'cocción', 'cochino', 'cocina', 'coco', 'código', 'codo', 'cofre', 'coger', 'cohete', 'cojín', 'cojo', 'cola', 'colcha', 'colegio', 'colgar', 'colina', 'collar', 'colmo', 'columna', 'combate', 'comer', 'comida', 'cómodo', 'compra', 'conde', 'conejo', 'conga', 'conocer', 'consejo', 'contar', 'copa', 'copia', 'corazón', 'corbata', 'corcho', 'cordón', 'corona', 'correr', 'coser', 'cosmos', 'costa', 'cráneo', 'cráter', 'crear', 'crecer', 'creído', 'crema', 'cría', 'crimen', 'cripta', 'crisis', 'cromo', 'crónica', 'croqueta', 'crudo', 'cruz', 'cuadro', 'cuarto', 'cuatro', 'cubo', 'cubrir', 'cuchara', 'cuello', 'cuento', 'cuerda', 'cuesta', 'cueva', 'cuidar', 'culebra', 'culpa', 'culto', 'cumbre', 'cumplir', 'cuna', 'cuneta', 'cuota', 'cupón', 'cúpula', 'curar', 'curioso', 'curso', 'curva', 'cutis', 'dama', 'danza', 'dar', 'dardo', 'dátil', 'deber', 'débil', 'década', 'decir', 'dedo', 'defensa', 'definir', 'dejar', 'delfín', 'delgado', 'delito', 'demora', 'denso', 'dental', 'deporte', 'derecho', 'derrota', 'desayuno', 'deseo', 'desfile', 'desnudo', 'destino', 'desvío', 'detalle', 'detener', 'deuda', 'día', 'diablo', 'diadema', 'diamante', 'diana', 'diario', 'dibujo', 'dictar', 'diente', 'dieta', 'diez', 'difícil', 'digno', 'dilema', 'diluir', 'dinero', 'directo', 'dirigir', 'disco', 'diseño', 'disfraz', 'diva', 'divino', 'doble', 'doce', 'dolor', 'domingo', 'don', 'donar', 'dorado', 'dormir', 'dorso', 'dos', 'dosis', 'dragón', 'droga', 'ducha', 'duda', 'duelo', 'dueño', 'dulce', 'dúo', 'duque', 'durar', 'dureza', 'duro', 'ébano', 'ebrio', 'echar', 'eco', 'ecuador', 'edad', 'edición', 'edificio', 'editor', 'educar', 'efecto', 'eficaz', 'eje', 'ejemplo', 'elefante', 'elegir', 'elemento', 'elevar', 'elipse', 'élite', 'elixir', 'elogio', 'eludir', 'embudo', 'emitir', 'emoción', 'empate', 'empeño', 'empleo', 'empresa', 'enano', 'encargo', 'enchufe', 'encía', 'enemigo', 'enero', 'enfado', 'enfermo', 'engaño', 'enigma', 'enlace', 'enorme', 'enredo', 'ensayo', 'enseñar', 'entero', 'entrar', 'envase', 'envío', 'época', 'equipo', 'erizo', 'escala', 'escena', 'escolar', 'escribir', 'escudo', 'esencia', 'esfera', 'esfuerzo', 'espada', 'espejo', 'espía', 'esposa', 'espuma', 'esquí', 'estar', 'este', 'estilo', 'estufa', 'etapa', 'eterno', 'ética', 'etnia', 'evadir', 'evaluar', 'evento', 'evitar', 'exacto', 'examen', 'exceso', 'excusa', 'exento', 'exigir', 'exilio', 'existir', 'éxito', 'experto', 'explicar', 'exponer', 'extremo', 'fábrica', 'fábula', 'fachada', 'fácil', 'factor', 'faena', 'faja', 'falda', 'fallo', 'falso', 'faltar', 'fama', 'familia', 'famoso', 'faraón', 'farmacia', 'farol', 'farsa', 'fase', 'fatiga', 'fauna', 'favor', 'fax', 'febrero', 'fecha', 'feliz', 'feo', 'feria', 'feroz', 'fértil', 'fervor', 'festín', 'fiable', 'fianza', 'fiar', 'fibra', 'ficción', 'ficha', 'fideo', 'fiebre', 'fiel', 'fiera', 'fiesta', 'figura', 'fijar', 'fijo', 'fila', 'filete', 'filial', 'filtro', 'fin', 'finca', 'fingir', 'finito', 'firma', 'flaco', 'flauta', 'flecha', 'flor', 'flota', 'fluir', 'flujo', 'flúor', 'fobia', 'foca', 'fogata', 'fogón', 'folio', 'folleto', 'fondo', 'forma', 'forro', 'fortuna', 'forzar', 'fosa', 'foto', 'fracaso', 'frágil', 'franja', 'frase', 'fraude', 'freír', 'freno', 'fresa', 'frío', 'frito', 'fruta', 'fuego', 'fuente', 'fuerza', 'fuga', 'fumar', 'función', 'funda', 'furgón', 'furia', 'fusil', 'fútbol', 'futuro', 'gacela', 'gafas', 'gaita', 'gajo', 'gala', 'galería', 'gallo', 'gamba', 'ganar', 'gancho', 'ganga', 'ganso', 'garaje', 'garza', 'gasolina', 'gastar', 'gato', 'gavilán', 'gemelo', 'gemir', 'gen', 'género', 'genio', 'gente', 'geranio', 'gerente', 'germen', 'gesto', 'gigante', 'gimnasio', 'girar', 'giro', 'glaciar', 'globo', 'gloria', 'gol', 'golfo', 'goloso', 'golpe', 'goma', 'gordo', 'gorila', 'gorra', 'gota', 'goteo', 'gozar', 'grada', 'gráfico', 'grano', 'grasa', 'gratis', 'grave', 'grieta', 'grillo', 'gripe', 'gris', 'grito', 'grosor', 'grúa', 'grueso', 'grumo', 'grupo', 'guante', 'guapo', 'guardia', 'guerra', 'guía', 'guiño', 'guion', 'guiso', 'guitarra', 'gusano', 'gustar', 'haber', 'hábil', 'hablar', 'hacer', 'hacha', 'hada', 'hallar', 'hamaca', 'harina', 'haz', 'hazaña', 'hebilla', 'hebra', 'hecho', 'helado', 'helio', 'hembra', 'herir', 'hermano', 'héroe', 'hervir', 'hielo', 'hierro', 'hígado', 'higiene', 'hijo', 'himno', 'historia', 'hocico', 'hogar', 'hoguera', 'hoja', 'hombre', 'hongo', 'honor', 'honra', 'hora', 'hormiga', 'horno', 'hostil', 'hoyo', 'hueco', 'huelga', 'huerta', 'hueso', 'huevo', 'huida', 'huir', 'humano', 'húmedo', 'humilde', 'humo', 'hundir', 'huracán', 'hurto', 'icono', 'ideal', 'idioma', 'ídolo', 'iglesia', 'iglú', 'igual', 'ilegal', 'ilusión', 'imagen', 'imán', 'imitar', 'impar', 'imperio', 'imponer', 'impulso', 'incapaz', 'índice', 'inerte', 'infiel', 'informe', 'ingenio', 'inicio', 'inmenso', 'inmune', 'innato', 'insecto', 'instante', 'interés', 'íntimo', 'intuir', 'inútil', 'invierno', 'ira', 'iris', 'ironía', 'isla', 'islote', 'jabalí', 'jabón', 'jamón', 'jarabe', 'jardín', 'jarra', 'jaula', 'jazmín', 'jefe', 'jeringa', 'jinete', 'jornada', 'joroba', 'joven', 'joya', 'juerga', 'jueves', 'juez', 'jugador', 'jugo', 'juguete', 'juicio', 'junco', 'jungla', 'junio', 'juntar', 'júpiter', 'jurar', 'justo', 'juvenil', 'juzgar', 'kilo', 'koala', 'labio', 'lacio', 'lacra', 'lado', 'ladrón', 'lagarto', 'lágrima', 'laguna', 'laico', 'lamer', 'lámina', 'lámpara', 'lana', 'lancha', 'langosta', 'lanza', 'lápiz', 'largo', 'larva', 'lástima', 'lata', 'látex', 'latir', 'laurel', 'lavar', 'lazo', 'leal', 'lección', 'leche', 'lector', 'leer', 'legión', 'legumbre', 'lejano', 'lengua', 'lento', 'leña', 'león', 'leopardo', 'lesión', 'letal', 'letra', 'leve', 'leyenda', 'libertad', 'libro', 'licor', 'líder', 'lidiar', 'lienzo', 'liga', 'ligero', 'lima', 'límite', 'limón', 'limpio', 'lince', 'lindo', 'línea', 'lingote', 'lino', 'linterna', 'líquido', 'liso', 'lista', 'litera', 'litio', 'litro', 'llaga', 'llama', 'llanto', 'llave', 'llegar', 'llenar', 'llevar', 'llorar', 'llover', 'lluvia', 'lobo', 'loción', 'loco', 'locura', 'lógica', 'logro', 'lombriz', 'lomo', 'lonja', 'lote', 'lucha', 'lucir', 'lugar', 'lujo', 'luna', 'lunes', 'lupa', 'lustro', 'luto', 'luz', 'maceta', 'macho', 'madera', 'madre', 'maduro', 'maestro', 'mafia', 'magia', 'mago', 'maíz', 'maldad', 'maleta', 'malla', 'malo', 'mamá', 'mambo', 'mamut', 'manco', 'mando', 'manejar', 'manga', 'maniquí', 'manjar', 'mano', 'manso', 'manta', 'mañana', 'mapa', 'máquina', 'mar', 'marco', 'marea', 'marfil', 'margen', 'marido', 'mármol', 'marrón', 'martes', 'marzo', 'masa', 'máscara', 'masivo', 'matar', 'materia', 'matiz', 'matriz', 'máximo', 'mayor', 'mazorca', 'mecha', 'medalla', 'medio', 'médula', 'mejilla', 'mejor', 'melena', 'melón', 'memoria', 'menor', 'mensaje', 'mente', 'menú', 'mercado', 'merengue', 'mérito', 'mes', 'mesón', 'meta', 'meter', 'método', 'metro', 'mezcla', 'miedo', 'miel', 'miembro', 'miga', 'mil', 'milagro', 'militar', 'millón', 'mimo', 'mina', 'minero', 'mínimo', 'minuto', 'miope', 'mirar', 'misa', 'miseria', 'misil', 'mismo', 'mitad', 'mito', 'mochila', 'moción', 'moda', 'modelo', 'moho', 'mojar', 'molde', 'moler', 'molino', 'momento', 'momia', 'monarca', 'moneda', 'monja', 'monto', 'moño', 'morada', 'morder', 'moreno', 'morir', 'morro', 'morsa', 'mortal', 'mosca', 'mostrar', 'motivo', 'mover', 'móvil', 'mozo', 'mucho', 'mudar', 'mueble', 'muela', 'muerte', 'muestra', 'mugre', 'mujer', 'mula', 'muleta', 'multa', 'mundo', 'muñeca', 'mural', 'muro', 'músculo', 'museo', 'musgo', 'música', 'muslo', 'nácar', 'nación', 'nadar', 'naipe', 'naranja', 'nariz', 'narrar', 'nasal', 'natal', 'nativo', 'natural', 'náusea', 'naval', 'nave', 'navidad', 'necio', 'néctar', 'negar', 'negocio', 'negro', 'neón', 'nervio', 'neto', 'neutro', 'nevar', 'nevera', 'nicho', 'nido', 'niebla', 'nieto', 'niñez', 'niño', 'nítido', 'nivel', 'nobleza', 'noche', 'nómina', 'noria', 'norma', 'norte', 'nota', 'noticia', 'novato', 'novela', 'novio', 'nube', 'nuca', 'núcleo', 'nudillo', 'nudo', 'nuera', 'nueve', 'nuez', 'nulo', 'número', 'nutria', 'oasis', 'obeso', 'obispo', 'objeto', 'obra', 'obrero', 'observar', 'obtener', 'obvio', 'oca', 'ocaso', 'océano', 'ochenta', 'ocho', 'ocio', 'ocre', 'octavo', 'octubre', 'oculto', 'ocupar', 'ocurrir', 'odiar', 'odio', 'odisea', 'oeste', 'ofensa', 'oferta', 'oficio', 'ofrecer', 'ogro', 'oído', 'oír', 'ojo', 'ola', 'oleada', 'olfato', 'olivo', 'olla', 'olmo', 'olor', 'olvido', 'ombligo', 'onda', 'onza', 'opaco', 'opción', 'ópera', 'opinar', 'oponer', 'optar', 'óptica', 'opuesto', 'oración', 'orador', 'oral', 'órbita', 'orca', 'orden', 'oreja', 'órgano', 'orgía', 'orgullo', 'oriente', 'origen', 'orilla', 'oro', 'orquesta', 'oruga', 'osadía', 'oscuro', 'osezno', 'oso', 'ostra', 'otoño', 'otro', 'oveja', 'óvulo', 'óxido', 'oxígeno', 'oyente', 'ozono', 'pacto', 'padre', 'paella', 'página', 'pago', 'país', 'pájaro', 'palabra', 'palco', 'paleta', 'pálido', 'palma', 'paloma', 'palpar', 'pan', 'panal', 'pánico', 'pantera', 'pañuelo', 'papá', 'papel', 'papilla', 'paquete', 'parar', 'parcela', 'pared', 'parir', 'paro', 'párpado', 'parque', 'párrafo', 'parte', 'pasar', 'paseo', 'pasión', 'paso', 'pasta', 'pata', 'patio', 'patria', 'pausa', 'pauta', 'pavo', 'payaso', 'peatón', 'pecado', 'pecera', 'pecho', 'pedal', 'pedir', 'pegar', 'peine', 'pelar', 'peldaño', 'pelea', 'peligro', 'pellejo', 'pelo', 'peluca', 'pena', 'pensar', 'peñón', 'peón', 'peor', 'pepino', 'pequeño', 'pera', 'percha', 'perder', 'pereza', 'perfil', 'perico', 'perla', 'permiso', 'perro', 'persona', 'pesa', 'pesca', 'pésimo', 'pestaña', 'pétalo', 'petróleo', 'pez', 'pezuña', 'picar', 'pichón', 'pie', 'piedra', 'pierna', 'pieza', 'pijama', 'pilar', 'piloto', 'pimienta', 'pino', 'pintor', 'pinza', 'piña', 'piojo', 'pipa', 'pirata', 'pisar', 'piscina', 'piso', 'pista', 'pitón', 'pizca', 'placa', 'plan', 'plata', 'playa', 'plaza', 'pleito', 'pleno', 'plomo', 'pluma', 'plural', 'pobre', 'poco', 'poder', 'podio', 'poema', 'poesía', 'poeta', 'polen', 'policía', 'pollo', 'polvo', 'pomada', 'pomelo', 'pomo', 'pompa', 'poner', 'porción', 'portal', 'posada', 'poseer', 'posible', 'poste', 'potencia', 'potro', 'pozo', 'prado', 'precoz', 'pregunta', 'premio', 'prensa', 'preso', 'previo', 'primo', 'príncipe', 'prisión', 'privar', 'proa', 'probar', 'proceso', 'producto', 'proeza', 'profesor', 'programa', 'prole', 'promesa', 'pronto', 'propio', 'próximo', 'prueba', 'público', 'puchero', 'pudor', 'pueblo', 'puerta', 'puesto', 'pulga', 'pulir', 'pulmón', 'pulpo', 'pulso', 'puma', 'punto', 'puñal', 'puño', 'pupa', 'pupila', 'puré', 'quedar', 'queja', 'quemar', 'querer', 'queso', 'quieto', 'química', 'quince', 'quitar', 'rábano', 'rabia', 'rabo', 'ración', 'radical', 'raíz', 'rama', 'rampa', 'rancho', 'rango', 'rapaz', 'rápido', 'rapto', 'rasgo', 'raspa', 'rato', 'rayo', 'raza', 'razón', 'reacción', 'realidad', 'rebaño', 'rebote', 'recaer', 'receta', 'rechazo', 'recoger', 'recreo', 'recto', 'recurso', 'red', 'redondo', 'reducir', 'reflejo', 'reforma', 'refrán', 'refugio', 'regalo', 'regir', 'regla', 'regreso', 'rehén', 'reino', 'reír', 'reja', 'relato', 'relevo', 'relieve', 'relleno', 'reloj', 'remar', 'remedio', 'remo', 'rencor', 'rendir', 'renta', 'reparto', 'repetir', 'reposo', 'reptil', 'res', 'rescate', 'resina', 'respeto', 'resto', 'resumen', 'retiro', 'retorno', 'retrato', 'reunir', 'revés', 'revista', 'rey', 'rezar', 'rico', 'riego', 'rienda', 'riesgo', 'rifa', 'rígido', 'rigor', 'rincón', 'riñón', 'río', 'riqueza', 'risa', 'ritmo', 'rito', 'rizo', 'roble', 'roce', 'rociar', 'rodar', 'rodeo', 'rodilla', 'roer', 'rojizo', 'rojo', 'romero', 'romper', 'ron', 'ronco', 'ronda', 'ropa', 'ropero', 'rosa', 'rosca', 'rostro', 'rotar', 'rubí', 'rubor', 'rudo', 'rueda', 'rugir', 'ruido', 'ruina', 'ruleta', 'rulo', 'rumbo', 'rumor', 'ruptura', 'ruta', 'rutina', 'sábado', 'saber', 'sabio', 'sable', 'sacar', 'sagaz', 'sagrado', 'sala', 'saldo', 'salero', 'salir', 'salmón', 'salón', 'salsa', 'salto', 'salud', 'salvar', 'samba', 'sanción', 'sandía', 'sanear', 'sangre', 'sanidad', 'sano', 'santo', 'sapo', 'saque', 'sardina', 'sartén', 'sastre', 'satán', 'sauna', 'saxofón', 'sección', 'seco', 'secreto', 'secta', 'sed', 'seguir', 'seis', 'sello', 'selva', 'semana', 'semilla', 'senda', 'sensor', 'señal', 'señor', 'separar', 'sepia', 'sequía', 'ser', 'serie', 'sermón', 'servir', 'sesenta', 'sesión', 'seta', 'setenta', 'severo', 'sexo', 'sexto', 'sidra', 'siesta', 'siete', 'siglo', 'signo', 'sílaba', 'silbar', 'silencio', 'silla', 'símbolo', 'simio', 'sirena', 'sistema', 'sitio', 'situar', 'sobre', 'socio', 'sodio', 'sol', 'solapa', 'soldado', 'soledad', 'sólido', 'soltar', 'solución', 'sombra', 'sondeo', 'sonido', 'sonoro', 'sonrisa', 'sopa', 'soplar', 'soporte', 'sordo', 'sorpresa', 'sorteo', 'sostén', 'sótano', 'suave', 'subir', 'suceso', 'sudor', 'suegra', 'suelo', 'sueño', 'suerte', 'sufrir', 'sujeto', 'sultán', 'sumar', 'superar', 'suplir', 'suponer', 'supremo', 'sur', 'surco', 'sureño', 'surgir', 'susto', 'sutil', 'tabaco', 'tabique', 'tabla', 'tabú', 'taco', 'tacto', 'tajo', 'talar', 'talco', 'talento', 'talla', 'talón', 'tamaño', 'tambor', 'tango', 'tanque', 'tapa', 'tapete', 'tapia', 'tapón', 'taquilla', 'tarde', 'tarea', 'tarifa', 'tarjeta', 'tarot', 'tarro', 'tarta', 'tatuaje', 'tauro', 'taza', 'tazón', 'teatro', 'techo', 'tecla', 'técnica', 'tejado', 'tejer', 'tejido', 'tela', 'teléfono', 'tema', 'temor', 'templo', 'tenaz', 'tender', 'tener', 'tenis', 'tenso', 'teoría', 'terapia', 'terco', 'término', 'ternura', 'terror', 'tesis', 'tesoro', 'testigo', 'tetera', 'texto', 'tez', 'tibio', 'tiburón', 'tiempo', 'tienda', 'tierra', 'tieso', 'tigre', 'tijera', 'tilde', 'timbre', 'tímido', 'timo', 'tinta', 'tío', 'típico', 'tipo', 'tira', 'tirón', 'titán', 'títere', 'título', 'tiza', 'toalla', 'tobillo', 'tocar', 'tocino', 'todo', 'toga', 'toldo', 'tomar', 'tono', 'tonto', 'topar', 'tope', 'toque', 'tórax', 'torero', 'tormenta', 'torneo', 'toro', 'torpedo', 'torre', 'torso', 'tortuga', 'tos', 'tosco', 'toser', 'tóxico', 'trabajo', 'tractor', 'traer', 'tráfico', 'trago', 'traje', 'tramo', 'trance', 'trato', 'trauma', 'trazar', 'trébol', 'tregua', 'treinta', 'tren', 'trepar', 'tres', 'tribu', 'trigo', 'tripa', 'triste', 'triunfo', 'trofeo', 'trompa', 'tronco', 'tropa', 'trote', 'trozo', 'truco', 'trueno', 'trufa', 'tubería', 'tubo', 'tuerto', 'tumba', 'tumor', 'túnel', 'túnica', 'turbina', 'turismo', 'turno', 'tutor', 'ubicar', 'úlcera', 'umbral', 'unidad', 'unir', 'universo', 'uno', 'untar', 'uña', 'urbano', 'urbe', 'urgente', 'urna', 'usar', 'usuario', 'útil', 'utopía', 'uva', 'vaca', 'vacío', 'vacuna', 'vagar', 'vago', 'vaina', 'vajilla', 'vale', 'válido', 'valle', 'valor', 'válvula', 'vampiro', 'vara', 'variar', 'varón', 'vaso', 'vecino', 'vector', 'vehículo', 'veinte', 'vejez', 'vela', 'velero', 'veloz', 'vena', 'vencer', 'venda', 'veneno', 'vengar', 'venir', 'venta', 'venus', 'ver', 'verano', 'verbo', 'verde', 'vereda', 'verja', 'verso', 'verter', 'vía', 'viaje', 'vibrar', 'vicio', 'víctima', 'vida', 'vídeo', 'vidrio', 'viejo', 'viernes', 'vigor', 'vil', 'villa', 'vinagre', 'vino', 'viñedo', 'violín', 'viral', 'virgo', 'virtud', 'visor', 'víspera', 'vista', 'vitamina', 'viudo', 'vivaz', 'vivero', 'vivir', 'vivo', 'volcán', 'volumen', 'volver', 'voraz', 'votar', 'voto', 'voz', 'vuelo', 'vulgar', 'yacer', 'yate', 'yegua', 'yema', 'yerno', 'yeso', 'yodo', 'yoga', 'yogur', 'zafiro', 'zanja', 'zapato', 'zarza', 'zona', 'zorro', 'zumo', 'zurdo']\n\nmodule.exports = spanish\n","'use strict'\n\nvar bsv = {}\n\n// module information\nbsv.version = 'v' + require('./package.json').version\nbsv.versionGuard = function (version) {\n  if (version !== undefined) {\n    var message = `\n      More than one instance of bsv found.\n      Please make sure to require bsv and check that submodules do\n      not also include their own bsv dependency.`\n    console.warn(message)\n  }\n}\nbsv.versionGuard(global._scrypt_bsv)\nglobal._scrypt_bsv = bsv.version\n\n// crypto\nbsv.crypto = {}\nbsv.crypto.BN = require('./lib/crypto/bn')\nbsv.crypto.ECDSA = require('./lib/crypto/ecdsa')\nbsv.crypto.Hash = require('./lib/crypto/hash')\nbsv.crypto.Random = require('./lib/crypto/random')\nbsv.crypto.Point = require('./lib/crypto/point')\nbsv.crypto.Signature = require('./lib/crypto/signature')\n\n// encoding\nbsv.encoding = {}\nbsv.encoding.Base58 = require('./lib/encoding/base58')\nbsv.encoding.Base58Check = require('./lib/encoding/base58check')\nbsv.encoding.BufferReader = require('./lib/encoding/bufferreader')\nbsv.encoding.BufferWriter = require('./lib/encoding/bufferwriter')\nbsv.encoding.Varint = require('./lib/encoding/varint')\n\n// utilities\nbsv.util = {}\nbsv.util.js = require('./lib/util/js')\nbsv.util.preconditions = require('./lib/util/preconditions')\n\n// errors thrown by the library\nbsv.errors = require('./lib/errors')\n\n// main bitcoin library\nbsv.Address = require('./lib/address')\nbsv.Block = require('./lib/block')\nbsv.MerkleBlock = require('./lib/block/merkleblock')\nbsv.BlockHeader = require('./lib/block/blockheader')\nbsv.HDPrivateKey = require('./lib/hdprivatekey.js')\nbsv.HDPublicKey = require('./lib/hdpublickey.js')\nbsv.Networks = require('./lib/networks')\nbsv.Opcode = require('./lib/opcode')\nbsv.PrivateKey = require('./lib/privatekey')\nbsv.PublicKey = require('./lib/publickey')\nbsv.Script = require('./lib/script')\nbsv.Transaction = require('./lib/transaction')\nbsv.ECIES = require('./lib/ecies')\nbsv.HashCache = require('./lib/hash-cache')\n\n// dependencies, subject to change\nbsv.deps = {}\nbsv.deps.bnjs = require('bn.js')\nbsv.deps.bs58 = require('bs58')\nbsv.deps.Buffer = Buffer\nbsv.deps.elliptic = require('elliptic')\nbsv.deps._ = require('./lib/util/_')\n\n// Internal usage, exposed for testing/advanced tweaking\nbsv.Transaction.sighash = require('./lib/transaction/sighash')\n\nbsv.Message = require('./lib/message/message')\nbsv.Mnemonic = require('./lib/mnemonic/mnemonic')\n\n//module.exports = bsv\nexport default bsv"],"names":[],"version":3,"file":"module.js.map"}